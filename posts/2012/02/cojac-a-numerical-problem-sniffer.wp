During my bachelor at the HES-SO University of applied sciences in Fribourg, I worked on a Java project, <strong>COJAC</strong>.

COJAC is a tool performing <strong>On-the-fly code instrumentation</strong> to help uncover numerical problems with integer (overflows) and floating point (smearing, cancellation, infinity, NaN) arithmetic.

Yesterday, Dr Dobbs published an article by one of my professor Frédéric Bapst and myself.

This article discusses the question of numerical problems in programming, and focuses on the approach of using on-the-fly code instrumentation to uncover them at runtime. Two realizations are presented: a complete and stable solution for Java applications, and a proof-of-concept Valgrind add-on for Linux executables. Both tools require no intervention on the source code and no recompilation, and should be helpful as a diagnostic tool for developers, as well as for education purposes for undergraduate programmers.

If you are interested by this project, I invite you to read the article on Dr Dobbs : <a title="Project of the Month: Cojac, A Numerical Problem Sniffer" href="http://drdobbs.com/testing/232601564" target="_blank">Project of the Month: Cojac, A Numerical Problem Sniffer</a>

You can also test the tool or browse the source code by downloading it on the <a title="COJAC - The numerical problem sniffer for Java" href="https://code.google.com/p/cojac/" target="_blank">COJAC website</a>.