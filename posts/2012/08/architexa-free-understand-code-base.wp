<strong>Architexa</strong> is a tool suite that helps a team to document collaboratively a large Java code base. The tool is made for a whole team to understand a code base. The tool is available as an Eclipse plugin.

When several developers are working on a large application, it is not always simple to have a whole view of the application. Even with some documentation of the application code. It is even harder for a new developer that joins the project to know what the code base is about. In all these cases, Architexa will help your team. It can also be useful when you inherit an application.

Starting from today, <strong>Architexa is available for free</strong> <strong>for individuals and for teams of up to three developers</strong>. You can read the official announce at the end of the article.

<h3>My Review of Architexa</h3>

I tried Architexa on several of my current Java Projects, but never in team. So perhaps my point of view is not very accurate regarding to general users of the tool. I made my tests using Eclipse Juno.

However, even when working alone on a project, I think that this tool is very useful.

The installation is very straightforward, you just have to use the update site directly in Eclipse. Then, you have several new options in the EDI to use Architexa features.

Three diagrams are available in the Architexa tool suite:

<ul>
	<li><strong>Class Diagram</strong> : This diagram can be automatically generated for a package, or several packages.</li>
	<li><strong>Sequence Diagram</strong> : You can create Sequence Diagrams for some of your program actions.</li>
	<li><strong>Layered Diagram</strong> : This diagram allows you to represent the architecture of your application. The system allows you to represent several levels of details.</li>
</ul>

You can easily have several diagrams of each type in your project. You can store them as local files, in a server or in the community server to make them available for everyone.

You can add comment in each diagram. In each diagram you can also access the Javadoc of each class. Of course, you can also access any piece of code from your diagrams.

<h3>Advantages</h3>

<ul>
	<li>Architexa is very simple to use. The tool have access to very good guides directly inside the IDE.</li>
	<li>The Real-Time Code analysis is awesome. Once something is in a diagram, it is always kept up to date.</li>
	<li>The sharing features are also great.</li>
	<li>Even if there are fews diagrams, I think that there are largely enough to have a very good understanding of a code base.</li>
	<li>All the graphs looks very nice, there are very readable</li>
</ul>

<h3>Drawbacks</h3>

<ul>
	<li>No support for generics and enums.</li>
	<li>The tool is only available as an Eclipse plugin. I'm especially using IntelliJ Idea and NetBeans.</li>
	<li>The tool is only available for Java. There is a prototype for C/C++ that is available on demand, but I didn't tried it at the current time.</li>
	<li>Sometimes, the creation of a very simple diagram takes a bit long time for my feeling. Creating a diagram with three elements can take several seconds. Perhaps, it is better with larger diagrams. I haven't had the occasion to test it with large code .</li>
</ul>

<h3>Conclusion</h3>

To conclude, Architexa is a great tool suite. It is useful for any Java developers that works in a large application. It allows them to have better understanding of its code base.

The official announce: <a title="Architexa Toolsuite is Now Available for Free" href="http://www.architexa.com/blog/architexa-toolsuite-is-now-available-for-free/">Architexa Tool suite is Now Available for Free</a>

More information on the official site: <a href="http://www.architexa.com/">http://www.architexa.com/</a>