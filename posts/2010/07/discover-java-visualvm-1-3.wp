2 days ago, <strong>Java VisualVM 1.3</strong> has been released. We'll see what's new with this release. 

At this time, there is no package for Ubuntu, so we'll install it manually : 

<pre>wget https://visualvm.dev.java.net/files/documents/7163/151728/visualvm_13.zip
unzip visualvm_13.zip</pre>

And then we can directly launch it : 

<pre>cd visualvm_13/bin
sh visualvm</pre>

You'll be asked for the license agreement and after that the tool is launched : 

<a href="/wp-content/uploads/2010/07/VisualVM-1.3-Startup.png"><img src="/wp-content/uploads/2010/07/VisualVM-1.3-Startup-300x159.png" alt="VisualVM 1.3 Startup" title="VisualVM 1.3 Startup" width="300" height="159" class="size-medium wp-image-848"></a>

<!-- TEASER_END -->

Here there is nothing new, except for the change of version of course. So let's profile something. In my case, I profile IntelliJ Idea for the test, but this doesn't change anything. We immediately see that there is a new tab (Sampler). If we watch the three first tabs (Overview, Monitor and Threads), we see that there is no changes. 

The Sampler tab is simply a plugin (VisualVM Sampler Plugin) that has been integrated by default in VisualVM. Sampling is not like profiling. There is no instrumentation, so no setup time and almost no overhead, the application run at full speed. This is achieved by periodically polling the monitored application for thread dumps or memory histograms. So let's test to the Sampler tab : 

<a href="/wp-content/uploads/2010/07/VisualVM-1.3-Sampler.png"><img src="/wp-content/uploads/2010/07/VisualVM-1.3-Sampler-300x196.png" alt="VisualVM 1.3 Sampler" title="VisualVM 1.3 Sampler" width="300" height="196" class="size-medium wp-image-843"></a>

Like, int the Profiler tab, we can launch CPU or Memory sampling. So let's try CPU : 

<a href="/wp-content/uploads/2010/07/VisualVM-1.3-Sampler-CPU.png"><img src="/wp-content/uploads/2010/07/VisualVM-1.3-Sampler-CPU-300x196.png" alt="VisualVM 1.3 CPU Sampling" title="VisualVM 1.3 CPU Sampling" width="300" height="196" class="size-medium wp-image-846"></a>

You will immediately see the speed of the results, there is no time to wait, but the refreshes are slower of course, because, it's periodic. The results are like in the Profiler tab. If we start Memory Sampling : 

<a href="/wp-content/uploads/2010/07/VisualVM-1.3-Sampler-Memory.png"><img src="/wp-content/uploads/2010/07/VisualVM-1.3-Sampler-Memory-300x206.png" alt="VisualVM 1.3 Memory Sampling" title="VisualVM 1.3 Memory Sampling" width="300" height="206" class="size-medium wp-image-845"></a>

Once again, the results are the same as with the Profiler, but we see a new feature, the PermGen histogram : 

<a href="/wp-content/uploads/2010/07/VisualVM-1.3-Sampler-PermGen.png"><img src="/wp-content/uploads/2010/07/VisualVM-1.3-Sampler-PermGen-300x153.png" alt="VisualVM 1.3 PermGen Histogram" title="VisualVM 1.3 PermGen Histogram" width="300" height="153" class="size-medium wp-image-844"></a>

That could be really useful to see why your application takes a lot of PermGen space or simply to see that there is not enough PermGen space. 

There is another new feature in this version. The Tracer Probes. But by default, there is no installed probes, so you must install plugins to see them : 

<a href="/wp-content/uploads/2010/07/VisualVM-1.3-Plugins.png"><img src="/wp-content/uploads/2010/07/VisualVM-1.3-Plugins-300x77.png" alt="VisualVM 1.3 Probes Plugins" title="VisualVM 1.3 Probes Plugins" width="300" height="77" class="size-medium wp-image-847"></a>

Then, just click install, accept the license agreement and let the application restart. And then, if you launch the profiling of an application, you'll see the Tracer tab : 

<a href="/wp-content/uploads/2010/07/VisualVM-1.3-Tracer.png"><img src="/wp-content/uploads/2010/07/VisualVM-1.3-Tracer-300x290.png" alt="VisualVM 1.3 Tracer" title="VisualVM 1.3 Tracer" width="300" height="290" class="size-medium wp-image-840"></a>

You see that there is a lot of probes that we can enable. So let's enable some probes and Start the Tracer : 

<a href="/wp-content/uploads/2010/07/VisualVM-1.3-Tracer-Graphs.png"><img src="/wp-content/uploads/2010/07/VisualVM-1.3-Tracer-Graphs-275x300.png" alt="VisualVM 1.3 Tracer Graphs" title="VisualVM 1.3 Tracer Graphs" width="275" height="300" class="size-medium wp-image-842"></a>

Like the profiler, there is a needed time of instrumentation and after that, you will see some graphs. There is a graph for each probe you selected. Each probe display some specific data, by example, the Threads Probe display the number of threads and the number of Deamon threads and the JIT Compiler Probe display the activity of the JIT compiler. Here I've also enabled some Swing probes because IntelliJ Idea use Swing, but you have also Probes for JavaFX by example.  If you pass the mouse on the graphs, you will see the exact values at the time where the cursor is : 

<a href="/wp-content/uploads/2010/07/VisualVM-1.3-Tracer-Mouse.png"><img src="/wp-content/uploads/2010/07/VisualVM-1.3-Tracer-Mouse-300x247.png" alt="VisualVM 1.3 Tracer Mouse Details" title="VisualVM 1.3 Tracer Mouse Details" width="300" height="247" class="size-medium wp-image-841"></a>

It's think this new Tracer is just awesome. It's really useful and really good-looking. 

So we've now covered the main new features of this new version. I think this version adds some great new features and improvements and that will make of VisualVM an essential profiler. 

For the complete information about this new version, read the <a target="_blank" href="https://visualvm.dev.java.net/relnotes.html">release notes</a>.