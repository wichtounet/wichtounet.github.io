When you makes a lot of build using <strong>Maven</strong>, this is quickly a pain to wait for the end of the build. So this is always good to have solutions to improve the <strong>performances</strong> of the builds.

The better improvement i found until now is the <strong>maven-cli-plugin</strong>. This plugin provides an <strong>interactive command line</strong> interface to launch builds. The improvement is that the first phases of the build are made only once. So multiple builds are really <strong>faster</strong>. We loose a little time at the first build to make some <strong>caching</strong> improvements.

With these features, I save a lot of time when I made a lot of builds. For example a simple clean takes sometimes 20 seconds on a big multimodule project. When using the cli, it takes 20 seconds including the time to load the shell for the first time and then it takes only 1 second the make the following cleans. The effect is the same on other phases like install, package, compile, ...

The installation is quite simple. First you must add a plugin group to the settings.xml file :

```xml
<settings>
  <pluginGroups>
    <pluginGroup>org.twdata.maven</pluginGroup>
    ...
  </pluginGroups>
  ...
</settings>
```

And then add a new repository for the manve-cli-plugin : 

```xml
<pluginRepositories>
     <pluginRepository>
          <id>twdata-m2-repository</id>
          <name>twdata.org Maven 2 Repository</name>
          <url>http://twdata-m2-repository.googlecode.com/svn/</url>
     </pluginRepository>
</pluginRepositories>
```

And you just have to use the following command on a Maven project : 

</p><pre>mvn cli:execute-phase</pre>

With that the plugin will be downloaded automatically and the next commands will be executed directly. 

The usage is very easy. This plugin has 2 useful goals : 

<ul>
	<li>execute : Open a shell and allows you to execute goals of plugins. </li>
	<li>execute-phase : Open a shell and allows you to execute phases of the maven build. </li>
</ul>

The main difference is that if you launch install from the execute-phase, all the preceding phases will be executed, but that's not the case with execute, only install will be executed. 

Personally, I only execute phases, so I always use the execute-phase of the cli plugin. 

When you're in the shell, you can launch several phases or goals : 

<pre>maven> clean install</pre>

And you can directly add arguments in the command : 

<pre>maven> clean install -Dmaven.test.skip=true</pre>

And when you are building a multimodule projects, you can also execute phases only on several modules : 

<pre>maven> module1 module2 module3 clean install</pre>

You can use the ls command in a multi module project to list all the modules of the project. You can use the "Tab" key to auto complete the goals, phases and modules name. 

When you've finished your builds, you can simply use the "exit" command to exit from the command line. 

I think it's really a great essential plugin for each person who make Maven builds.  

More information <a href="http://wiki.github.com/mrdon/maven-cli-plugin/" target="_blank">on the official site</a>.