<h3>1. JR Programming language</h3>

This article will present you the installation of JR on Windows. It's not an article to learn the JR programming language, this article focus on the installation of JR on Windows.

JR is a programming language especially created to resolve concurrent programming problems. This language is an overlay of Java who add to this last the main paradigms of the concurrent programming. Moreover, JR make easier some concepts also implemented in Java like the process or the semaphores. There is also extensions to JR to implement other functionalities like monitors and Conditional Critical Region (CCR). JR is the implemenation of the SR language for Java.

JR is mainly used as a school support to learn concurrent programming.

In this article, we'll see how to install the JR environment under Windows.

The used version is the one of June 2009, the 2.00602 who is based on Java 6.0.

<h3>2. Prerequisites</h3>

The prerequisites of JR are not many, you need two things :

<ul>
	<li>Java : in the case of the last version of JR, you need Java 6.0. An older version (1.00601) is still available for Java 1.4. To install it if it's not yet the cas, go to the <a title="Website of Sun" href="http://java.com/en/download/index.jsp" target="_blank">website of Sun</a> and follow the described procedure.</li>
	<li>Perl : go on <a title="Official Site of Perl" href="http://www.activestate.com/activeperl/" target="_blank">the official site</a> and download the last version of ActivePerl. Then, you just have to follow the installation procedure.</li>
</ul>

Once this two programs installed, we can go to the installation of JR.

<!-- TEASER_END -->

<h3>3. Installation</h3>

The installation under Linux is quite simple, but under Windows, it's a little more complicated.

The first thing to do is to download JR :

<ul>
	<li><a href="http://www.cs.ucdavis.edu/~olsson/research/jr/versions/2.00602/jr.tar">Tar format</a></li>
	<li><a href="http://www.cs.ucdavis.edu/~olsson/research/jr/versions/2.00602/jr.tar.gz">Tar.Gz format</a></li>
	<li><a href="http://www.cs.ucdavis.edu/~olsson/research/jr/versions/2.00602/jr.zip">Zip format</a></li>
</ul>

Once the donwload finished, you have to decompress the file where you want to install the program. In the rest of the article, we will use C:\Program Files\JR\ for installation folder. If you doesn't install the program here, you just have to replace this with your installation folder.

Then, you have to configure several environment variables. First of all, you have to set the JR_HOME variable who must point to the installation folder : JR_HOME=C:\Program Files\JR\.

After that, you have to add JR_HOME to the PATH : PATH=%PATH%;%JR_HOME%\bin\ to use the JR commands.

You have also to create the CLASSPATH to integrate the classes of JR : CLASSPATH=.;%JR_HOME%\classes\jrt.jar;%JR_HOME%\classes\jrx.jar. Be careful to not forget the dot at the beginning of the variable.

The, you have to configure two constants : JRSH=cmd et JRSHC=/C.

To resume, here are all the environments variables and their value.

<pre>JR_HOME=C:\Program Files\JR\
PATH=%PATH%;%JR_HOME%\bin\
CLASSPATH=.;%JR_HOME%\classes\jrt.jar;%JR_HOME%\classes\jrx.jar
JRSH=cmd
JRSHC=/C</pre>

Then, JR must works fine.

<h3>4. Test the installation</h3>

Now, we can test the installation. For that, open a command line (Start menu -&gt; Execute -&gt; cmd) et move to the JR folder with the cd command :

<pre>cd %JR_HOME%</pre>

And then launch this two commands :

<pre>cd vsuite
..\jrv\jrv quick</pre>

This should start serveral tests. It will just display some informations about your system. And if all works fine, you should see something like that :

<pre>C:\Program Files\JR\vsuite&gt;..\jrv\jrv quick
Starting JRV
JR_HOME= C:\Program Files\JR\
JRC=     perl "C:\Program Files\JR\/bin/jrc"
JRRUN=   perl "C:\Program Files\JR\/bin/jrrun"
JAVAC=   "C:\Program Files\Java\jdk1.6.0_17/bin\javac.EXE"
JAVA=    "C:\Program Files\Java\jdk1.6.0_17/bin\java.EXE"
ccr2jr=  perl "C:\Program Files\JR\/bin/ccr2jr"
csp2jr=  perl "C:\Program Files\JR\/bin/csp2jr"
m2jr=    perl "C:\Program Files\JR\/bin/m2jr"
WHICH=   perl "C:\Program Files\JR\/bin/which.pl"
CMP=     perl "C:\Program Files\JR\/bin/cmp.pl"
GREP=    perl "C:\Program Files\JR\/bin/grep.pl"
SORT=    perl "C:\Program Files\JR\/bin/sort.pl"
TAIL=    perl "C:\Program Files\JR\/bin/tail.pl"
jr compiler version "2.00602 (Mon Jun 1 10:59:20 PDT 2009)"
jr rts      version "2.00602 (Mon Jun 1 10:59:25 PDT 2009)"
HOST= DESKTOP-PC
Start Directory= C:\Program Files\JR\/vsuite
JR.JRT = C:\Program Files\JR\/classes/jrt.jar
  -rw-rw-rw-   1 0        0          2090324 Jun  1  2009 C:\Program Files\JR\/classes/jrt.jar
JR.JRX = C:\Program Files\JR\/classes/jrx.jar
  -rw-rw-rw-   1 0        0           227198 Jun  1  2009 C:\Program Files\JR\/classes/jrx.jar
Operating System= Windows_NT
original CLASSPATH= .;C:\Program Files\JR\\classes\jrt.jar;C:\Program Files\JR\\classes\jrx.jar
jrv sets CLASSPATH= .;C:\Program Files\JR\/classes/jrt.jar;C:\Program Files\JR\/classes/jrx.jar
DATE= Thu Jan 14 19:01:35 2010
quick/baby:
quick/fact_2:
quick/misc_invocation_count_st_by_0:
DATE= Thu Jan 14 19:01:45 2010
Elapsed time (hh:mm:ss)= 00:00:10</pre>

If you want to launch more tests, you can do it launching this command :

<pre>..\jrv\jrv</pre>

This time, the program will execute a lot of tests. This tests can take a long time, fast an hour on some system. Moreover, several tests needs RSH, but it's not useful in our case.

<h3>5. Conclusion</h3>

If we follow all this steps of the installation, JR is not as hard to install. You just have to configure the variables and to launch the installation test.

If you want more informations about the JR language, i'll invite you to consult the <a href="http://www.cs.ucdavis.edu/~olsson/research/jr/">official site</a> of one of his creators, Ronald A. Olsson.