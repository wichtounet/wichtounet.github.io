<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Blog blog("Baptiste Wicht"); (Posts about Visual Studio)</title><link>http://baptiste-wicht.com/</link><description></description><atom:link rel="self" type="application/rss+xml" href="http://baptiste-wicht.com/categories/visual-studio.xml"></atom:link><language>en</language><lastBuildDate>Sun, 04 Jun 2017 20:17:43 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Using LINQ to query Sharepoint lists</title><link>http://baptiste-wicht.com/posts/2011/01/using-linq-to-query-sharepoint-lists.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;div&gt;&lt;p&gt;When I started using Sharepoint 2010 with .NET, I used the Sharepoint 2010 API to query the Sharepoint Lists, but when I come with lookup column with multiple values, it started to be really difficult to use.&lt;/p&gt;
&lt;p&gt;So I found that I can use LINQ to query Sharepoint lists and for what I saw on the internet, it was really simple to use. LINQ provide a complete API to query data and to update them. More than that, LINQ is also able to do mapping object-relational, what is really helpful in code lisibility.&lt;/p&gt;
&lt;p&gt;In this code, I will take as example a Sharepoint site with two lists :&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;departments : only a Title column&lt;/li&gt;
    &lt;li&gt;projects : Title, year, nbstudents and department, a lookup column to departments with multiple values&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So first of all, you need to create the entities and the data context, but you don't have to do it by hand. There is a tool that make all that for you, SPMetal.&lt;/p&gt;
&lt;p class="more"&gt;&lt;a href="http://baptiste-wicht.com/posts/2011/01/using-linq-to-query-sharepoint-lists.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>Sharepoint</category><category>Visual Studio</category><guid>http://baptiste-wicht.com/posts/2011/01/using-linq-to-query-sharepoint-lists.html</guid><pubDate>Wed, 12 Jan 2011 11:47:12 GMT</pubDate></item><item><title>Export a Sharepoint 2010 site as Solution Package</title><link>http://baptiste-wicht.com/posts/2011/01/export-a-sharepoint-2010-site-as-solution-package.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;div&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;From several days, I started developing with Sharepoint 2010 for a School project. It's not as easy as I thought in my first opinion. So I will try to share some solutions I found with you&lt;/p&gt;
&lt;p&gt;In Sharepoint 2007, we used Solution Generator to create a wsp file of the site and then we can use this wsp file in Visual Studio for example.&lt;/p&gt;
&lt;p&gt;But in Sharepoint 2010, you can do it directly in the site administration. Go in Site Settings -&amp;gt; Site action and then choose "Save site as template". Then, you just have to provide a name and description and you can save  the template.&lt;/p&gt;
&lt;p&gt;In the next view, you have a link to the Solution gallery. Go in this view and then click on your template and you can download the .wsp file.&lt;/p&gt;
&lt;p&gt;In some cases, we can have some problems during export... Try to create a blank site et add only the things you want to export and then retry.&lt;/p&gt;
&lt;p&gt;When you've the wsp file, you can import it in Visual Studio 2010 using New Project -&amp;gt; Import Sharepoint Solution Package. This can take a lot of time to import all the content of the package.&lt;/p&gt;
&lt;p&gt;With that, you can create things in Sharepoint and then use and edit them in Visual Studio.&lt;/p&gt;
&lt;p&gt;I hope this can be useful to someone.&lt;/p&gt;&lt;/div&gt;</description><category>Sharepoint</category><category>Visual Studio</category><guid>http://baptiste-wicht.com/posts/2011/01/export-a-sharepoint-2010-site-as-solution-package.html</guid><pubDate>Thu, 06 Jan 2011 05:12:42 GMT</pubDate></item></channel></rss>