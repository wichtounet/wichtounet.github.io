<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Blog blog("Baptiste Wicht"); (Posts about Play!)</title><link>http://baptiste-wicht.com/</link><description></description><atom:link rel="self" type="application/rss+xml" href="http://baptiste-wicht.com/categories/play.xml"></atom:link><language>en</language><lastBuildDate>Sun, 04 Jun 2017 20:17:48 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Play Framework - The template engine</title><link>http://baptiste-wicht.com/posts/2010/07/play-framework-template-engine.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;div&gt;&lt;p&gt;In the previous post about &lt;strong&gt;Play Framework&lt;/strong&gt;, we seen &lt;a title="Getting started with Play Framework" href="http://www.baptiste-wicht.com/2010/07/getting-started-play-framework/" target="_blank"&gt;how to install Play and create a first simple application&lt;/a&gt;. In this post, we'll see how to customize the views and use the template engine of the framework to easily create web pages.&lt;/p&gt;
&lt;p&gt;Play has its own template engine to generate HTML web pages. The template engine use Groovy as expression language. You will use Groovy language to create all the dynamic parts of the web pages. But there is no need to learn completely Grooxy, it's really close to Java and if you know already knows Java, there is no problem to use Groovy in your templates. All the templates are located in the app/views folder in your application. All the dynamic part of the web page is resolved during the execution of the template and the result is a part of the HTTP Response.&lt;/p&gt;
&lt;p class="more"&gt;&lt;a href="http://baptiste-wicht.com/posts/2010/07/play-framework-template-engine.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>Java</category><category>Play!</category><category>Web</category><guid>http://baptiste-wicht.com/posts/2010/07/play-framework-template-engine.html</guid><pubDate>Mon, 19 Jul 2010 04:55:51 GMT</pubDate></item><item><title>Tip : Integrate Play Framework in IntelliJ Idea</title><link>http://baptiste-wicht.com/posts/2010/07/integrate-play-framework-intellij-idea.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;div&gt;&lt;p&gt;After &lt;a target="_blank" href="http://www.baptiste-wicht.com/2010/07/getting-started-play-framework/"&gt;created a &lt;strong&gt;Play Framework&lt;/strong&gt; first application&lt;/a&gt;, it's time to integrate it in &lt;strong&gt;IntelliJ Idea&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;This is made really easy because, play provide a command to create the Iml module file for the project. You can use the command play idealize app_name to create a iml module file. &lt;/p&gt;
&lt;p class="more"&gt;&lt;a href="http://baptiste-wicht.com/posts/2010/07/integrate-play-framework-intellij-idea.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>IntelliJ Idea</category><category>Java</category><category>Play!</category><category>Tips</category><guid>http://baptiste-wicht.com/posts/2010/07/integrate-play-framework-intellij-idea.html</guid><pubDate>Tue, 06 Jul 2010 05:02:49 GMT</pubDate></item><item><title>Getting started with Play Framework</title><link>http://baptiste-wicht.com/posts/2010/07/getting-started-play-framework.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;div&gt;&lt;p&gt;It's time for me to test the &lt;strong&gt;Play Framework&lt;/strong&gt; and I'll try to make some posts during my tests about this web framework. &lt;/p&gt;
&lt;p&gt;Play Framework is a framework to create web applications in Java. The main goals of this framework are (according to the official site) : &lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;Hot reload&lt;/strong&gt; : You can edit your java files and html files and you just have to refresh the browser to see the results&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Stateless model&lt;/strong&gt; : Play is ready for REST, it can be scaled running multiple instances of the same applications on several servers&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Efficient Template System&lt;/strong&gt; : The template system is really easy to use, based on Groovy.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Resolve errors quickly&lt;/strong&gt; : When an error occurs, Play displays directly the code source in the browser and the location of the error&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Integration&lt;/strong&gt; : Play provide integration for Hibernate, OpenID, MemCached and others popular frameworks&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Pure Java&lt;/strong&gt; : You make only Java and HTML, no other things to learn and easy integration in IDE. &lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Fast&lt;/strong&gt; : The startup of application is really fast the rendering of the pages also very fast.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this post, we'll see how to install the Play Framework and how to write our first Hello World. &lt;/p&gt;
&lt;p class="more"&gt;&lt;a href="http://baptiste-wicht.com/posts/2010/07/getting-started-play-framework.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>Java</category><category>Play!</category><category>Web</category><guid>http://baptiste-wicht.com/posts/2010/07/getting-started-play-framework.html</guid><pubDate>Mon, 05 Jul 2010 05:02:34 GMT</pubDate></item><item><title>Links of the week (April 20)</title><link>http://baptiste-wicht.com/posts/2010/04/links-of-the-week-3.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;div&gt;&lt;p&gt;Some interesting links of the week:&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;Poll Results: &lt;a href="http://java.dzone.com/articles/poll-results-there-future-web" target="_blank"&gt;We're Not Quite Ready For Web Based IDEs&lt;/a&gt; : Interesting poll results on how the developers are ready about web based IDEs&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.lunatech-research.com/archives/2010/04/12/how-localise-play-framework-web-application" target="_blank"&gt;How to localise a Play Framework application&lt;/a&gt; : Peter Hilton explain how internationalize a Play! Framework application&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://sixrevisions.com/tools/the-top-15-google-products-for-people-who-build-websites/" target="_blank"&gt;The Top 15 Google Products for People Who Build Websites &lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://mcoj.wordpress.com/2010/04/18/swinging-task-dialog-part-5/" target="_blank"&gt;Swinging Task Dialog (part 5)&lt;/a&gt; : Eugene Ryzhikov continue its suite on developing a Swing Task Dialog, adding new functionaly. &lt;/li&gt;
    &lt;li&gt;&lt;a href="http://www.mkyong.com/java/how-to-determine-a-prime-number-in-java/"&gt;How to determine a prime number in Java&lt;/a&gt; : An interesting development on how to determine a prime number in an efficent way&lt;/li&gt; 
&lt;/ul&gt;&lt;/div&gt;</description><category>Google</category><category>Java</category><category>Links</category><category>Performances</category><category>Play!</category><category>Swing</category><category>Tools</category><category>Web</category><guid>http://baptiste-wicht.com/posts/2010/04/links-of-the-week-3.html</guid><pubDate>Tue, 20 Apr 2010 05:20:28 GMT</pubDate></item></channel></rss>