<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Blog blog("Baptiste Wicht"); (Posts about Spring)</title><link>http://baptiste-wicht.com/</link><description></description><atom:link rel="self" type="application/rss+xml" href="http://baptiste-wicht.com/categories/spring.xml"></atom:link><language>en</language><lastBuildDate>Sun, 04 Jun 2017 20:17:44 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>JTheque Core 2.1.0 released !</title><link>http://baptiste-wicht.com/posts/2010/10/jtheque-core-2-1-0-released.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;div&gt;&lt;p&gt;It's my pleasure to announce that I've finally released &lt;strong&gt;JTheque Core 2.1.0&lt;/strong&gt; !&lt;/p&gt;
&lt;p&gt;The different services of the core are now separated using &lt;strong&gt;OSGi&lt;/strong&gt;. With this separation, I've improved a lot the design of the core and the orthogonality of the different services. Each service is now an OSGi bundle. I've also refactored the implementation of all services. Several services have been completely rewritten. The majority of the bundles are now thread-safe.&lt;/p&gt;
&lt;p&gt;Now, to create modules for a JTheque application, you have to write an OSGi bundle representing the module. Then, you only have to use Spring to launch the module. This is done using &lt;strong&gt;Spring Dynamic Modules&lt;/strong&gt;. The used OSGi container is &lt;strong&gt;Felix&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Now that this version of the core is finalized, I'll updates the applications. First of all, JTheque Movies with the new version of the core.&lt;/p&gt;
&lt;p&gt;Fore more informations and to download JTheque Core, you can go on &lt;a href="http://www.jtheque.com/jtheque-core"&gt;the description page&lt;/a&gt;. If you want to try developing a module (or see how it is done), you can consult &lt;a href="http://www.jtheque.com/jtheque-core/guides/develop-modular-application-jtheque-core-2-1-0"&gt;this starter guide&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</description><category>Java</category><category>JTheque</category><category>Modular</category><category>OSGi</category><category>Releases</category><category>Spring</category><guid>http://baptiste-wicht.com/posts/2010/10/jtheque-core-2-1-0-released.html</guid><pubDate>Wed, 20 Oct 2010 05:12:33 GMT</pubDate></item><item><title>OSGI and Spring Dynamic Modules - Simple Hello World</title><link>http://baptiste-wicht.com/posts/2010/07/osgi-spring-dynamic-modules-hello-world.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;div&gt;&lt;p&gt;In this post, we'll take &lt;a target="_blank" href="http://www.baptiste-wicht.com/2010/07/osgi-hello-world-services/"&gt;the first implementation we made using &lt;strong&gt;OSGi&lt;/strong&gt;&lt;/a&gt; and use &lt;strong&gt;Spring Dynamic Modules&lt;/strong&gt; to improve the application. &lt;/p&gt;
&lt;p&gt;Spring Dynamic Modules (Spring Dm) makes the development of &lt;strong&gt;OSGi-based applications&lt;/strong&gt; a lot more easier. With that, the deployment of services is a lot easier. You can inject services like any other Spring beans. &lt;/p&gt;
&lt;p&gt;So let's start with Spring dm. &lt;/p&gt;
&lt;p class="more"&gt;&lt;a href="http://baptiste-wicht.com/posts/2010/07/osgi-spring-dynamic-modules-hello-world.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>Java</category><category>OSGi</category><category>Spring</category><guid>http://baptiste-wicht.com/posts/2010/07/osgi-spring-dynamic-modules-hello-world.html</guid><pubDate>Wed, 21 Jul 2010 05:10:52 GMT</pubDate></item><item><title>JTheque is going to OSGi</title><link>http://baptiste-wicht.com/posts/2010/03/jtheque-is-going-to-osgi.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;div&gt;&lt;p&gt;Just a little post to inform you that i'm currently migrating JTheque Core to OSGI / Spring Dynamic Modules. The core will be fractioned into several bundles. The JTheque Modules will also be OSGi bundles.&lt;/p&gt;
&lt;p&gt;It will increase the modularity of the different services of the Core. And it will also be a more standard way to develop modules. And last but not least, it's an opportunity for me to learn OSGi and Spring Dm.&lt;/p&gt;&lt;/div&gt;</description><category>Java</category><category>JTheque</category><category>Modular</category><category>OSGi</category><category>Spring</category><guid>http://baptiste-wicht.com/posts/2010/03/jtheque-is-going-to-osgi.html</guid><pubDate>Tue, 02 Mar 2010 12:35:52 GMT</pubDate></item></channel></rss>