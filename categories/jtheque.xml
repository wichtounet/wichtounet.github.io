<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Blog blog("Baptiste Wicht"); (Posts about JTheque)</title><link>http://baptiste-wicht.com/</link><description></description><atom:link rel="self" type="application/rss+xml" href="http://baptiste-wicht.com/categories/jtheque.xml"></atom:link><language>en</language><lastBuildDate>Sun, 04 Jun 2017 20:17:48 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>JTheque Core 2.1.0 released !</title><link>http://baptiste-wicht.com/posts/2010/10/jtheque-core-2-1-0-released.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;div&gt;&lt;p&gt;It's my pleasure to announce that I've finally released &lt;strong&gt;JTheque Core 2.1.0&lt;/strong&gt; !&lt;/p&gt;
&lt;p&gt;The different services of the core are now separated using &lt;strong&gt;OSGi&lt;/strong&gt;. With this separation, I've improved a lot the design of the core and the orthogonality of the different services. Each service is now an OSGi bundle. I've also refactored the implementation of all services. Several services have been completely rewritten. The majority of the bundles are now thread-safe.&lt;/p&gt;
&lt;p&gt;Now, to create modules for a JTheque application, you have to write an OSGi bundle representing the module. Then, you only have to use Spring to launch the module. This is done using &lt;strong&gt;Spring Dynamic Modules&lt;/strong&gt;. The used OSGi container is &lt;strong&gt;Felix&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Now that this version of the core is finalized, I'll updates the applications. First of all, JTheque Movies with the new version of the core.&lt;/p&gt;
&lt;p&gt;Fore more informations and to download JTheque Core, you can go on &lt;a href="http://www.jtheque.com/jtheque-core"&gt;the description page&lt;/a&gt;. If you want to try developing a module (or see how it is done), you can consult &lt;a href="http://www.jtheque.com/jtheque-core/guides/develop-modular-application-jtheque-core-2-1-0"&gt;this starter guide&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</description><category>Java</category><category>JTheque</category><category>Modular</category><category>OSGi</category><category>Releases</category><category>Spring</category><guid>http://baptiste-wicht.com/posts/2010/10/jtheque-core-2-1-0-released.html</guid><pubDate>Wed, 20 Oct 2010 05:12:33 GMT</pubDate></item><item><title>JTheque Utils 1.1.5</title><link>http://baptiste-wicht.com/posts/2010/09/jtheque-utils-1-1-5.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;div&gt;&lt;p&gt;It's my pleasure to announce the release of a new version of &lt;strong&gt;JTheque Utils&lt;/strong&gt;, the &lt;strong&gt;1.1.5&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;There is a lot of changes in this version. First of all, the library is now OSGi Ready, you can use it with no problem in an OSGi application. Here are the main changes of this version :&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;ul&gt;
    &lt;li&gt;The main classes have been made thread safe and all the classes are now documented to indicate if they are thread safe, not thread safe or immutable.&lt;/li&gt;
    &lt;li&gt;The library has now some annotations to document thread safety, thanks to Brian Goetz for the idea&lt;/li&gt;
    &lt;li&gt;SwingUtils support now headless environment&lt;/li&gt;
    &lt;li&gt;Version has a better version comparison&lt;/li&gt;
    &lt;li&gt;A new simple way to manage system properties with the SystemProperty class&lt;/li&gt;
    &lt;li&gt;CollectionUtils has a new set of methods to create collections and concurrent collections&lt;/li&gt;
    &lt;li&gt;A simple thread safe weak event listener list, WeakEventListenerList&lt;/li&gt;
    &lt;li&gt;HashCodeUtils has been improved to manage arrays&lt;/li&gt;
    &lt;li&gt;Some classes have been made Immutable&lt;/li&gt;
    &lt;li&gt;The utility class have new methods&lt;/li&gt;
    &lt;li&gt;And a lot of other little changes and bug fixes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More informations on &lt;a title="JTheque Utils" href="http://www.jtheque.com/jtheque-utils" target="_self"&gt;the JTheque website&lt;/a&gt;.  You can download it &lt;a title="Downloads of JTheque Utils" href="http://www.jtheque.com/jtheque-utils/downloads" target="_blank"&gt;from here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I hope that this library will be useful to someone.&lt;/p&gt;&lt;/div&gt;</description><category>Java</category><category>JTheque</category><category>Libraries</category><category>OSGi</category><category>Releases</category><guid>http://baptiste-wicht.com/posts/2010/09/jtheque-utils-1-1-5.html</guid><pubDate>Thu, 16 Sep 2010 06:01:19 GMT</pubDate></item><item><title>A website for JTheque</title><link>http://baptiste-wicht.com/posts/2010/08/a-website-for-jtheque.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;div&gt;&lt;p&gt;I've the pleasure to inform you that I've created a &lt;strong&gt;new website in English for JTheque&lt;/strong&gt; : &lt;a title="JTheque Project Website" href="http://www.jtheque.com" target="_blank"&gt;http://www.jtheque.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The old websites of JTheque (a French website and a French forge) were completely out of date and were too complicated too manage. This time I created an english, really simple, website to add the more useful informations about my JTheque projects. I always wanted to have a real website for JTheque. Before that, I had the Maven auto generated websites, but this is not a real website and it's not really good-looking. I used Google Sites to create this website.&lt;/p&gt;
&lt;p&gt;At this time, I've included three projects in the website : JTheque Core, JTheque Utils and JTheque XML Utils. There is not a lot of informations for the moment,  but from this time I'll include all the future informations in this new website and I will of course inform you via this blog of all the informations about my projects.&lt;/p&gt;
&lt;p&gt;I hope that this website will interest you and that it will help to promote a little my JTheque Project.&lt;/p&gt;
&lt;p&gt;If you found any error on the website, don't hesitate to contact me, via comment or email or whatever you want. If you need more informations on one or more project, don't hesitate to request them and I will include them in the website as soon as possible.&lt;/p&gt;&lt;/div&gt;</description><category>Java</category><category>JTheque</category><guid>http://baptiste-wicht.com/posts/2010/08/a-website-for-jtheque.html</guid><pubDate>Sat, 14 Aug 2010 09:51:40 GMT</pubDate></item><item><title>JTheque is migrating to Git</title><link>http://baptiste-wicht.com/posts/2010/06/jtheque-is-migrating-to-git.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;div&gt;&lt;p&gt;Some informations about the current state of JTheque. I'm currently migrating it from SVN to Git. Actually the projet is hosted at Developpez.com, a french community. For more visibility, i wanted to host it in an english website. After several days of comparative, I chosen Github has host. Because i chose Git, i think it's the best and easier community to share projects using Git.&lt;/p&gt;
&lt;p&gt;I will use a subdomain in this website (jtheque.baptiste-wicht.com) to host the Javadoc and maven reports, because it take too space to store it at GitHub. I will use GitHub for the sources, issues and Wiki.&lt;/p&gt;
&lt;p&gt;After only several days of work with Git, I found it really fun and comfortable to work with.&lt;/p&gt;
&lt;p&gt;Here are the already created projects on GitHub :&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://github.com/wichtounet/jtheque-utils" target="_blank"&gt;jtheque-utils&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://github.com/wichtounet/jtheque-unit-utils" target="_blank"&gt;jtheque-unit-utils&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://github.com/wichtounet/jtheque-xml-utils" target="_blank"&gt;jtheque-xml-utils&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://github.com/wichtounet/jtheque-core" target="_blank"&gt;jtheque-core&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://github.com/wichtounet/jtheque-primary-utils" target="_blank"&gt;jtheque-primary-utils&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://github.com/wichtounet/jtheque-movies-module" target="_blank"&gt;jtheque-movies-module&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://github.com/wichtounet/jtheque-memory-module" target="_blank"&gt;jtheque-memory-module&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://github.com/wichtounet/jtheque-osgi-wrap" target="_blank"&gt;jtheque-osgi-wrap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of them are not completed at all. But the start is here. Don't hesitate to comment on how I did that. I've also already created a site for jtheque-xml-utils (&lt;a href="http://jtheque.baptiste-wicht.com/xml-utils/"&gt;http://jtheque.baptiste-wicht.com/xml-utils/&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;I will migrate all the projects into Git and complete the GitHub repositories and Maven Site the next few weeks.&lt;/p&gt;
&lt;p&gt;If I didn't post a lot these last weeks, it's because, it's the end of the semester, so it seems a lot of exams and projects to finish, so not a lot of time to post. I will do better the next month.&lt;/p&gt;&lt;/div&gt;</description><category>Git</category><category>Java</category><category>JTheque</category><guid>http://baptiste-wicht.com/posts/2010/06/jtheque-is-migrating-to-git.html</guid><pubDate>Tue, 15 Jun 2010 14:40:56 GMT</pubDate></item><item><title>JTheque licensed under Apache License 2.0</title><link>http://baptiste-wicht.com/posts/2010/05/jtheque-licensed-under-apache-license-2-0.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;div&gt;&lt;p&gt;I decided to change the licence of all the JTheque Projects (The Core, the Utils and all the applications) to &lt;a href="http://www.apache.org/licenses/LICENSE-2.0.html"&gt;Apache Licence 2.0&lt;/a&gt;. The current license was GNU GPL V3. &lt;/p&gt;
&lt;p&gt;I wanted to remove the copyleft clause of the GPL License to make the use of JTheque more simple and more open. For me the copyleft is not really important, I need only the copyright clause. &lt;/p&gt;
&lt;p&gt;So, all the next versions of one of the JTheque Projects will now be made available under the Terms of the Apache License 2.0.&lt;/p&gt;&lt;/div&gt;</description><category>Apache</category><category>JTheque</category><category>Others</category><guid>http://baptiste-wicht.com/posts/2010/05/jtheque-licensed-under-apache-license-2-0.html</guid><pubDate>Tue, 04 May 2010 12:49:20 GMT</pubDate></item><item><title>First build of JTheque with Sonar 2.0</title><link>http://baptiste-wicht.com/posts/2010/05/first-build-jtheque-sonar-2-0.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;div&gt;&lt;p&gt;This week-end I updated the version of Sonar to &lt;a href="http://www.baptiste-wicht.com/2010/03/sonar-2-0-released/"&gt;the new version 2.0&lt;/a&gt; and migrated it from Tomcat 5.5 to Tomcat 6.0. I waited until now for the plugins I use to be compatible. Now, all my plugins are compatible :&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;Motion Chart : An elegant chart demonstrating the evolutions of metrics build after build&lt;/li&gt;
    &lt;li&gt;Quality Index : Compute a quality index for each project based on 4 axes : Coding, Complexity, Coverage and Style&lt;/li&gt;
    &lt;li&gt;Radiator : Display a view like the main view of all projects (all the rectangles with a lot of colors) for all the components of a project&lt;/li&gt;
    &lt;li&gt;Rules Meter : Indicate for each project how many rules were activated during analysis&lt;/li&gt;
    &lt;li&gt;SCM Activity : Compute some metrics about the SCM Activity of the project&lt;/li&gt;
    &lt;li&gt;TagList : Analyze some tag (@TODO, @FIXME, ...) in your code and display them in the project&lt;/li&gt;
    &lt;li&gt;Technical Debt : Compute a technical debt estimation for all the problems of your project&lt;/li&gt;
    &lt;li&gt;Timeline : Display a chart of the evolution of the metrics build after build&lt;/li&gt;
    &lt;li&gt;Build Stability : Display the stability of the builds on the continuous integration system&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now I made the first build of JTheque with Sonar 2.0.&lt;/p&gt;
&lt;p&gt;At first view, there is not a lot of changes with this new version, but the main view has been a little improved and the new analysis are good. Now you've metrics about your design and about the dependencies to cut to make your design better. They added a good dependency matrix to each project.&lt;/p&gt;
&lt;p&gt;This version works well like the older. The only things to pay attention for the update is the long time the database upgrade takes.&lt;/p&gt;
&lt;p&gt;I've also updated Hudson to the last version and also migrated it to my Tomcat 6.0.&lt;/p&gt;&lt;/div&gt;</description><category>Java</category><category>JTheque</category><category>Sonar</category><guid>http://baptiste-wicht.com/posts/2010/05/first-build-jtheque-sonar-2-0.html</guid><pubDate>Sun, 02 May 2010 13:09:45 GMT</pubDate></item><item><title>JTheque : Problems when migrating to OSGi</title><link>http://baptiste-wicht.com/posts/2010/04/jtheque-problems-migrating-osgi.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;div&gt;&lt;p&gt;Like you perhaps know, i'm currently &lt;a title="JTheque is going to OSGi" href="http://www.baptiste-wicht.com/2010/03/jtheque-is-going-to-osgi/" target="_self"&gt;migrating JTheque to OSGi&lt;/a&gt;. During this migration i found several problems in the JTheque architecture that made the migration impossible without changing some concepts. In this post I'll detail all the problems I found.&lt;/p&gt;
&lt;h5&gt;Resources&lt;/h5&gt;

&lt;p&gt;First of all, i had to completely change the way to cache resources. Before, i used a ResourceManager to cache images/icons. To get an image/icon, i gave to it the path to the resource and the manager made the rest. I used Spring to load the resources (using the Resource class). That worked well because all the modules and the core were in the same application context.&lt;/p&gt;
&lt;p&gt;But now, there is an application context for each OSGi bundle, so that doesn't work at all. So i had to find an other way. The manager cannot load the resources because they're accessible from the other bundles. So I changes the way the manager works :&lt;/p&gt;
&lt;ol&gt;
    &lt;li&gt;The modules must register all the resources they need in the resource manager. They can always use Spring to load the resource or direct use the Resource class to load it.&lt;/li&gt;
    &lt;li&gt;When the module need an image/icon, it ask the resource manager. The manager watch on the cache (the cache associates the Resource to the loaded image/icon) if the image is already cached. If it's cached, it directly return the image else, it load the image from the resource and return the loaded image&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In that way, the resource manager doesn't have to access directly to resources on other bundles and everything works well.&lt;/p&gt;
&lt;h4&gt;States&lt;/h4&gt;

&lt;p&gt;The states are a way to store configuration for the modules. Before, the states must implements an interface and when they we're saved, the class were saved in a file and at startup created by reflection. But that's was not possible anymore, because the class was not accessible from the state bundle.&lt;/p&gt;
&lt;p&gt;So I changed the way the data were saved using directly methods of the interface to get the stored data and to restore them at startup. Moreover, I also replaced the interface by annotations.&lt;/p&gt;
&lt;h4&gt;Miscellaneous&lt;/h4&gt;

&lt;p&gt;More than these other major changes, i've also some others problems :&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;The JDBC driver class was not accessible. I add the package import to the manifest headers and get the driver version from SpringSource Repository to works with OSGi&lt;/li&gt;
    &lt;li&gt;Substance doesn't work anymore. At this time, i don't know i that comes from OSGi or from other changes i made in the application, but i've not solved this problem.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>Conception</category><category>JTheque</category><category>OSGi</category><guid>http://baptiste-wicht.com/posts/2010/04/jtheque-problems-migrating-osgi.html</guid><pubDate>Sun, 18 Apr 2010 08:57:50 GMT</pubDate></item><item><title>OSGi and cyclic dependencies</title><link>http://baptiste-wicht.com/posts/2010/03/osgi-and-cyclic-dependencies.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;div&gt;&lt;p&gt;I'm currently working on the "bundlisation" of the JTheque Core. I choose to cut core into several bundles each one representing a service provided by the core. &lt;/p&gt;
&lt;p&gt;I quickly have experencied problems with &lt;/p&gt;
&lt;p&gt;I quickly realized that the decoupling of my various services was almost nil. I had a huge number of dependencies for each bundle and worse, I had a lot of cyclic dependencies, either direct or indirect.&lt;/p&gt;
&lt;p&gt;For information, a direct cyclic dependency is a situation in which a bundle X depends on a bundle that depends on Y who is also depending itself of X. An indirect dependency cycle is the situation where X depends on Y, Y depends on Z and Z depends on X. I speak here of bundles, but it may relate to projects, classes or packages.&lt;/p&gt;
&lt;p&gt;Note that the different techniques that I will present also apply for dependencies between components non-OSGi, the principles are exactly the same.&lt;/p&gt;
&lt;p class="more"&gt;&lt;a href="http://baptiste-wicht.com/posts/2010/03/osgi-and-cyclic-dependencies.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>Conception</category><category>Java</category><category>JTheque</category><category>OSGi</category><guid>http://baptiste-wicht.com/posts/2010/03/osgi-and-cyclic-dependencies.html</guid><pubDate>Mon, 15 Mar 2010 15:19:54 GMT</pubDate></item><item><title>JTheque is going to OSGi</title><link>http://baptiste-wicht.com/posts/2010/03/jtheque-is-going-to-osgi.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;div&gt;&lt;p&gt;Just a little post to inform you that i'm currently migrating JTheque Core to OSGI / Spring Dynamic Modules. The core will be fractioned into several bundles. The JTheque Modules will also be OSGi bundles.&lt;/p&gt;
&lt;p&gt;It will increase the modularity of the different services of the Core. And it will also be a more standard way to develop modules. And last but not least, it's an opportunity for me to learn OSGi and Spring Dm.&lt;/p&gt;&lt;/div&gt;</description><category>Java</category><category>JTheque</category><category>Modular</category><category>OSGi</category><category>Spring</category><guid>http://baptiste-wicht.com/posts/2010/03/jtheque-is-going-to-osgi.html</guid><pubDate>Tue, 02 Mar 2010 12:35:52 GMT</pubDate></item><item><title>Develop a modular application with JTheque Core 2.0.3</title><link>http://baptiste-wicht.com/posts/2010/02/modular-application-jtheque-core-2-0-3.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;div&gt;&lt;h4&gt;1. Introduction&lt;/h4&gt;

&lt;p&gt;This article will teach you how to develop a first application with JTheque Core.&lt;/p&gt;
&lt;p&gt;We will develop a basic modular application, like an hello world. This little program will be composed of :&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;A JTheque application&lt;/li&gt;
    &lt;li&gt;A JTheque module who display an Hello World on the main view&lt;/li&gt;
    &lt;li&gt;A module who will add an option menu to display one more time "Hello World"&lt;/li&gt;
&lt;/ul&gt;

&lt;p class="more"&gt;&lt;a href="http://baptiste-wicht.com/posts/2010/02/modular-application-jtheque-core-2-0-3.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>Conception</category><category>Java</category><category>JTheque</category><category>Modular</category><guid>http://baptiste-wicht.com/posts/2010/02/modular-application-jtheque-core-2-0-3.html</guid><pubDate>Sun, 07 Feb 2010 04:38:45 GMT</pubDate></item><item><title>New design for JTheque Web site</title><link>http://baptiste-wicht.com/posts/2010/01/new-design-jtheque-website.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;div&gt;&lt;p&gt;I've made a new design for the JTheque web site : &lt;a title="New design for JTheque Web site" href="http://baptiste-wicht.com/posts/2010/01/New%20design%20for%20JTheque%20Web%20site" target="_self"&gt;http://jtheque.developpez.com/en&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I took the same design than for my personal web site. The web site is still generated with Maven 2, but i use a custom maven skin to generate the site.&lt;/p&gt;&lt;/div&gt;</description><category>JTheque</category><category>Maven</category><guid>http://baptiste-wicht.com/posts/2010/01/new-design-jtheque-website.html</guid><pubDate>Fri, 01 Jan 2010 12:33:53 GMT</pubDate></item><item><title>JTheque Movies 1.0</title><link>http://baptiste-wicht.com/posts/2009/12/jtheque-movies-1-0.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;div&gt;&lt;p&gt;I finished the development of &lt;strong&gt;JTheque Movies 1.0&lt;/strong&gt; :)&lt;/p&gt;
&lt;p&gt;This application enable the user to manage a collection of movies and to read them directly in the application. For this last functionality, on Windows, you need Windows Media Player and on Linux you need VLC Media Player as web plugin. The user interface has been completely remade to be more esthetic.&lt;/p&gt;
&lt;p class="more"&gt;&lt;a href="http://baptiste-wicht.com/posts/2009/12/jtheque-movies-1-0.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>Java</category><category>JTheque</category><category>Releases</category><guid>http://baptiste-wicht.com/posts/2009/12/jtheque-movies-1-0.html</guid><pubDate>Wed, 23 Dec 2009 12:31:27 GMT</pubDate></item></channel></rss>