<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog blog("Baptiste Wicht"); (Posts about Machine Learning)</title><link>https://baptiste-wicht.com/</link><description></description><atom:link href="https://baptiste-wicht.com/categories/machine-learning.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sun, 10 Sep 2023 05:33:36 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Decrease DLL neural network compilation time with C++17</title><link>https://baptiste-wicht.com/posts/2018/02/decrease-dll-neural-network-compilation-time-with-c%2B%2B17.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;p&gt;Just last week, &lt;a class="reference external" href="https://baptiste-wicht.com/posts/2018/02/c%2B%2B17-migration-of-expression-templates-library-etl.html"&gt;I've migrated my Expression Templates Library (ETL) library to C++17&lt;/a&gt;,
it is now also done in my Deep Learning Library (DLL) library. In ETL, this
resulted in a &lt;em&gt;much nicer code overall&lt;/em&gt;, but no real improvement in compilation
time.&lt;/p&gt;
&lt;p&gt;The objective of the migration of DLL was two-fold. First, I also wanted to
simplify some code, especially with &lt;code&gt;if constexpr&lt;/code&gt;. But I also especially
wanted to try to reduce the compilation time. In the past,
&lt;a class="reference external" href="https://baptiste-wicht.com/posts/2017/09/how-i-made-deep-learning-library-38-faster-to-compile-optimization-and-cpp17-if-constexpr.html"&gt;I've already tried a few changes with C++17&lt;/a&gt;, with good results on the compilation of the entire test suite.
While this is very good, this is not very representative of users of the library.
Indeed, normally you'll have only one network in your source file not several.
The new changes will especially help in the case of many networks, but less in
the case of a single network per source file.&lt;/p&gt;
&lt;p&gt;This time, I decided to test the compilation on the examples. I've tested the
eight official examples from the DLL library:&lt;/p&gt;
&lt;ol class="arabic simple" start="0"&gt;
&lt;li&gt;&lt;p&gt;mnist_dbn: A fully-connected Deep Belief Network (DBN) on the MNIST data set
with three layers&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;char_cnn: A special CNN with embeddings and merge and group layers for text
recognition&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;imagenet_cnn: A 12 layers Convolutional Neural Network (CNN) for Imagenet&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mnist_ae: A simple two-layers auto-encoder for MNIST&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mnist_cnn: A simple 6 layers CNN for MNIST&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mnist_deep_ae: A deep auto-encoder for MNIST, only fully-connected&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mnist_lstm: A Recurrent Neural Network (RNN) with Long Short Term Memory
(LSTM) cells&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mnist_mlp: A simple fully-connected network for MNIST, with dropout&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mnist_rnn: A simple RNN with simple cells for MNIST&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is really representative of what users can do with the library and I think
it's a much better for compilation time.&lt;/p&gt;
&lt;p&gt;For reference, you can find &lt;a class="reference external" href="https://github.com/wichtounet/dll/tree/master/examples/src"&gt;the source code of all the examples online&lt;/a&gt;.&lt;/p&gt;
&lt;section id="results"&gt;
&lt;h2&gt;Results&lt;/h2&gt;
&lt;p&gt;Let's start with the results. I've tested this at different stages of the
migration with clang 5 and GCC 7.2. I tested the following steps:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;The original C++14 version&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Simply compiling in c++17 mode (-std=c++17)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using the C++17 version of the ETL library&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Upgrading DLL to C++17 (without ETL)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ETL and DLL in C++17 versions&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I've compiled each example independently in release_debug mode. Here are the
results for G++ 7.2:&lt;/p&gt;
&lt;table class="align-center"&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th class="head"&gt;&lt;p&gt;Example&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;0&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;1&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;2&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;3&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;4&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;5&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;6&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;7&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;8&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;C++14&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;37.818&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;32.944&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;33.511&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;15.403&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;29.998&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;16.911&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;24.745&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;18.974&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;19.006&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;-std=c++17&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;38.358&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;32.409&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;32.707&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;15.810&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;30.042&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;16.896&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;24.635&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;19.134&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;19.027&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;ETL C++17&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;36.045&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;31.000&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;30.942&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;15.322&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;28.840&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;16.747&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;24.151&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;18.208&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;18.939&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;DLL C++17&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;35.251&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;32.577&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;32.854&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;15.653&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;29.758&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;16.851&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;24.606&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;19.098&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;19.146&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;Final C++17&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;32.289&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;31.133&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;30.939&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;15.232&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;28.753&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;16.526&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;24.326&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;18.116&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;17.819&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;Final Improvement&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;14.62%&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;5.49%&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;7.67%&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;1.11%&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;4.15%&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;2.27%&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;1.69%&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;4.52%&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;6.24%&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The difference by just enabling c++17 is not significant. On the other hand,
some significant gain can be obtained by using the C++17 version of ETL,
especially for the DBN version and for the CNN versions. Except for the DBN
case, the migration of DLL to C++17 did not bring any significant advantage.
When everything is combined, the gains are more important :) In the best case,
the example is 14.6% faster to compile.&lt;/p&gt;
&lt;p&gt;Let's see if it's the same with clang++ 5.0:&lt;/p&gt;
&lt;table class="align-center"&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th class="head"&gt;&lt;p&gt;Example&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;0&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;1&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;2&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;3&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;4&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;5&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;6&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;7&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;8&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;C++14&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;40.690&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;34.753&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;35.488&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;16.146&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;31.926&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;17.708&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;29.806&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;19.207&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;20.858&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;-std=c++17&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;40.502&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;34.664&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;34.990&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;16.027&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;31.510&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;17.630&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;29.465&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;19.161&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;20.860&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;ETL C++17&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;37.386&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;33.008&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;33.896&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;15.519&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;30.269&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;16.995&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;28.897&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;18.383&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;19.809&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;DLL C++17&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;37.252&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;34.592&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;35.250&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;16.131&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;31.782&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;17.606&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;29.595&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;19.126&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;20.782&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;Final C++17&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;34.470&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;33.154&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;33.881&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;15.415&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;30.279&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;17.078&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;28.808&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;18.497&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;19.761&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;Final Improvement&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;15.28%&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;4.60%&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;4.52%&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;4.52%&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;5.15%&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;3.55%&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;3.34%&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;3.69%&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;5.25%&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;First of all, as I have seen time after time, clang is still slower than GCC.
It's a not a big difference, but still significant. Overall, the gains are a bit
higher on clang than on GCC, but not by much. Interestingly, the migration of
DLL to C++17 is less interesting in terms of compilation time for clang. It
seems even to slow down compilation on some examples. On the other hand, the
migration of ETL is more important than on GCC.&lt;/p&gt;
&lt;p&gt;Overall, every example is faster to compile using both libraries in C++17, but
we don't have spectacular speed-ups. With clang, we have speedups from 3.3% to
15.3%. With GCC, we have speedup  from 1.1% to 14.6%. It's not very high, but
I'm already satisfied with these results.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="c-17-in-dll"&gt;
&lt;h2&gt;C++17 in DLL&lt;/h2&gt;
&lt;p&gt;Overall, the migration of DLL to C++17 was quite similar to that of ETL. You can
take a look at my &lt;a class="reference external" href="https://baptiste-wicht.com/posts/2018/02/c%2B%2B17-migration-of-expression-templates-library-etl.html"&gt;previous article&lt;/a&gt;
if you want more details on C++17 features I've used.&lt;/p&gt;
&lt;p&gt;I've &lt;em&gt;replaced a lot of SFINAE functions&lt;/em&gt; with &lt;code&gt;if constexpr&lt;/code&gt;. I've also
replaced a lot of &lt;code&gt;statif_if&lt;/code&gt; with &lt;code&gt;if constexpr&lt;/code&gt;. There was a large
number of these in DLL's code. I also enabled all the &lt;code&gt;constexpr&lt;/code&gt; that
were commented for this exact time :)&lt;/p&gt;
&lt;p&gt;I was also thinking that I could replace a lot of meta-programming stuff with
&lt;em&gt;fold expressions&lt;/em&gt;. While I was able to replace a few of them, most of them were
harder to replace with fold expressions. Indeed, the variadic pack is often
hidden behind another class and therefore the pack is not directly usable from
the network class or the group and merge layers classes. I didn't want to start
a big refactoring just to use a C++17 feature, the current state of this code is
fine.&lt;/p&gt;
&lt;p&gt;I made some use of structured bindings as well, but again not as much as I was
thinking. In fact, a lot of time, I'm assigning the elements of a pair or tuple
to existing variables not declaring new variables and unfortunately, you can
only use structured bindings with &lt;code&gt;auto&lt;/code&gt; declaration.&lt;/p&gt;
&lt;p&gt;Overall, the &lt;em&gt;code is significantly better now&lt;/em&gt;, but there was less impact than
there was on ETL. It's also a smaller code base, so maybe this is normal and my
expectations were too high ;)&lt;/p&gt;
&lt;/section&gt;
&lt;section id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The trunk of DLL is now a C++17 library :) I think this improve the quality of
the code by a nice margin! Even though, there is still some work to be done to
improve the code, especially for the DBN pretraining code, the quality is quite
good now. Moreover, the switch to C++17 made the compilation of neural networks
using the DLL library &lt;em&gt;faster to compile&lt;/em&gt;, from 1.1% in the worst case to 15.3% in
the best case! I don't know when I will release the next version of DLL, but it
will take some time. I'll especially have to polish the RNN support and add
a sequence to sequence loss before I will release the 1.1 version of DLL.&lt;/p&gt;
&lt;p&gt;I'm quite satisfied with C++17 even if I would have liked a bit more features to
play with! I'm already a big fan of &lt;code&gt;if constexpr&lt;/code&gt;, this can make the code
much nicer and fold expressions are much more intuitive than their previous
recursive template counterpart.&lt;/p&gt;
&lt;p&gt;I may also consider migrating some parts of the cpp-utils library, but if I do,
it will only be through the use of conditionals in order not to break the other
projects that are based on the library.&lt;/p&gt;
&lt;/section&gt;</description><category>C++</category><category>C++17</category><category>clang</category><category>Compilers</category><category>Deep Learning</category><category>dll</category><category>etl</category><category>gcc</category><category>Machine Learning</category><category>Performance</category><category>projects</category><guid>https://baptiste-wicht.com/posts/2018/02/decrease-dll-neural-network-compilation-time-with-c%2B%2B17.html</guid><pubDate>Wed, 07 Feb 2018 10:39:02 GMT</pubDate></item><item><title>My thesis is available: Deep Learning Feature Extraction for Image Processing</title><link>https://baptiste-wicht.com/posts/2018/01/my-thesis-is-available-deep-learning-feature-extraction-for-image-processing.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;p&gt;I'm happy to say that I've finally put my thesis online and updated
my &lt;a class="reference external" href="https://baptiste-wicht.com/stories/publications.html"&gt;Publications&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;I should have done that earlier but it slipped my mind, so there it is!&lt;/p&gt;
&lt;p&gt;My thesis (Deep Learning Feature Extraction for Image Processing) is now
available to download.  Here is the abstract of the thesis:&lt;/p&gt;
&lt;p&gt;In this thesis, we propose to use methodologies that automatically learn how to
extract relevant features from images. We are especially interested in
evaluating how these features compare against handcrafted features. More
precisely, we are interested in the unsupervised training that is used for the
Restricted Boltzmann Machine (RBM) and Convolutional RBM (CRBM) models. These
models relaunched the Deep Learning interest of the last decade. During the time
of this thesis, the auto-encoders approach, especially Convolutional
Auto-Encoders (CAE) have been used more and more. Therefore, one objective of
this thesis is also to compare the CRBM approach with the CAE approach.&lt;/p&gt;
&lt;p&gt;The scope of this work is defined by several machine learning tasks. The first
one, handwritten digit recognition, is analysed to see how much the unsupervised
pretraining technique introduced with the Deep Belief Network (DBN) model
improves the training of neural networks. The second, detection and recognition
of Sudoku in images, is evaluating the efficiency of DBN and Convolutional DBN
(CDBN) models for classification of images of poor quality. Finally, features
are learned fully unsupervised from images for a keyword spotting task and are
compared against well-known handcrafted features. Moreover, the thesis was also
oriented around a software engineering axis. Indeed, a complete machine learning
framework was developed during this thesis to explore possible optimizations and
possible algorithms in order to train the tested models as fast as possible.&lt;/p&gt;
&lt;p&gt;If you are interested, you can:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.researchgate.net/publication/322505397_Deep_Learning_feature_Extraction_for_Image_Processing"&gt;Read it on ResearchGate&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://baptiste-wicht.com/publication_store/phd_thesis.pdf"&gt;Directly download the PDF&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I hope this will interest a few of you! As always, if you have any question,
don't hesitate to let me a comment ;)&lt;/p&gt;
&lt;p&gt;As for the current projects, I'm still currently working on the next version of
budgetwarrior, but I don't have any expected release date. It will depend on
much time I'm able to put to the project.&lt;/p&gt;</description><category>crbm</category><category>dll</category><category>Machine Learning</category><category>Personal</category><category>projects</category><category>publications</category><category>rbm</category><guid>https://baptiste-wicht.com/posts/2018/01/my-thesis-is-available-deep-learning-feature-extraction-for-image-processing.html</guid><pubDate>Mon, 15 Jan 2018 14:11:57 GMT</pubDate></item><item><title>Initial support for Long Short Term Memory (LSTM) in DLL</title><link>https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;p&gt;I'm really happy to announce that I just merged support for&lt;/p&gt;
&lt;p&gt;Long Short Term Memory
(LSTM) cells into my Deep Learning Library (DLL) machine learning framework. Two
weeks ago, &lt;a class="reference external" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html"&gt;I already merged suport for Recurrent Neural network (RNN)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It's nothing fancy yet, but forward propagation of LSTM and basic
Backpropagation Through Time (BPTT) are now supported. It was not really
complicated to implemenet the forward pass but the backward pass is much
complicated for an LSTM than for a RNN. It took me quite a long time to figure
out all the gradients formulas and the documentation on that is quite scarce.&lt;/p&gt;
&lt;p&gt;For now, still only existing classification loss is supported for RNN and LSTM.
As I said last time, I still plan to add support for sequence-to-sequence loss
in order to be able to train models able to generate characters. However, I don't
know when I'll be able to work on that. Now that I've got the code for LSTM,
I should be able to implement a GRU cell and NAS cell quite easily I believe.&lt;/p&gt;
&lt;p&gt;For example, here is a simple LSTM used on MNIST for classification:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code cpp"&gt;&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-1" name="rest_code_9051d728575648a9bbe4338a6b0f7799-1" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;"dll/neural/dense_layer.hpp"&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-2" name="rest_code_9051d728575648a9bbe4338a6b0f7799-2" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;"dll/neural/lstm_layer.hpp"&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-3" name="rest_code_9051d728575648a9bbe4338a6b0f7799-3" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;"dll/neural/recurrent_last_layer.hpp"&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-4" name="rest_code_9051d728575648a9bbe4338a6b0f7799-4" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-4"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;"dll/network.hpp"&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-5" name="rest_code_9051d728575648a9bbe4338a6b0f7799-5" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;"dll/datasets.hpp"&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-6" name="rest_code_9051d728575648a9bbe4338a6b0f7799-6" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-7" name="rest_code_9051d728575648a9bbe4338a6b0f7799-7" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-7"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/*argc*/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/*argv*/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-8" name="rest_code_9051d728575648a9bbe4338a6b0f7799-8" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Load the dataset&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-9" name="rest_code_9051d728575648a9bbe4338a6b0f7799-9" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;make_mnist_dataset_nc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;batch_size&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;scale_pre&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{});&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-10" name="rest_code_9051d728575648a9bbe4338a6b0f7799-10" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-10"&gt;&lt;/a&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-11" name="rest_code_9051d728575648a9bbe4338a6b0f7799-11" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;time_steps&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-12" name="rest_code_9051d728575648a9bbe4338a6b0f7799-12" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sequence_length&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-13" name="rest_code_9051d728575648a9bbe4338a6b0f7799-13" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-13"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hidden_units&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-14" name="rest_code_9051d728575648a9bbe4338a6b0f7799-14" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-14"&gt;&lt;/a&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-15" name="rest_code_9051d728575648a9bbe4338a6b0f7799-15" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Build the network&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-16" name="rest_code_9051d728575648a9bbe4338a6b0f7799-16" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-16"&gt;&lt;/a&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-17" name="rest_code_9051d728575648a9bbe4338a6b0f7799-17" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;network_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dyn_network_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-18" name="rest_code_9051d728575648a9bbe4338a6b0f7799-18" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-18"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;network_layers&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-19" name="rest_code_9051d728575648a9bbe4338a6b0f7799-19" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-19"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;lstm_layer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;time_steps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sequence_length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hidden_units&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;last_only&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-20" name="rest_code_9051d728575648a9bbe4338a6b0f7799-20" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-20"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;recurrent_last_layer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;time_steps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hidden_units&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-21" name="rest_code_9051d728575648a9bbe4338a6b0f7799-21" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-21"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dense_layer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;hidden_units&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;softmax&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-22" name="rest_code_9051d728575648a9bbe4338a6b0f7799-22" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-22"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-23" name="rest_code_9051d728575648a9bbe4338a6b0f7799-23" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-23"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;updater&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;updater_type&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ADAM&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="c1"&gt;// Adam&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-24" name="rest_code_9051d728575648a9bbe4338a6b0f7799-24" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-24"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;batch_size&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="c1"&gt;// The mini-batch size&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-25" name="rest_code_9051d728575648a9bbe4338a6b0f7799-25" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-25"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;network_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-26" name="rest_code_9051d728575648a9bbe4338a6b0f7799-26" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-26"&gt;&lt;/a&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-27" name="rest_code_9051d728575648a9bbe4338a6b0f7799-27" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-27"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;make_unique&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;network_t&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-28" name="rest_code_9051d728575648a9bbe4338a6b0f7799-28" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-28"&gt;&lt;/a&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-29" name="rest_code_9051d728575648a9bbe4338a6b0f7799-29" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-29"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Display the network and dataset&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-30" name="rest_code_9051d728575648a9bbe4338a6b0f7799-30" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-30"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-31" name="rest_code_9051d728575648a9bbe4338a6b0f7799-31" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-31"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-32" name="rest_code_9051d728575648a9bbe4338a6b0f7799-32" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-32"&gt;&lt;/a&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-33" name="rest_code_9051d728575648a9bbe4338a6b0f7799-33" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-33"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Train the network for performance sake&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-34" name="rest_code_9051d728575648a9bbe4338a6b0f7799-34" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-34"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;fine_tune&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-35" name="rest_code_9051d728575648a9bbe4338a6b0f7799-35" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-35"&gt;&lt;/a&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-36" name="rest_code_9051d728575648a9bbe4338a6b0f7799-36" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-36"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Test the network on test set&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-37" name="rest_code_9051d728575648a9bbe4338a6b0f7799-37" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-37"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;evaluate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-38" name="rest_code_9051d728575648a9bbe4338a6b0f7799-38" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-38"&gt;&lt;/a&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-39" name="rest_code_9051d728575648a9bbe4338a6b0f7799-39" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-39"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_9051d728575648a9bbe4338a6b0f7799-40" name="rest_code_9051d728575648a9bbe4338a6b0f7799-40" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_9051d728575648a9bbe4338a6b0f7799-40"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The network is quite similar to the one used previously with an RNN, just
replace rnn with lstm and that's it. It starts with LSTM layer, followed by
a layer extracting the last time step and finally a dense layer with a softmax
function. The network is trained with Adam for 50 epochs. You can change the
activation function , the initializer for the weights and the biases and number
of steps for BPTT truncation.&lt;/p&gt;
&lt;p&gt;Here is the result I got on my last run:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-1" name="rest_code_347f000221e74188bd00c4e5fb46cff8-1" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-1"&gt;&lt;/a&gt;------------------------------------------------------------
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-2" name="rest_code_347f000221e74188bd00c4e5fb46cff8-2" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-2"&gt;&lt;/a&gt;| Index | Layer                | Parameters | Output Shape |
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-3" name="rest_code_347f000221e74188bd00c4e5fb46cff8-3" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-3"&gt;&lt;/a&gt;------------------------------------------------------------
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-4" name="rest_code_347f000221e74188bd00c4e5fb46cff8-4" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-4"&gt;&lt;/a&gt;| 0     | LSTM (TANH) (dyn)    |      51200 | [Bx28x100]   |
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-5" name="rest_code_347f000221e74188bd00c4e5fb46cff8-5" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-5"&gt;&lt;/a&gt;| 1     | RNN(last)            |          0 | [Bx100]      |
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-6" name="rest_code_347f000221e74188bd00c4e5fb46cff8-6" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-6"&gt;&lt;/a&gt;| 2     | Dense(SOFTMAX) (dyn) |       1000 | [Bx10]       |
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-7" name="rest_code_347f000221e74188bd00c4e5fb46cff8-7" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-7"&gt;&lt;/a&gt;------------------------------------------------------------
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-8" name="rest_code_347f000221e74188bd00c4e5fb46cff8-8" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-8"&gt;&lt;/a&gt;              Total Parameters:      52200
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-9" name="rest_code_347f000221e74188bd00c4e5fb46cff8-9" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-9"&gt;&lt;/a&gt;
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-10" name="rest_code_347f000221e74188bd00c4e5fb46cff8-10" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-10"&gt;&lt;/a&gt;--------------------------------------------
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-11" name="rest_code_347f000221e74188bd00c4e5fb46cff8-11" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-11"&gt;&lt;/a&gt;| mnist | Size  | Batches | Augmented Size |
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-12" name="rest_code_347f000221e74188bd00c4e5fb46cff8-12" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-12"&gt;&lt;/a&gt;--------------------------------------------
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-13" name="rest_code_347f000221e74188bd00c4e5fb46cff8-13" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-13"&gt;&lt;/a&gt;| train | 60000 | 600     | 60000          |
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-14" name="rest_code_347f000221e74188bd00c4e5fb46cff8-14" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-14"&gt;&lt;/a&gt;| test  | 10000 | 100     | 10000          |
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-15" name="rest_code_347f000221e74188bd00c4e5fb46cff8-15" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-15"&gt;&lt;/a&gt;--------------------------------------------
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-16" name="rest_code_347f000221e74188bd00c4e5fb46cff8-16" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-16"&gt;&lt;/a&gt;
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-17" name="rest_code_347f000221e74188bd00c4e5fb46cff8-17" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-17"&gt;&lt;/a&gt;Network with 3 layers
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-18" name="rest_code_347f000221e74188bd00c4e5fb46cff8-18" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-18"&gt;&lt;/a&gt;    LSTM(dyn): 28x28 -&amp;gt; TANH -&amp;gt; 28x100
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-19" name="rest_code_347f000221e74188bd00c4e5fb46cff8-19" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-19"&gt;&lt;/a&gt;    RNN(last): 28x100 -&amp;gt; 100
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-20" name="rest_code_347f000221e74188bd00c4e5fb46cff8-20" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-20"&gt;&lt;/a&gt;    Dense(dyn): 100 -&amp;gt; SOFTMAX -&amp;gt; 10
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-21" name="rest_code_347f000221e74188bd00c4e5fb46cff8-21" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-21"&gt;&lt;/a&gt;Total parameters: 52200
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-22" name="rest_code_347f000221e74188bd00c4e5fb46cff8-22" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-22"&gt;&lt;/a&gt;Dataset
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-23" name="rest_code_347f000221e74188bd00c4e5fb46cff8-23" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-23"&gt;&lt;/a&gt;Training: In-Memory Data Generator
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-24" name="rest_code_347f000221e74188bd00c4e5fb46cff8-24" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-24"&gt;&lt;/a&gt;              Size: 60000
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-25" name="rest_code_347f000221e74188bd00c4e5fb46cff8-25" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-25"&gt;&lt;/a&gt;           Batches: 600
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-26" name="rest_code_347f000221e74188bd00c4e5fb46cff8-26" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-26"&gt;&lt;/a&gt;Testing: In-Memory Data Generator
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-27" name="rest_code_347f000221e74188bd00c4e5fb46cff8-27" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-27"&gt;&lt;/a&gt;              Size: 10000
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-28" name="rest_code_347f000221e74188bd00c4e5fb46cff8-28" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-28"&gt;&lt;/a&gt;           Batches: 100
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-29" name="rest_code_347f000221e74188bd00c4e5fb46cff8-29" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-29"&gt;&lt;/a&gt;
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-30" name="rest_code_347f000221e74188bd00c4e5fb46cff8-30" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-30"&gt;&lt;/a&gt;Train the network with "Stochastic Gradient Descent"
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-31" name="rest_code_347f000221e74188bd00c4e5fb46cff8-31" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-31"&gt;&lt;/a&gt;    Updater: ADAM
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-32" name="rest_code_347f000221e74188bd00c4e5fb46cff8-32" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-32"&gt;&lt;/a&gt;       Loss: CATEGORICAL_CROSS_ENTROPY
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-33" name="rest_code_347f000221e74188bd00c4e5fb46cff8-33" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-33"&gt;&lt;/a&gt; Early Stop: Goal(error)
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-34" name="rest_code_347f000221e74188bd00c4e5fb46cff8-34" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-34"&gt;&lt;/a&gt;
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-35" name="rest_code_347f000221e74188bd00c4e5fb46cff8-35" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-35"&gt;&lt;/a&gt;With parameters:
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-36" name="rest_code_347f000221e74188bd00c4e5fb46cff8-36" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-36"&gt;&lt;/a&gt;          epochs=50
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-37" name="rest_code_347f000221e74188bd00c4e5fb46cff8-37" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-37"&gt;&lt;/a&gt;      batch_size=100
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-38" name="rest_code_347f000221e74188bd00c4e5fb46cff8-38" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-38"&gt;&lt;/a&gt;   learning_rate=0.001
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-39" name="rest_code_347f000221e74188bd00c4e5fb46cff8-39" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-39"&gt;&lt;/a&gt;           beta1=0.9
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-40" name="rest_code_347f000221e74188bd00c4e5fb46cff8-40" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-40"&gt;&lt;/a&gt;           beta2=0.999
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-41" name="rest_code_347f000221e74188bd00c4e5fb46cff8-41" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-41"&gt;&lt;/a&gt;
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-42" name="rest_code_347f000221e74188bd00c4e5fb46cff8-42" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-42"&gt;&lt;/a&gt;epoch   0/50 batch  600/ 600 - error: 0.07943 loss: 0.28504 time 20910ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-43" name="rest_code_347f000221e74188bd00c4e5fb46cff8-43" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-43"&gt;&lt;/a&gt;epoch   1/50 batch  600/ 600 - error: 0.06683 loss: 0.24021 time 20889ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-44" name="rest_code_347f000221e74188bd00c4e5fb46cff8-44" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-44"&gt;&lt;/a&gt;epoch   2/50 batch  600/ 600 - error: 0.04828 loss: 0.18233 time 21061ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-45" name="rest_code_347f000221e74188bd00c4e5fb46cff8-45" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-45"&gt;&lt;/a&gt;epoch   3/50 batch  600/ 600 - error: 0.04407 loss: 0.16665 time 20839ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-46" name="rest_code_347f000221e74188bd00c4e5fb46cff8-46" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-46"&gt;&lt;/a&gt;epoch   4/50 batch  600/ 600 - error: 0.03515 loss: 0.13290 time 22108ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-47" name="rest_code_347f000221e74188bd00c4e5fb46cff8-47" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-47"&gt;&lt;/a&gt;epoch   5/50 batch  600/ 600 - error: 0.03207 loss: 0.12019 time 21393ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-48" name="rest_code_347f000221e74188bd00c4e5fb46cff8-48" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-48"&gt;&lt;/a&gt;epoch   6/50 batch  600/ 600 - error: 0.02973 loss: 0.11239 time 28199ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-49" name="rest_code_347f000221e74188bd00c4e5fb46cff8-49" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-49"&gt;&lt;/a&gt;epoch   7/50 batch  600/ 600 - error: 0.02653 loss: 0.10455 time 37039ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-50" name="rest_code_347f000221e74188bd00c4e5fb46cff8-50" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-50"&gt;&lt;/a&gt;epoch   8/50 batch  600/ 600 - error: 0.02482 loss: 0.09657 time 23127ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-51" name="rest_code_347f000221e74188bd00c4e5fb46cff8-51" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-51"&gt;&lt;/a&gt;epoch   9/50 batch  600/ 600 - error: 0.02177 loss: 0.08422 time 41766ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-52" name="rest_code_347f000221e74188bd00c4e5fb46cff8-52" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-52"&gt;&lt;/a&gt;epoch  10/50 batch  600/ 600 - error: 0.02453 loss: 0.09382 time 29765ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-53" name="rest_code_347f000221e74188bd00c4e5fb46cff8-53" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-53"&gt;&lt;/a&gt;epoch  11/50 batch  600/ 600 - error: 0.02575 loss: 0.09796 time 21449ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-54" name="rest_code_347f000221e74188bd00c4e5fb46cff8-54" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-54"&gt;&lt;/a&gt;epoch  12/50 batch  600/ 600 - error: 0.02107 loss: 0.07833 time 42056ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-55" name="rest_code_347f000221e74188bd00c4e5fb46cff8-55" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-55"&gt;&lt;/a&gt;epoch  13/50 batch  600/ 600 - error: 0.01877 loss: 0.07171 time 24673ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-56" name="rest_code_347f000221e74188bd00c4e5fb46cff8-56" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-56"&gt;&lt;/a&gt;epoch  14/50 batch  600/ 600 - error: 0.02095 loss: 0.08481 time 20878ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-57" name="rest_code_347f000221e74188bd00c4e5fb46cff8-57" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-57"&gt;&lt;/a&gt;epoch  15/50 batch  600/ 600 - error: 0.02040 loss: 0.07578 time 41515ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-58" name="rest_code_347f000221e74188bd00c4e5fb46cff8-58" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-58"&gt;&lt;/a&gt;epoch  16/50 batch  600/ 600 - error: 0.01580 loss: 0.06083 time 25705ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-59" name="rest_code_347f000221e74188bd00c4e5fb46cff8-59" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-59"&gt;&lt;/a&gt;epoch  17/50 batch  600/ 600 - error: 0.01945 loss: 0.07046 time 20903ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-60" name="rest_code_347f000221e74188bd00c4e5fb46cff8-60" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-60"&gt;&lt;/a&gt;epoch  18/50 batch  600/ 600 - error: 0.01728 loss: 0.06683 time 41828ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-61" name="rest_code_347f000221e74188bd00c4e5fb46cff8-61" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-61"&gt;&lt;/a&gt;epoch  19/50 batch  600/ 600 - error: 0.01577 loss: 0.05947 time 27810ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-62" name="rest_code_347f000221e74188bd00c4e5fb46cff8-62" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-62"&gt;&lt;/a&gt;epoch  20/50 batch  600/ 600 - error: 0.01528 loss: 0.05883 time 21477ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-63" name="rest_code_347f000221e74188bd00c4e5fb46cff8-63" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-63"&gt;&lt;/a&gt;epoch  21/50 batch  600/ 600 - error: 0.01345 loss: 0.05127 time 44718ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-64" name="rest_code_347f000221e74188bd00c4e5fb46cff8-64" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-64"&gt;&lt;/a&gt;epoch  22/50 batch  600/ 600 - error: 0.01410 loss: 0.05357 time 25174ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-65" name="rest_code_347f000221e74188bd00c4e5fb46cff8-65" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-65"&gt;&lt;/a&gt;epoch  23/50 batch  600/ 600 - error: 0.01268 loss: 0.04765 time 23827ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-66" name="rest_code_347f000221e74188bd00c4e5fb46cff8-66" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-66"&gt;&lt;/a&gt;epoch  24/50 batch  600/ 600 - error: 0.01342 loss: 0.05004 time 47232ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-67" name="rest_code_347f000221e74188bd00c4e5fb46cff8-67" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-67"&gt;&lt;/a&gt;epoch  25/50 batch  600/ 600 - error: 0.01730 loss: 0.06872 time 22532ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-68" name="rest_code_347f000221e74188bd00c4e5fb46cff8-68" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-68"&gt;&lt;/a&gt;epoch  26/50 batch  600/ 600 - error: 0.01337 loss: 0.05016 time 30114ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-69" name="rest_code_347f000221e74188bd00c4e5fb46cff8-69" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-69"&gt;&lt;/a&gt;epoch  27/50 batch  600/ 600 - error: 0.01842 loss: 0.07049 time 40136ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-70" name="rest_code_347f000221e74188bd00c4e5fb46cff8-70" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-70"&gt;&lt;/a&gt;epoch  28/50 batch  600/ 600 - error: 0.01262 loss: 0.04639 time 21793ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-71" name="rest_code_347f000221e74188bd00c4e5fb46cff8-71" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-71"&gt;&lt;/a&gt;epoch  29/50 batch  600/ 600 - error: 0.01403 loss: 0.05292 time 34096ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-72" name="rest_code_347f000221e74188bd00c4e5fb46cff8-72" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-72"&gt;&lt;/a&gt;epoch  30/50 batch  600/ 600 - error: 0.01185 loss: 0.04456 time 35420ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-73" name="rest_code_347f000221e74188bd00c4e5fb46cff8-73" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-73"&gt;&lt;/a&gt;epoch  31/50 batch  600/ 600 - error: 0.01098 loss: 0.04180 time 20909ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-74" name="rest_code_347f000221e74188bd00c4e5fb46cff8-74" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-74"&gt;&lt;/a&gt;epoch  32/50 batch  600/ 600 - error: 0.01337 loss: 0.04687 time 30113ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-75" name="rest_code_347f000221e74188bd00c4e5fb46cff8-75" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-75"&gt;&lt;/a&gt;epoch  33/50 batch  600/ 600 - error: 0.01415 loss: 0.05292 time 37393ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-76" name="rest_code_347f000221e74188bd00c4e5fb46cff8-76" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-76"&gt;&lt;/a&gt;epoch  34/50 batch  600/ 600 - error: 0.00982 loss: 0.03615 time 20962ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-77" name="rest_code_347f000221e74188bd00c4e5fb46cff8-77" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-77"&gt;&lt;/a&gt;epoch  35/50 batch  600/ 600 - error: 0.01178 loss: 0.04830 time 29305ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-78" name="rest_code_347f000221e74188bd00c4e5fb46cff8-78" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-78"&gt;&lt;/a&gt;epoch  36/50 batch  600/ 600 - error: 0.00882 loss: 0.03408 time 38293ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-79" name="rest_code_347f000221e74188bd00c4e5fb46cff8-79" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-79"&gt;&lt;/a&gt;epoch  37/50 batch  600/ 600 - error: 0.01148 loss: 0.04341 time 20841ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-80" name="rest_code_347f000221e74188bd00c4e5fb46cff8-80" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-80"&gt;&lt;/a&gt;epoch  38/50 batch  600/ 600 - error: 0.00960 loss: 0.03701 time 29204ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-81" name="rest_code_347f000221e74188bd00c4e5fb46cff8-81" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-81"&gt;&lt;/a&gt;epoch  39/50 batch  600/ 600 - error: 0.00850 loss: 0.03094 time 39802ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-82" name="rest_code_347f000221e74188bd00c4e5fb46cff8-82" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-82"&gt;&lt;/a&gt;epoch  40/50 batch  600/ 600 - error: 0.01473 loss: 0.05136 time 20831ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-83" name="rest_code_347f000221e74188bd00c4e5fb46cff8-83" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-83"&gt;&lt;/a&gt;epoch  41/50 batch  600/ 600 - error: 0.01007 loss: 0.03579 time 29856ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-84" name="rest_code_347f000221e74188bd00c4e5fb46cff8-84" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-84"&gt;&lt;/a&gt;epoch  42/50 batch  600/ 600 - error: 0.00943 loss: 0.03370 time 38200ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-85" name="rest_code_347f000221e74188bd00c4e5fb46cff8-85" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-85"&gt;&lt;/a&gt;epoch  43/50 batch  600/ 600 - error: 0.01205 loss: 0.04409 time 21162ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-86" name="rest_code_347f000221e74188bd00c4e5fb46cff8-86" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-86"&gt;&lt;/a&gt;epoch  44/50 batch  600/ 600 - error: 0.00980 loss: 0.03674 time 32279ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-87" name="rest_code_347f000221e74188bd00c4e5fb46cff8-87" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-87"&gt;&lt;/a&gt;epoch  45/50 batch  600/ 600 - error: 0.01068 loss: 0.04133 time 38448ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-88" name="rest_code_347f000221e74188bd00c4e5fb46cff8-88" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-88"&gt;&lt;/a&gt;epoch  46/50 batch  600/ 600 - error: 0.00913 loss: 0.03478 time 20797ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-89" name="rest_code_347f000221e74188bd00c4e5fb46cff8-89" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-89"&gt;&lt;/a&gt;epoch  47/50 batch  600/ 600 - error: 0.00985 loss: 0.03759 time 28885ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-90" name="rest_code_347f000221e74188bd00c4e5fb46cff8-90" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-90"&gt;&lt;/a&gt;epoch  48/50 batch  600/ 600 - error: 0.00912 loss: 0.03295 time 41120ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-91" name="rest_code_347f000221e74188bd00c4e5fb46cff8-91" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-91"&gt;&lt;/a&gt;epoch  49/50 batch  600/ 600 - error: 0.00930 loss: 0.03438 time 21282ms
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-92" name="rest_code_347f000221e74188bd00c4e5fb46cff8-92" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-92"&gt;&lt;/a&gt;Restore the best (error) weights from epoch 39
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-93" name="rest_code_347f000221e74188bd00c4e5fb46cff8-93" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-93"&gt;&lt;/a&gt;Training took 1460s
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-94" name="rest_code_347f000221e74188bd00c4e5fb46cff8-94" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-94"&gt;&lt;/a&gt;
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-95" name="rest_code_347f000221e74188bd00c4e5fb46cff8-95" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-95"&gt;&lt;/a&gt;Evaluation Results
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-96" name="rest_code_347f000221e74188bd00c4e5fb46cff8-96" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-96"&gt;&lt;/a&gt;   error: 0.02440
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-97" name="rest_code_347f000221e74188bd00c4e5fb46cff8-97" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-97"&gt;&lt;/a&gt;    loss: 0.11315
&lt;a id="rest_code_347f000221e74188bd00c4e5fb46cff8-98" name="rest_code_347f000221e74188bd00c4e5fb46cff8-98" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html#rest_code_347f000221e74188bd00c4e5fb46cff8-98"&gt;&lt;/a&gt;evaluation took 1000ms
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Again, nothing fancy yet, but this example has not been optimized for
performance nor for accuracy.&lt;/p&gt;
&lt;p&gt;I also made a few changes to the RNN layer. I added support for biases and
improved the code as well for performance and readability.&lt;/p&gt;
&lt;p&gt;All this support is now in the &lt;strong&gt;master&lt;/strong&gt; branch of the DLL project if you want
to check it out. You can also check out the example online:
&lt;a class="reference external" href="https://github.com/wichtounet/dll/blob/master/examples/src/mnist_lstm.cpp"&gt;mnist_lstm.cpp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can access the project &lt;a class="reference external" href="https://github.com/wichtounet/dll"&gt;on Github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Currently I'm working on the GPU performance again. The performance of some is
still not as good as I want it to be, especially complex operation like used in
Adam and Nadam. Currently, there are many calls to GPU BLAS libraries and
I want to try to extract some more optimized patterns. Once it's done, I'll post
more on that later on the blog.&lt;/p&gt;</description><category>Deep Learning</category><category>dll</category><category>Machine Learning</category><category>projects</category><category>rnn</category><guid>https://baptiste-wicht.com/posts/2017/11/initial-support-for-long-short-term-memory-lstm-in-dll.html</guid><pubDate>Fri, 24 Nov 2017 14:16:37 GMT</pubDate></item><item><title>DLL: Pretty printing and live output</title><link>https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;p&gt;I've improved a lot the display of my Deep Learning Library (DLL). I know this
is generally not the most important point in a machine learning framework, but
the first impression being important. Therefore, I decided it was time to get
a nicer output in the console for training networks.&lt;/p&gt;
&lt;p&gt;A network or a dataset can be displayed using the &lt;code&gt;display()&lt;/code&gt; function.
I've added a &lt;code&gt;display_pretty()&lt;/code&gt; function to them to display it more
nicely. I've also added the &lt;code&gt;dll::dump_timers_nice()&lt;/code&gt; function to do the
same for &lt;code&gt;dll::dump_timers()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I've also improved the display for the results of the batches during training.
Now, the display is updated every 100ms and it also displays the current
estimated time until the end of the epoch. With that, the user should have
a much better idea on what's going on during training, especially when training
networks when the epochs are taking a long time to complete.&lt;/p&gt;
&lt;p&gt;Here is a full output of the training of fully-connected network on MNIST
(&lt;cite&gt;mnist_mlp.cpp &amp;lt;https://github.com/wichtounet/dll/blob/master/examples/src/mnist_mlp.cpp&amp;gt;&lt;/cite&gt;):&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-1" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-1" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-1"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;------------------------------------------------------------
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-2" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-2" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-2"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Index&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Layer&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Parameters&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Output&lt;span class="w"&gt; &lt;/span&gt;Shape&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-3" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-3" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-3"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;------------------------------------------------------------
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-4" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-4" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-4"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Dense&lt;span class="o"&gt;(&lt;/span&gt;SIGMOID&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;dyn&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="m"&gt;392000&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;Bx500&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-5" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-5" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-5"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Dropout&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.50&lt;span class="o"&gt;)(&lt;/span&gt;dyn&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;Bx500&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-6" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-6" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-6"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Dense&lt;span class="o"&gt;(&lt;/span&gt;SIGMOID&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;dyn&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="m"&gt;125000&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;Bx250&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-7" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-7" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-7"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Dropout&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.50&lt;span class="o"&gt;)(&lt;/span&gt;dyn&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;Bx250&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-8" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-8" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-8"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Dense&lt;span class="o"&gt;(&lt;/span&gt;SOFTMAX&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;dyn&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="m"&gt;2500&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;Bx10&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-9" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-9" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-9"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;------------------------------------------------------------
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-10" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-10" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;                &lt;/span&gt;Total&lt;span class="w"&gt; &lt;/span&gt;Parameters:&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="m"&gt;519500&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-11" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-11" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-11"&gt;&lt;/a&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-12" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-12" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-12"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;--------------------------------------------
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-13" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-13" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-13"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;mnist&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Size&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Batches&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Augmented&lt;span class="w"&gt; &lt;/span&gt;Size&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-14" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-14" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-14"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;--------------------------------------------
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-15" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-15" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-15"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;train&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;60000&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;60000&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-16" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-16" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-16"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10000&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10000&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-17" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-17" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-17"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;--------------------------------------------
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-18" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-18" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-18"&gt;&lt;/a&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-19" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-19" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-19"&gt;&lt;/a&gt;Train&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;network&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Stochastic Gradient Descent"&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-20" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-20" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-20"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;Updater:&lt;span class="w"&gt; &lt;/span&gt;NADAM
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-21" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-21" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-21"&gt;&lt;/a&gt;&lt;span class="w"&gt;       &lt;/span&gt;Loss:&lt;span class="w"&gt; &lt;/span&gt;CATEGORICAL_CROSS_ENTROPY
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-22" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-22" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-22"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;Early&lt;span class="w"&gt; &lt;/span&gt;Stop:&lt;span class="w"&gt; &lt;/span&gt;Goal&lt;span class="o"&gt;(&lt;/span&gt;error&lt;span class="o"&gt;)&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-23" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-23" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-23"&gt;&lt;/a&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-24" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-24" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-24"&gt;&lt;/a&gt;With&lt;span class="w"&gt; &lt;/span&gt;parameters:
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-25" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-25" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-25"&gt;&lt;/a&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nv"&gt;epochs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;50&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-26" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-26" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-26"&gt;&lt;/a&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nv"&gt;batch_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-27" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-27" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-27"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nv"&gt;learning_rate&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.002
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-28" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-28" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-28"&gt;&lt;/a&gt;&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="nv"&gt;beta1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.9
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-29" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-29" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-29"&gt;&lt;/a&gt;&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="nv"&gt;beta2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.999
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-30" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-30" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-30"&gt;&lt;/a&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-31" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-31" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-31"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.04623&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.15097&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3230ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-32" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-32" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-32"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.03013&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.09947&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3188ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-33" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-33" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-33"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.02048&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.06565&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3102ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-34" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-34" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-34"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.01593&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.05258&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3189ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-35" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-35" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-35"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.01422&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.04623&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3160ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-36" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-36" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-36"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.01112&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.03660&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3131ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-37" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-37" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-37"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.01078&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.03546&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3200ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-38" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-38" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-38"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;7&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.01003&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.03184&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3246ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-39" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-39" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-39"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00778&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.02550&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3222ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-40" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-40" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-40"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00782&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.02505&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3119ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-41" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-41" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-41"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00578&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.02056&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3284ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-42" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-42" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-42"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00618&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.02045&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3220ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-43" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-43" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-43"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00538&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.01775&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3444ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-44" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-44" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-44"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;13&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00563&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.01803&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3304ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-45" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-45" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-45"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00458&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.01598&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3577ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-46" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-46" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-46"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00437&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.01436&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3228ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-47" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-47" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-47"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00360&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.01214&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3180ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-48" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-48" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-48"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00405&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.01309&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3090ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-49" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-49" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-49"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;18&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00408&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.01346&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3045ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-50" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-50" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-50"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;19&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00337&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.01153&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3071ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-51" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-51" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-51"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00297&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.01021&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3131ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-52" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-52" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-52"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00318&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.01103&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3076ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-53" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-53" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-53"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;22&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00277&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00909&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3090ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-54" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-54" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-54"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00242&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00818&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3163ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-55" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-55" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-55"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;24&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00267&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00913&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3229ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-56" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-56" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-56"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;25&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00295&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00947&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3156ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-57" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-57" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-57"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;26&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00252&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00809&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3066ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-58" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-58" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-58"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;27&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00227&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00773&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3156ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-59" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-59" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-59"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;28&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00203&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00728&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3158ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-60" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-60" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-60"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;29&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00240&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00753&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3114ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-61" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-61" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-61"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;30&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00263&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00864&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3099ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-62" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-62" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-62"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;31&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00210&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00675&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3096ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-63" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-63" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-63"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;32&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00163&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00628&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3120ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-64" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-64" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-64"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;33&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00182&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00611&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3045ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-65" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-65" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-65"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;34&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00125&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00468&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3140ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-66" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-66" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-66"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;35&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00183&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00598&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3093ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-67" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-67" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-67"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;36&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00232&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00711&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3068ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-68" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-68" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-68"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;37&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00170&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00571&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3057ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-69" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-69" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-69"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;38&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00162&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00530&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3115ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-70" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-70" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-70"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;39&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00155&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00513&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3226ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-71" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-71" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-71"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;40&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00150&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00501&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;2987ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-72" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-72" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-72"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;41&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00122&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00425&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3117ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-73" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-73" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-73"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;42&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00108&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00383&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3102ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-74" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-74" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-74"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;43&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00165&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00533&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;2977ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-75" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-75" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-75"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;44&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00142&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00469&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3009ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-76" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-76" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-76"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;45&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00098&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00356&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3055ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-77" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-77" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-77"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;46&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00127&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00409&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3076ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-78" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-78" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-78"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;47&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00132&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00438&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3068ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-79" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-79" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-79"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;48&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00130&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00459&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3045ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-80" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-80" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-80"&gt;&lt;/a&gt;epoch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;49&lt;/span&gt;/50&lt;span class="w"&gt; &lt;/span&gt;batch&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00107&lt;span class="w"&gt; &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.00365&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3103ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-81" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-81" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-81"&gt;&lt;/a&gt;Restore&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;best&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;error&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;weights&lt;span class="w"&gt; &lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;epoch&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;45&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-82" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-82" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-82"&gt;&lt;/a&gt;Training&lt;span class="w"&gt; &lt;/span&gt;took&lt;span class="w"&gt; &lt;/span&gt;160s
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-83" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-83" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-83"&gt;&lt;/a&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-84" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-84" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-84"&gt;&lt;/a&gt;Evaluation&lt;span class="w"&gt; &lt;/span&gt;Results
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-85" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-85" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-85"&gt;&lt;/a&gt;&lt;span class="w"&gt;   &lt;/span&gt;error:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.01740
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-86" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-86" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-86"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;loss:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.07861
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-87" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-87" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-87"&gt;&lt;/a&gt;evaluation&lt;span class="w"&gt; &lt;/span&gt;took&lt;span class="w"&gt; &lt;/span&gt;67ms
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-88" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-88" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-88"&gt;&lt;/a&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-89" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-89" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-89"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;-----------------------------------------------------------------------------
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-90" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-90" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-90"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;%&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Timer&lt;span class="w"&gt;                         &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Count&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Total&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Average&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-91" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-91" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-91"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;-----------------------------------------------------------------------------
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-92" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-92" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-92"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;.000%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;net:train:ft&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;160&lt;/span&gt;.183s&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;160&lt;/span&gt;.183s&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-93" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-93" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-93"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;.000%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;net:trainer:train&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;160&lt;/span&gt;.183s&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;160&lt;/span&gt;.183s&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-94" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-94" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-94"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;99&lt;/span&gt;.997%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;net:trainer:train:epoch&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;50&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;160&lt;/span&gt;.178s&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.20356s&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-95" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-95" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-95"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;84&lt;/span&gt;.422%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;net:trainer:train:epoch:batch&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;30000&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;135&lt;/span&gt;.229s&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;.50764ms&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-96" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-96" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-96"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;84&lt;/span&gt;.261%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sgd::train_batch&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;30000&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;134&lt;/span&gt;.971s&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;.49904ms&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-97" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-97" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-97"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;44&lt;/span&gt;.404%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sgd::grad&lt;span class="w"&gt;                     &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;30000&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;71&lt;/span&gt;.1271s&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;.3709ms&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-98" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-98" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-98"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;35&lt;/span&gt;.453%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sgd::forward&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;30000&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;56&lt;/span&gt;.7893s&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.89298ms&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-99" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-99" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-99"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;32&lt;/span&gt;.245%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sgd::update_weights&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;90000&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;51&lt;/span&gt;.6505s&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;573&lt;/span&gt;.894us&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-100" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-100" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-100"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;32&lt;/span&gt;.226%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sgd::apply_grad:nadam&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;180000&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;51&lt;/span&gt;.6211s&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;286&lt;/span&gt;.783us&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-101" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-101" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-101"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;28&lt;/span&gt;.399%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;dense:dyn:forward&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;180300&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;45&lt;/span&gt;.4903s&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;252&lt;/span&gt;.303us&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-102" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-102" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-102"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;.642%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;dropout:train:forward&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;60000&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;28&lt;/span&gt;.2595s&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;470&lt;/span&gt;.99us&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-103" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-103" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-103"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;13&lt;/span&gt;.707%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;net:trainer:train:epoch:error&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;50&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;.957s&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;439&lt;/span&gt;.14ms&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-104" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-104" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-104"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;.148%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;dense:dyn:gradients&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;90000&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;19&lt;/span&gt;.4587s&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;216&lt;/span&gt;.207us&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-105" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-105" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-105"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;.299%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sgd::backward&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;30000&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;.88546s&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;229&lt;/span&gt;.515us&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-106" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-106" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-106"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.301%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;dense:dyn:backward&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;60000&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;.28729s&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;88&lt;/span&gt;.121us&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-107" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-107" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-107"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.560%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;dense:dyn:errors&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;60000&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;896&lt;/span&gt;.471ms&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;.941us&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-108" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-108" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-108"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.407%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;dropout:backward&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;60000&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;651&lt;/span&gt;.523ms&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;.858us&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-109" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-109" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-109"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.339%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;dropout:test:forward&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;60000&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;542&lt;/span&gt;.799ms&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;.046us&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-110" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-110" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-110"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.161%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;net:compute_loss:CCE&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;60100&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;257&lt;/span&gt;.915ms&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;.291us&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-111" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-111" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-111"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.099%&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sgd::error&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;30000&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;158&lt;/span&gt;.33ms&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;.277us&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;a id="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-112" name="rest_code_d9e18f6bb4d04a88b7c092ef063d567b-112" href="https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html#rest_code_d9e18f6bb4d04a88b7c092ef063d567b-112"&gt;&lt;/a&gt;&lt;span class="w"&gt; &lt;/span&gt;-----------------------------------------------------------------------------
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I hope this will make the output of the machine learning framework more useful.&lt;/p&gt;
&lt;p&gt;All this support is now in the &lt;strong&gt;master&lt;/strong&gt; branch of the DLL project if you want
to check it out. You can also check out the example online:
&lt;a class="reference external" href="https://github.com/wichtounet/dll/blob/master/examples/src/mnist_mlp.cpp"&gt;mnist_mlp.cpp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can access the project &lt;a class="reference external" href="https://github.com/wichtounet/dll"&gt;on Github&lt;/a&gt;.&lt;/p&gt;</description><category>dll</category><category>Machine Learning</category><category>projects</category><guid>https://baptiste-wicht.com/posts/2017/11/dll-pretty-printing-and-live-output.html</guid><pubDate>Sun, 19 Nov 2017 14:15:57 GMT</pubDate></item><item><title>Inventor on four new research patents</title><link>https://baptiste-wicht.com/posts/2017/11/inventor-on-four-new-research-patents.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;p&gt;During the first years of my thesis I worked on CTI research project with the
American company Verisign, which has also an office near my school. A CTI
research project is a project that is partially funded by the Commission on
Innovation and Technology (CTI) where a school and a company work together.
I was quite lucky to work on this project with the awesome people at Verisign
Fribourg. After the success of the project, Verisign filled several patents
regarding various points of the projects.&lt;/p&gt;
&lt;p&gt;I'm quite happy now that these four patents are now approved and published. They
They have been approved by both the United States Patent and Trademark Office
(USPTO) and European Patent Office (EPO). The parents have been cl=¬ aimed by
Verisign, I'm only one of the inventor, I got no claim on the patent. But it's
still a great thing.&lt;/p&gt;
&lt;p&gt;Here are the names of the four patents:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Systems and methods for automatic phonetization of domain names¬&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Construction of phonetic representation of a string of characters¬&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Method for writing a foreign language in a pseudo language phonetically resembling native language of the speaker¬&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Construction of a phonetic representation of a generated string of characters¬&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can take a look at them on USPTO or EPO or on Google Patents, but the way
a patent is written make it relatively hard to follow, it's more on a lawyer
level or maybe I'm simply not used to patents anymore.&lt;/p&gt;
&lt;p&gt;All these patents come from the research done during the CTI project with
Verisign. In this project, name suggestions were generated from the phonetic
sound of the name. The idea being to generate names that sounds the same as
another input (airmix could become rmix or rmics). We are using various
technologies to make this work: IG-Tree, Viterbi and HMM. And since we used
a model with an encoder and a decoder, we can also mix languages. For instance,
write something in French the way a English work would work (for instance school
could become scoule).&lt;/p&gt;
&lt;p&gt;These patents concludes a very interesting and successful project. I'm now
working on yet another CTI research project with Verisign and it will surely be
as successful as the first one.&lt;/p&gt;</description><category>Machine Learning</category><category>patents</category><category>projects</category><category>publications</category><guid>https://baptiste-wicht.com/posts/2017/11/inventor-on-four-new-research-patents.html</guid><pubDate>Fri, 17 Nov 2017 13:50:33 GMT</pubDate></item><item><title>Initial support for Recurrent Neural Network (RNN) in DLL</title><link>https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;p&gt;I'm happy to announce that I just merged support for Recurrent Neural Networks
(RNNs) into my Deep Learning Library (DLL) machine learning framework.&lt;/p&gt;
&lt;p&gt;It's nothing fancy yet, but forward propagation of RNN and basic Backpropagation
Through Time (BPTT) are now supported. For now, only existing classification
loss is supported for RNN. I plan to add support for sequence-to-sequence loss
in order to be able to train models able to generate characters, but I don't
know when I'll be able to work on that. I also plan to add support for other
types of cells such as LSTM and GRU (maybe NAS) in the future.&lt;/p&gt;
&lt;p&gt;For example, here is a simple RNN used on MNIST:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code cpp"&gt;&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-1" name="rest_code_541712be2a6c4897ab53499d39791152-1" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;"dll/neural/dense_layer.hpp"&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-2" name="rest_code_541712be2a6c4897ab53499d39791152-2" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;"dll/neural/recurrent_layer.hpp"&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-3" name="rest_code_541712be2a6c4897ab53499d39791152-3" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;"dll/neural/recurrent_last_layer.hpp"&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-4" name="rest_code_541712be2a6c4897ab53499d39791152-4" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-4"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;"dll/network.hpp"&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-5" name="rest_code_541712be2a6c4897ab53499d39791152-5" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;"dll/datasets.hpp"&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-6" name="rest_code_541712be2a6c4897ab53499d39791152-6" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-7" name="rest_code_541712be2a6c4897ab53499d39791152-7" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-7"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/*argc*/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/*argv*/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-8" name="rest_code_541712be2a6c4897ab53499d39791152-8" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Load the dataset&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-9" name="rest_code_541712be2a6c4897ab53499d39791152-9" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;make_mnist_dataset_nc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;batch_size&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;scale_pre&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{});&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-10" name="rest_code_541712be2a6c4897ab53499d39791152-10" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-10"&gt;&lt;/a&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-11" name="rest_code_541712be2a6c4897ab53499d39791152-11" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;time_steps&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-12" name="rest_code_541712be2a6c4897ab53499d39791152-12" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sequence_length&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-13" name="rest_code_541712be2a6c4897ab53499d39791152-13" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-13"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hidden_units&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-14" name="rest_code_541712be2a6c4897ab53499d39791152-14" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-14"&gt;&lt;/a&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-15" name="rest_code_541712be2a6c4897ab53499d39791152-15" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Build the network&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-16" name="rest_code_541712be2a6c4897ab53499d39791152-16" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-16"&gt;&lt;/a&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-17" name="rest_code_541712be2a6c4897ab53499d39791152-17" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;network_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dyn_network_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-18" name="rest_code_541712be2a6c4897ab53499d39791152-18" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-18"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;network_layers&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-19" name="rest_code_541712be2a6c4897ab53499d39791152-19" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-19"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;recurrent_layer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;time_steps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sequence_length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hidden_units&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;last_only&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-20" name="rest_code_541712be2a6c4897ab53499d39791152-20" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-20"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;recurrent_last_layer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;time_steps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hidden_units&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-21" name="rest_code_541712be2a6c4897ab53499d39791152-21" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-21"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dense_layer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;hidden_units&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;softmax&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-22" name="rest_code_541712be2a6c4897ab53499d39791152-22" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-22"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-23" name="rest_code_541712be2a6c4897ab53499d39791152-23" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-23"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;updater&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;updater_type&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ADAM&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="c1"&gt;// Adam&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-24" name="rest_code_541712be2a6c4897ab53499d39791152-24" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-24"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;batch_size&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="c1"&gt;// The mini-batch size&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-25" name="rest_code_541712be2a6c4897ab53499d39791152-25" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-25"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;network_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-26" name="rest_code_541712be2a6c4897ab53499d39791152-26" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-26"&gt;&lt;/a&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-27" name="rest_code_541712be2a6c4897ab53499d39791152-27" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-27"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;make_unique&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;network_t&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-28" name="rest_code_541712be2a6c4897ab53499d39791152-28" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-28"&gt;&lt;/a&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-29" name="rest_code_541712be2a6c4897ab53499d39791152-29" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-29"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Display the network and dataset&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-30" name="rest_code_541712be2a6c4897ab53499d39791152-30" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-30"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-31" name="rest_code_541712be2a6c4897ab53499d39791152-31" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-31"&gt;&lt;/a&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-32" name="rest_code_541712be2a6c4897ab53499d39791152-32" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-32"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Train the network for performance sake&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-33" name="rest_code_541712be2a6c4897ab53499d39791152-33" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-33"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;fine_tune&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-34" name="rest_code_541712be2a6c4897ab53499d39791152-34" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-34"&gt;&lt;/a&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-35" name="rest_code_541712be2a6c4897ab53499d39791152-35" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-35"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Test the network on test set&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-36" name="rest_code_541712be2a6c4897ab53499d39791152-36" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-36"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;evaluate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-37" name="rest_code_541712be2a6c4897ab53499d39791152-37" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-37"&gt;&lt;/a&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-38" name="rest_code_541712be2a6c4897ab53499d39791152-38" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-38"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_541712be2a6c4897ab53499d39791152-39" name="rest_code_541712be2a6c4897ab53499d39791152-39" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_541712be2a6c4897ab53499d39791152-39"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The network starts with recurrent layer, followed by a layer that extracts only
the last layer and finally a dense layer with a softmax function. The recurrent
layer has support to change the activation function, change the initializer for
the two weights matrices of the RNN and the number of steps for BPTT truncation.&lt;/p&gt;
&lt;p&gt;Here is a possible result:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code text"&gt;&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-1" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-1" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-1"&gt;&lt;/a&gt;Network with 3 layers
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-2" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-2" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-2"&gt;&lt;/a&gt;    RNN(dyn): 28x28 -&amp;gt; TANH -&amp;gt; 28x100
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-3" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-3" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-3"&gt;&lt;/a&gt;    RNN(last): 28x100 -&amp;gt; 100
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-4" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-4" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-4"&gt;&lt;/a&gt;    Dense(dyn): 100 -&amp;gt; SOFTMAX -&amp;gt; 10
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-5" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-5" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-5"&gt;&lt;/a&gt;Total parameters: 13800
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-6" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-6" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-6"&gt;&lt;/a&gt;Train the network with "Stochastic Gradient Descent"
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-7" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-7" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-7"&gt;&lt;/a&gt;    Updater: ADAM
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-8" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-8" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-8"&gt;&lt;/a&gt;       Loss: CATEGORICAL_CROSS_ENTROPY
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-9" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-9" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-9"&gt;&lt;/a&gt; Early Stop: Goal(error)
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-10" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-10" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-10"&gt;&lt;/a&gt;
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-11" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-11" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-11"&gt;&lt;/a&gt;With parameters:
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-12" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-12" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-12"&gt;&lt;/a&gt;          epochs=50
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-13" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-13" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-13"&gt;&lt;/a&gt;      batch_size=100
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-14" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-14" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-14"&gt;&lt;/a&gt;   learning_rate=0.001
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-15" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-15" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-15"&gt;&lt;/a&gt;           beta1=0.9
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-16" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-16" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-16"&gt;&lt;/a&gt;           beta2=0.999
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-17" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-17" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-17"&gt;&lt;/a&gt;
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-18" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-18" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-18"&gt;&lt;/a&gt;Epoch   0/50 - Classification error: 0.11635 Loss: 0.39999 Time 4717ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-19" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-19" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-19"&gt;&lt;/a&gt;Epoch   1/50 - Classification error: 0.11303 Loss: 0.36994 Time 4702ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-20" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-20" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-20"&gt;&lt;/a&gt;Epoch   2/50 - Classification error: 0.06732 Loss: 0.23469 Time 4702ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-21" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-21" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-21"&gt;&lt;/a&gt;Epoch   3/50 - Classification error: 0.04865 Loss: 0.17091 Time 4696ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-22" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-22" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-22"&gt;&lt;/a&gt;Epoch   4/50 - Classification error: 0.05957 Loss: 0.20437 Time 4706ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-23" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-23" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-23"&gt;&lt;/a&gt;Epoch   5/50 - Classification error: 0.05022 Loss: 0.16888 Time 4696ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-24" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-24" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-24"&gt;&lt;/a&gt;Epoch   6/50 - Classification error: 0.03912 Loss: 0.13743 Time 4698ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-25" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-25" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-25"&gt;&lt;/a&gt;Epoch   7/50 - Classification error: 0.04097 Loss: 0.14509 Time 4706ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-26" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-26" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-26"&gt;&lt;/a&gt;Epoch   8/50 - Classification error: 0.03938 Loss: 0.13397 Time 4694ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-27" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-27" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-27"&gt;&lt;/a&gt;Epoch   9/50 - Classification error: 0.03525 Loss: 0.12284 Time 4706ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-28" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-28" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-28"&gt;&lt;/a&gt;Epoch  10/50 - Classification error: 0.03927 Loss: 0.13770 Time 4694ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-29" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-29" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-29"&gt;&lt;/a&gt;Epoch  11/50 - Classification error: 0.03315 Loss: 0.11315 Time 4711ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-30" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-30" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-30"&gt;&lt;/a&gt;Epoch  12/50 - Classification error: 0.05037 Loss: 0.17123 Time 4711ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-31" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-31" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-31"&gt;&lt;/a&gt;Epoch  13/50 - Classification error: 0.02927 Loss: 0.10042 Time 4780ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-32" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-32" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-32"&gt;&lt;/a&gt;Epoch  14/50 - Classification error: 0.03322 Loss: 0.11027 Time 4746ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-33" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-33" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-33"&gt;&lt;/a&gt;Epoch  15/50 - Classification error: 0.03397 Loss: 0.11585 Time 4684ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-34" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-34" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-34"&gt;&lt;/a&gt;Epoch  16/50 - Classification error: 0.02938 Loss: 0.09984 Time 4708ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-35" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-35" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-35"&gt;&lt;/a&gt;Epoch  17/50 - Classification error: 0.03262 Loss: 0.11152 Time 4690ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-36" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-36" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-36"&gt;&lt;/a&gt;Epoch  18/50 - Classification error: 0.02872 Loss: 0.09753 Time 4672ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-37" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-37" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-37"&gt;&lt;/a&gt;Epoch  19/50 - Classification error: 0.02548 Loss: 0.08605 Time 4691ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-38" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-38" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-38"&gt;&lt;/a&gt;Epoch  20/50 - Classification error: 0.02245 Loss: 0.07797 Time 4693ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-39" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-39" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-39"&gt;&lt;/a&gt;Epoch  21/50 - Classification error: 0.02705 Loss: 0.08984 Time 4684ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-40" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-40" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-40"&gt;&lt;/a&gt;Epoch  22/50 - Classification error: 0.02422 Loss: 0.08164 Time 4688ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-41" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-41" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-41"&gt;&lt;/a&gt;Epoch  23/50 - Classification error: 0.02645 Loss: 0.08804 Time 4690ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-42" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-42" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-42"&gt;&lt;/a&gt;Epoch  24/50 - Classification error: 0.02927 Loss: 0.09739 Time 4715ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-43" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-43" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-43"&gt;&lt;/a&gt;Epoch  25/50 - Classification error: 0.02578 Loss: 0.08669 Time 4702ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-44" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-44" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-44"&gt;&lt;/a&gt;Epoch  26/50 - Classification error: 0.02785 Loss: 0.09368 Time 4700ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-45" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-45" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-45"&gt;&lt;/a&gt;Epoch  27/50 - Classification error: 0.02472 Loss: 0.08237 Time 4695ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-46" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-46" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-46"&gt;&lt;/a&gt;Epoch  28/50 - Classification error: 0.02125 Loss: 0.07324 Time 4690ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-47" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-47" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-47"&gt;&lt;/a&gt;Epoch  29/50 - Classification error: 0.01977 Loss: 0.06635 Time 4688ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-48" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-48" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-48"&gt;&lt;/a&gt;Epoch  30/50 - Classification error: 0.03635 Loss: 0.12140 Time 4689ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-49" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-49" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-49"&gt;&lt;/a&gt;Epoch  31/50 - Classification error: 0.02862 Loss: 0.09704 Time 4698ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-50" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-50" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-50"&gt;&lt;/a&gt;Epoch  32/50 - Classification error: 0.02463 Loss: 0.08158 Time 4686ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-51" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-51" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-51"&gt;&lt;/a&gt;Epoch  33/50 - Classification error: 0.02565 Loss: 0.08771 Time 4697ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-52" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-52" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-52"&gt;&lt;/a&gt;Epoch  34/50 - Classification error: 0.02278 Loss: 0.07634 Time 4718ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-53" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-53" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-53"&gt;&lt;/a&gt;Epoch  35/50 - Classification error: 0.02105 Loss: 0.07075 Time 4697ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-54" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-54" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-54"&gt;&lt;/a&gt;Epoch  36/50 - Classification error: 0.02770 Loss: 0.09358 Time 4711ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-55" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-55" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-55"&gt;&lt;/a&gt;Epoch  37/50 - Classification error: 0.02627 Loss: 0.08805 Time 4742ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-56" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-56" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-56"&gt;&lt;/a&gt;Epoch  38/50 - Classification error: 0.02282 Loss: 0.07712 Time 4708ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-57" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-57" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-57"&gt;&lt;/a&gt;Epoch  39/50 - Classification error: 0.02305 Loss: 0.07661 Time 4697ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-58" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-58" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-58"&gt;&lt;/a&gt;Epoch  40/50 - Classification error: 0.02243 Loss: 0.07773 Time 4700ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-59" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-59" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-59"&gt;&lt;/a&gt;Epoch  41/50 - Classification error: 0.02467 Loss: 0.08234 Time 4712ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-60" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-60" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-60"&gt;&lt;/a&gt;Epoch  42/50 - Classification error: 0.01808 Loss: 0.06186 Time 4691ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-61" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-61" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-61"&gt;&lt;/a&gt;Epoch  43/50 - Classification error: 0.02388 Loss: 0.07917 Time 4681ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-62" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-62" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-62"&gt;&lt;/a&gt;Epoch  44/50 - Classification error: 0.02162 Loss: 0.07508 Time 4699ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-63" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-63" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-63"&gt;&lt;/a&gt;Epoch  45/50 - Classification error: 0.01877 Loss: 0.06289 Time 4735ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-64" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-64" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-64"&gt;&lt;/a&gt;Epoch  46/50 - Classification error: 0.02263 Loss: 0.07969 Time 4764ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-65" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-65" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-65"&gt;&lt;/a&gt;Epoch  47/50 - Classification error: 0.02100 Loss: 0.07207 Time 4684ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-66" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-66" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-66"&gt;&lt;/a&gt;Epoch  48/50 - Classification error: 0.02425 Loss: 0.08076 Time 4752ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-67" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-67" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-67"&gt;&lt;/a&gt;Epoch  49/50 - Classification error: 0.02328 Loss: 0.07803 Time 4718ms
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-68" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-68" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-68"&gt;&lt;/a&gt;Restore the best (error) weights from epoch 42
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-69" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-69" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-69"&gt;&lt;/a&gt;Training took 235s
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-70" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-70" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-70"&gt;&lt;/a&gt;Evaluation Results
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-71" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-71" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-71"&gt;&lt;/a&gt;   error: 0.03000
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-72" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-72" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-72"&gt;&lt;/a&gt;    loss: 0.12260
&lt;a id="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-73" name="rest_code_1c3824fdb3ae45bb9623b93f36bebe13-73" href="https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html#rest_code_1c3824fdb3ae45bb9623b93f36bebe13-73"&gt;&lt;/a&gt;evaluation took 245ms
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nothing fancy, but this example is not necessarily optimized.&lt;/p&gt;
&lt;p&gt;All this support is now in the &lt;strong&gt;master&lt;/strong&gt; branch of the DLL project if you want
to check it out. You can also check out the example online:
&lt;a class="reference external" href="https://github.com/wichtounet/dll/blob/master/examples/src/mnist_rnn.cpp"&gt;mnist_rnn.cpp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can access the project &lt;a class="reference external" href="https://github.com/wichtounet/dll"&gt;on Github&lt;/a&gt;.&lt;/p&gt;</description><category>Deep Learning</category><category>dll</category><category>Machine Learning</category><category>projects</category><category>rnn</category><guid>https://baptiste-wicht.com/posts/2017/11/initial-support-for-recurrent-neural-network-rnn-in-dll.html</guid><pubDate>Sun, 12 Nov 2017 14:22:44 GMT</pubDate></item><item><title>DLL New Features: Embeddings and Merge layers</title><link>https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;p&gt;I've just finished integrating new features into DLL, my deep learning library.
I've added support for an embeddings layer, a group layer and a merge layer.
This is not yet released, but available in the master branch.&lt;/p&gt;
&lt;p&gt;Embeddings are used more and more these days to learn dense representation of
characters or word. An embedding layer in a neural network transform labels into
a vector. It's generally used as the first layer of the network. The embedding
are learned as part of the network.&lt;/p&gt;
&lt;p&gt;The merge layer allows to create branches in the network. The input is passed to
each sub layer and then the output of each layer is concatenated to form the
output of the merged layers. This can be very useful to use different
convolutional filter sizes.&lt;/p&gt;
&lt;p&gt;The group layer is a simple utility to group layers together. This is mostly to
use with merge layers to form several branches.&lt;/p&gt;
&lt;p&gt;I've put together a new example to use these features on text classification.
The dataset is totally synthetic for now, but this can easily be reproduced with
a normal text classification dataset. This kind of model is called a Character
Convolutional Neural Network.&lt;/p&gt;
&lt;p&gt;Here is the code for example:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code cpp"&gt;&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-1" name="rest_code_322354356ceb433eb53f1d407523d518-1" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;embedding&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// The length of the embedding vector&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-2" name="rest_code_322354356ceb433eb53f1d407523d518-2" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;constexpr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// The word (or sequence) length&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-3" name="rest_code_322354356ceb433eb53f1d407523d518-3" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-4" name="rest_code_322354356ceb433eb53f1d407523d518-4" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;embedding_network_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dyn_network_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-5" name="rest_code_322354356ceb433eb53f1d407523d518-5" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;network_layers&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-6" name="rest_code_322354356ceb433eb53f1d407523d518-6" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;// The embedding layer&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-7" name="rest_code_322354356ceb433eb53f1d407523d518-7" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;embedding_layer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;embedding&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-8" name="rest_code_322354356ceb433eb53f1d407523d518-8" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-8"&gt;&lt;/a&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-9" name="rest_code_322354356ceb433eb53f1d407523d518-9" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;// The convolutional layers&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-10" name="rest_code_322354356ceb433eb53f1d407523d518-10" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;merge_layer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-11" name="rest_code_322354356ceb433eb53f1d407523d518-11" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-12" name="rest_code_322354356ceb433eb53f1d407523d518-12" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;group_layer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-13" name="rest_code_322354356ceb433eb53f1d407523d518-13" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-13"&gt;&lt;/a&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;conv_layer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;embedding&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;embedding&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-14" name="rest_code_322354356ceb433eb53f1d407523d518-14" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-14"&gt;&lt;/a&gt;&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;mp_2d_layer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-15" name="rest_code_322354356ceb433eb53f1d407523d518-15" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-16" name="rest_code_322354356ceb433eb53f1d407523d518-16" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;group_layer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-17" name="rest_code_322354356ceb433eb53f1d407523d518-17" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;conv_layer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;embedding&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;embedding&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-18" name="rest_code_322354356ceb433eb53f1d407523d518-18" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-18"&gt;&lt;/a&gt;&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;mp_2d_layer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-19" name="rest_code_322354356ceb433eb53f1d407523d518-19" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-19"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-20" name="rest_code_322354356ceb433eb53f1d407523d518-20" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-20"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;group_layer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-21" name="rest_code_322354356ceb433eb53f1d407523d518-21" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-21"&gt;&lt;/a&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;conv_layer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;embedding&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;embedding&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-22" name="rest_code_322354356ceb433eb53f1d407523d518-22" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-22"&gt;&lt;/a&gt;&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;mp_2d_layer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-23" name="rest_code_322354356ceb433eb53f1d407523d518-23" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-23"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-24" name="rest_code_322354356ceb433eb53f1d407523d518-24" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-24"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-25" name="rest_code_322354356ceb433eb53f1d407523d518-25" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-25"&gt;&lt;/a&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-26" name="rest_code_322354356ceb433eb53f1d407523d518-26" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-26"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;// The final softmax layer&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-27" name="rest_code_322354356ceb433eb53f1d407523d518-27" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-27"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dense_layer&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;softmax&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-28" name="rest_code_322354356ceb433eb53f1d407523d518-28" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-28"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-29" name="rest_code_322354356ceb433eb53f1d407523d518-29" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-29"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;updater&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;updater_type&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;NADAM&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="c1"&gt;// Nesterov Adam (NADAM)&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-30" name="rest_code_322354356ceb433eb53f1d407523d518-30" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-30"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;batch_size&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="c1"&gt;// The mini-batch size&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-31" name="rest_code_322354356ceb433eb53f1d407523d518-31" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-31"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;shuffle&lt;/span&gt;&lt;span class="w"&gt;                               &lt;/span&gt;&lt;span class="c1"&gt;// Shuffle before each epoch&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-32" name="rest_code_322354356ceb433eb53f1d407523d518-32" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-32"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;network_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-33" name="rest_code_322354356ceb433eb53f1d407523d518-33" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-33"&gt;&lt;/a&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-34" name="rest_code_322354356ceb433eb53f1d407523d518-34" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-34"&gt;&lt;/a&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;make_unique&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;embedding_network_t&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-35" name="rest_code_322354356ceb433eb53f1d407523d518-35" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-35"&gt;&lt;/a&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-36" name="rest_code_322354356ceb433eb53f1d407523d518-36" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-36"&gt;&lt;/a&gt;&lt;span class="c1"&gt;// Display the network and dataset&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-37" name="rest_code_322354356ceb433eb53f1d407523d518-37" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-37"&gt;&lt;/a&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-38" name="rest_code_322354356ceb433eb53f1d407523d518-38" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-38"&gt;&lt;/a&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-39" name="rest_code_322354356ceb433eb53f1d407523d518-39" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-39"&gt;&lt;/a&gt;&lt;span class="c1"&gt;// Train the network for performance sake&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-40" name="rest_code_322354356ceb433eb53f1d407523d518-40" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-40"&gt;&lt;/a&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;fine_tune&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;samples&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-41" name="rest_code_322354356ceb433eb53f1d407523d518-41" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-41"&gt;&lt;/a&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-42" name="rest_code_322354356ceb433eb53f1d407523d518-42" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-42"&gt;&lt;/a&gt;&lt;span class="c1"&gt;// Test the network on train set&lt;/span&gt;
&lt;a id="rest_code_322354356ceb433eb53f1d407523d518-43" name="rest_code_322354356ceb433eb53f1d407523d518-43" href="https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html#rest_code_322354356ceb433eb53f1d407523d518-43"&gt;&lt;/a&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;evaluate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;samples&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The network starts with an embedding layer. The embedding is then passed to
three convolutional layers with different filter sizes, each followed by
a pooling layer. The outputs of the three layers are merged at the end of the
merge layer. Finally, a softmax layer is used for classification.&lt;/p&gt;
&lt;p&gt;This kind of model can be very powerful and is used regularly. These new
features make for a much larger variety of models that can be build with the DLL
library.&lt;/p&gt;
&lt;p&gt;The full code with the dataset generation can be found online:
&lt;a class="reference external" href="https://github.com/wichtounet/dll/blob/master/examples/src/char_cnn.cpp"&gt;char_cnn.cpp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The next feature I want to focus on is recurrent neural networks. I'll probably
try a single RNN layer first and then upgrade to multi-layers and LSTM and maybe
GRU.&lt;/p&gt;</description><category>C++</category><category>Deep Learning</category><category>dll</category><category>Machine Learning</category><category>projects</category><guid>https://baptiste-wicht.com/posts/2017/10/dll-new-features-embeddings-and-merge-layers.html</guid><pubDate>Tue, 17 Oct 2017 17:50:40 GMT</pubDate></item><item><title>I successfully defended my Ph.D.</title><link>https://baptiste-wicht.com/posts/2017/10/i-successfully-defended-my-phd.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;p&gt;I'm happy to announce that I've successfully defended my thesis "Deep Learning
Features for Image Processing". After four years, I've defended it officially in
front of the thesis committed last Friday and then again two days ago I've
successfully publicly defended in front of my friends, family and colleagues.&lt;/p&gt;
&lt;p&gt;I'm now a "Doctor of Philosophy in Computer Science :)&lt;/p&gt;
&lt;p&gt;I will update my thesis with the last comments in November and send the final
version to the university. At which point, I'll publish it on this website as
well.&lt;/p&gt;</description><category>Machine Learning</category><category>Personal</category><category>thesis</category><guid>https://baptiste-wicht.com/posts/2017/10/i-successfully-defended-my-phd.html</guid><pubDate>Sun, 15 Oct 2017 15:16:29 GMT</pubDate></item><item><title>Deep Learning Library 1.0 - Fast Neural Network Library</title><link>https://baptiste-wicht.com/posts/2017/10/deep-learning-library-10-fast-neural-network-library.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;div&gt;&lt;img alt="DLL Logo" class="align-center" src="https://baptiste-wicht.com/images/dll_logo.png"&gt;
&lt;p&gt;I'm very happy to announce the release of the first version of Deep Learning
Library (DLL) 1.0. DLL is a neural network library with a focus on speed and
ease of use.&lt;/p&gt;
&lt;p&gt;I started working on this library about 4 years ago for my Ph.D. thesis.
I needed a good library to train and use Restricted Boltzmann Machines (RBMs)
and at this time there was no good support for it. Therefore, I decided to write
my own. It now has very complete support for the RBM and the Convolutional RBM
(CRBM) models. Stacks of RBMs (or Deep Belief Networks (DBNs)) can be pretrained
using Contrastive Divergence and then either fine-tuned with mini-batch gradient
descent or Conjugate Gradient or used as a feature extractor. Over the years,
the library has been extended to handle Artificial Neural Networks (ANNs) and
Convolutional Neural Networks (CNNs). The network is also able to train regular
auto-encoders. Several advanced layers such as Dropout or Batch Normalization
are also available as well as adaptive learning rates techniques such as
Adadelta and Adam. The library also has integrated support for a few datasets:
MNIST, CIFAR-10 and ImageNet.&lt;/p&gt;
&lt;p&gt;This library can be used using a C++ interface. The library is fully
header-only. It requires a C++14 compiler, which means a minimum of clang 3.9 or
GCC 6.3.&lt;/p&gt;
&lt;p&gt;In this post, I'm going to present a few examples on using the library and give
some information about the performance of the library and the roadmap for the
project.&lt;/p&gt;
&lt;p class="more"&gt;&lt;a href="https://baptiste-wicht.com/posts/2017/10/deep-learning-library-10-fast-neural-network-library.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>C++</category><category>dll</category><category>etl</category><category>GPU</category><category>Machine Learning</category><category>Performances</category><category>Releases</category><guid>https://baptiste-wicht.com/posts/2017/10/deep-learning-library-10-fast-neural-network-library.html</guid><pubDate>Sat, 07 Oct 2017 13:42:16 GMT</pubDate></item><item><title>DLL: Blazing Fast Neural Network Library</title><link>https://baptiste-wicht.com/posts/2017/08/dll-blazing-fast-neural-network-library.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;p&gt;A few weeks ago, I talked about all
&lt;a class="reference external" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html"&gt;the new features of my Deep Learning Library (DLL)&lt;/a&gt;
project. I've mentioned that, on several experiments, DLL was always
significantly faster than some popular deep learning frameworks such as
TensorFlow. I'll now go into more details into this comparison and provide all
the results. So far, the paper we wrote about these results has not been
published, so I'll not provide the paper directly yet.&lt;/p&gt;
&lt;p&gt;For those that may not know, DLL is the project I've been developing to support
my Ph.D. thesis. This is a neural network framework  that supports
Fully-Connected Neural Network (FCNN), Convolutional Neural Network (CNN),
Restricted Boltzmann Machine (RBM), Deep Belief Network (DBN), Convolutional RBM
(CRBM) and Convolutional DBN (CDBN). It also supports a large variety of options
such as Dropout, Batch Normalization and Adaptive Learning Rates. You can read
read the
&lt;a class="reference external" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html"&gt;previous post&lt;/a&gt;
if you want more information about the new features of the framework. And, as those of
you that read my blog frequently may know, I'm a bit obsessed with performance
optimization, so I've spent a considerable amount of time optimizing
the performance of neural network training, on CPU. Since, at the beginning of my
thesis, I had no access to GPU for training, I've focused on CPU. Although there
is now support for GPU, the gains are not yet important enough.&lt;/p&gt;
&lt;section id="evaluation"&gt;
&lt;h2&gt;Evaluation&lt;/h2&gt;
&lt;p&gt;To see how fast, or not, the library was, it was compared against five popular
machine learning libraries:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Caffe, installed from sources&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;TensorFlow 1.0, from pip&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Keras 2.0, from pip&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Torch, installed from sources&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DeepLearning4J 0.7, from Maven&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I've run four different experiments with all these frameworks and compared the
efficiency of each of them for training the same neural networks with the same
options. In each case, the training or testing error have also been compared to
ensure that each framework is doing roughly the same. I wont present here the
details, but in each experiment DLL showed around the same accuracies as the
other frameworks. I will only focus on the speed results in this article.&lt;/p&gt;
&lt;p&gt;Each experiment is done once with only CPU and once with a GPU. For DLL, I only
report the CPU time in both modes, since it's more stable and more optimized.&lt;/p&gt;
&lt;p&gt;The code for the evaluation is available online on the
&lt;a class="reference external" href="https://github.com/wichtounet/frameworks"&gt;Github repository of the frameworks project&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="mnist-fully-connected-neural-network"&gt;
&lt;h2&gt;MNIST: Fully Connected Neural Network&lt;/h2&gt;
&lt;p&gt;The first experiment is performed on The MNIST data set. It consists of 60'000
grayscale images of size 28x28. The goal is to classify each image of a digit
from 0 to 9. To solve this task, I trained a very small fully-connected neural
network with 500 hidden units in the first layer, 250 in the second and 10 final
hidden units (or output units) for classification. The first two layers are
using the logistic sigmoid activation function and the last layer is using the
softmax activation function. The network is trained for 50 epochs with a
categorical cross entropy loss, with mini-batches of 100 images. Here are
results of this experiment:&lt;/p&gt;
&lt;figure class="align-center"&gt;
&lt;img alt="Training time performance for the different frameworks on the Fully-Connected Neural Network experiment, on MNIST." src="https://baptiste-wicht.com/images/dll_fcnn.png"&gt;
&lt;figcaption&gt;
&lt;p&gt;Training time performance for the different frameworks on the Fully-Connected
Neural Network experiment, on MNIST. All the times are in seconds.&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;In DLL mode, the DLL framework is the clear winner here! It's about 35% faster
than TensorFlow and Keras which are coming at the second place. DLL is more than
four times slower than DLL and the last two frameworks (Caffe and
DeepLearning4J) are five times slower than DLL! Once we add a GPU to the system,
the results are very different. Caffe is now the fastest framework, three times
faster than DLL. DLL is less than two times slower than Keras and TensorFlow.
Interestingly, DLL is still faster than Torch and DeepLearning4J.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="mnist-convolutional-neural-network"&gt;
&lt;h2&gt;MNIST: Convolutional Neural Network&lt;/h2&gt;
&lt;p&gt;Although a Fully-Connected Neural Network is an interesting tool, the trend now
is to use Convolutional Neural Network which have proved very efficient at
solving a lot of problems. The second experiment is also using the same data
set. Again, it's a rather small network. The first layer is a convolutional
layer with 8 5x5 kernels, followed by max pooling layer with 2x2 kernel. They
are followed by one more convolutional layers with 8 5x5 kernels and a 2x2 max
pooling layer. These first four layers are followed by two fully-connected
layers, the first with 150 hidden units and the last one with 10 output units.
The activation functions are the same as for the first network, as is the
training procedure. This takes significantly longer to train than the first
network because of the higher complexity of the convolutional layers compared to
the fully-connected layers even though they have much less weights. The results
are present in the next figure:&lt;/p&gt;
&lt;figure class="align-center"&gt;
&lt;img alt="Training time performance for the different frameworks on the Convolutional Neural Network experiment, on MNIST." src="https://baptiste-wicht.com/images/dll_cnn.png"&gt;
&lt;figcaption&gt;
&lt;p&gt;Training time performance for the different frameworks on the Convolutional
Neural Network experiment, on MNIST. All the times are in seconds.&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Again, on CPU, DLL is the clear winner, by a lot! It's already 3.6 times faster
than the second frameworks Keras and TensorFlow, more than four times faster
than Caffe and Torch and 8 times faster than DeepLearning4J that is proving very
slow on this experiment. Once a GPU is added, Keras and TensorFlow are about
twice faster than DLL. However, DLL is still faster than the other frameworks
even though they are taking advantage of the GPU.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="cifar-10"&gt;
&lt;h2&gt;CIFAR-10&lt;/h2&gt;
&lt;p&gt;The second data set that is tested is the CIFAR-10 data set. It's an object
recognition with 10 classes for classification. The training set is composed of
50'000 colour images for 32x32 pixels. The network that is used for this data
set is similar in architecture than the first network, but has more parameters.
The first convolutional layer now has 12 5x5 kernels and the second
convolutional layer has 24 3x3 kernels. The pooling layers are the same. The
first fully-connected has 64 hidden units and the last one has 10 output units.
The last layer again use a softmax activation function while the other layers
are using Rectifier Linear Units (ReLU). The training is done in the same manner
as for the two first networks. Unfortunately, it was not possible to train
DeepLearning4J on this data set, even though there is official support for this
data set. Since I've had no answer to my question regarding this issue, the
results are simply removed from this experiment. It may not seem so but it's
considerably longer to train this network because of the larger number of input
channels and larger number of convolutional kernels in each layer. Let's get to
the results now:&lt;/p&gt;
&lt;figure class="align-center"&gt;
&lt;img alt="Training time performance for the different frameworks on the Convolutional Neural Network experiment, on CIFAR-10." src="https://baptiste-wicht.com/images/dll_cifar10.png"&gt;
&lt;figcaption&gt;
&lt;p&gt;Training time performance for the different frameworks on the Convolutional
Neural Network experiment, on CIFAR-10. All the times are in seconds.&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;DLL is still the fastest on CPU, but the margin is less than before. It's about
40% faster than TensorFlow and Keras, twice faster than Torch and 2.6 times
faster than Caffe. Once a GPU is added, DLL is about as fast as Torch but slower
than the other three frameworks. TensorFlow and Keras are about four times
faster than DLL while Caffe is about twice faster than DLL. We can see that
with this larger network, the GPU becomes more interesting and that there is
a smaller margin for improvements compared to the other frameworks.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="imagenet"&gt;
&lt;h2&gt;ImageNet&lt;/h2&gt;
&lt;p&gt;The last experiment is made on the ImageNet data set. I used the ILSVRC 2012
subset, that consists "only" of about 1.2 million images for training. I've
resized all the images to 256x256 pixels, this makes for 250 times more colour
values than a MNIST image. This dimension and the number of images makes it
impractical to keep the dataset in memory. The images must be loaded in batch
from the disk. No random cropping or mirroring was performed. The network is
much larger to solve this task. The network starts with 5 pairs of convolutional
layers and max pooling layers. The convolutional layers have 3x3 kernels, 16 for
the first two layers and 32 for the three following one. The five max pooling
layers use 2x2 kernels. Each convolutional layer uses zero-padding so that their
output features are the same dimensions as the input. They are followed by two
fully-connected layer. The first one with 2048 hidden units and the last one
with 1000 output units (one for each class). Except for the last layer, using
softmax, the layers all uses ReLU. The network is trained with mini-batches of
128 images (except for DeepLearning4J and Torch, which can only use 64 images on
the amount of RAM available on my machine). To ease the comparison, I report the
time necessary to train one batch of data (or two for DeepLearning4J and Torch).
The results, presented in logarithmic scale because of DeepLearning4J disastrous
results, are as follows:&lt;/p&gt;
&lt;figure class="align-center"&gt;
&lt;img alt="Training time performance for the different frameworks on the Convolutional Neural Network experiment, on ImageNet." src="https://baptiste-wicht.com/images/dll_imagenet.png"&gt;
&lt;figcaption&gt;
&lt;p&gt;Training time performance for the different frameworks on the Convolutional
Neural Network experiment, on ImageNet. The times are the time necessary to
train a batch of 128 images. All the times are in milliseconds.&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;For this final experiment, DLL is again significantly faster than all the other
frameworks. It's about 40% faster than Keras, twice faster than TensorFlow and
Caffe and more than three times faster than Torch. Although 40% may seem not
that much, don't forget that this kind of training may take days, so it can save
you a lot of time. All the frameworks are much faster than DeepLearning4J. Based
on several posts on the internet, I suspect that this comes from the model of
GPU I have been used (GTX 960), but all the other frameworks seem to handle this
card pretty well.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I hope this is not too much of a bragging post :P We can see that my efforts to
make the code as fast as possible have paid :) As was shown in the experiments,
my DLL framework is always the fastest framework when the neural network is
trained on CPU. I'm quite pleased with the results since I've done a lot of work
to optimize the speed as much as possible and since I'm competing with
well-known libraries that have been developed by several persons.  Moreover, the
accuracies of the trained networks is similar to that of the networks trained
with the other frameworks. Even when the other frameworks are using GPU, the
library still remains competitive, although never the fastest.&lt;/p&gt;
&lt;p&gt;In the next step (I've no idea when I'll have the time though), I will want to
focus on GPU speed. This will mostly come from a better support of the GPU in
the ETL library on which DLL is based. I have many ideas to improve it a lot,
but it will take me a lot of time.&lt;/p&gt;
&lt;p&gt;If you want more information on the DLL library, you can have a look at
&lt;a class="reference external" href="https://github.com/wichtounet/dll"&gt;its Github repository&lt;/a&gt; and especially at
&lt;a class="reference external" href="https://github.com/wichtounet/dll/tree/master/examples/src"&gt;the few examples&lt;/a&gt;.
You can also have a look at &lt;a class="reference external" href="https://baptiste-wicht.com/categories/dll.html"&gt;my posts about DLL&lt;/a&gt;.
Finally, don't hesitate to comment or contact me through Github issues if you
have comments or problems with this post, the library or anything ;)&lt;/p&gt;
&lt;/section&gt;</description><category>C++</category><category>dll</category><category>etl</category><category>GPU</category><category>Machine Learning</category><category>projects</category><guid>https://baptiste-wicht.com/posts/2017/08/dll-blazing-fast-neural-network-library.html</guid><pubDate>Fri, 11 Aug 2017 09:09:14 GMT</pubDate></item><item><title>Update on Deep Learning Library (DLL): Dropout, Batch Normalization, Adaptive Learning Rates, ...</title><link>https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;p&gt;It's been a while since I've posted something on this, especially since I had
one month vacation. This year I've been able to integrate a great number of
changes into my Deep Learning Library (DLL) project. It has seen a lot of
refactorings and a lot of new features making it look like a real neural network
library now. In this post, I'll try to outline the last new features and changes
of the library.&lt;/p&gt;
&lt;p&gt;For those that don't know, DLL is a library for neural network training, written
in C++ and for C++. You can train Fully-Connected Neural Networks and
Convolutional Neural Networks. The focus of the framework is on speed and easy
use in C++.&lt;/p&gt;
&lt;p&gt;As for my ETL project and again thanks to my thesis supervisor, the project now
has a logo:&lt;/p&gt;
&lt;img alt="DLL Logo" class="align-center" src="https://baptiste-wicht.com/images/dll_logo.png"&gt;
&lt;section id="adaptive-learning-rates"&gt;
&lt;h2&gt;Adaptive Learning Rates&lt;/h2&gt;
&lt;p&gt;Before, the framework only supported simple SGD and Momentum updates for the
different parameters of the network. Moreover, it was not very well extendable.
Therefore, I reviewed the system to be able to configure an optimizer for each
network to train. Once that was done, the first thing I did was to add support
for Nesterov Accelerated Gradients (NAG) as a third optimizer. After this,
I realized it was then easy to integrate support for more advanced optimizers
including support for adaptive learning rates. This means that the learning rate
will be adapted for each parameter depending on what the network is learning.
Some of the optimizers even don't need any learning rate. So far, I've
implemented support for the following optimizers: Adagrad, RMSProp, Adam (with
and without bias correction), Adamax (Adam with infinite norm), Nadam (Adam with
Nesterov momentum) and Adadelta (no more learning rate). The user can now choose
the optimizer of its choice, for instance NADAM, as a parameter of the network:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c++"&gt;&lt;a id="rest_code_21e28ccce07046b58d7d90f9d7fa9891-1" name="rest_code_21e28ccce07046b58d7d90f9d7fa9891-1" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_21e28ccce07046b58d7d90f9d7fa9891-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;// Use a Nadam optimizer&lt;/span&gt;
&lt;a id="rest_code_21e28ccce07046b58d7d90f9d7fa9891-2" name="rest_code_21e28ccce07046b58d7d90f9d7fa9891-2" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_21e28ccce07046b58d7d90f9d7fa9891-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;updater&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;updater_type&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;NADAM&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Another improvement in the same domain is that the learning rate can also be
decayed over time automatically by the optimizer.&lt;/p&gt;
&lt;p&gt;If you want more information on the different optimizers, you can have a look at
this very good article:
&lt;a class="reference external" href="http://ruder.io/optimizing-gradient-descent/"&gt;An overview of gradient descent optimization algorithms&lt;/a&gt;
from Sebastian Ruder.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="better-loss-support"&gt;
&lt;h2&gt;Better loss support&lt;/h2&gt;
&lt;p&gt;Before, DLL was automatically using Categorical Cross Entropy Loss, but it was
not possible to change it and it was not even possible to see the loss over
time. Now, the current value of the loss is displayed after each epoch of
training and the loss used for training is now configurable. So far, only three
different losses are supported, but it it not difficult to add new loss to the
system. The three losses supported are: Categorical Cross Entropy Loss, Binary
Cross Entropy Loss and Mean Squared Error Loss.&lt;/p&gt;
&lt;p&gt;Again, each network can specify the loss to use:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code C++"&gt;&lt;a id="rest_code_752bb6f6dee9469a8cfa325e68fdb653-1" name="rest_code_752bb6f6dee9469a8cfa325e68fdb653-1" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_752bb6f6dee9469a8cfa325e68fdb653-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;// Use a Binary Cross Entropy Loss&lt;/span&gt;
&lt;a id="rest_code_752bb6f6dee9469a8cfa325e68fdb653-2" name="rest_code_752bb6f6dee9469a8cfa325e68fdb653-2" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_752bb6f6dee9469a8cfa325e68fdb653-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;loss_function&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;BINARY_CROSS_ENTROPY&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;section id="dropout"&gt;
&lt;h2&gt;Dropout&lt;/h2&gt;
&lt;p&gt;Dropout is a relatively new technique for neural network training. This is
especially made to reduce overfitting since a large number of sub networks will
be trained and it should prevent co-adaptation between different neurons. This
technique is relatively simple. Indeed, it simply randomly sets to zero some of
the input neurons of layers. At each batch, a new mask will be used and this
should lead to a large number of sub networks being trained.&lt;/p&gt;
&lt;p&gt;Here is example of a MLP with Dropout (p=0.5):&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code C++"&gt;&lt;a id="rest_code_75ca29a8502d422bb488857b49cdd4c8-1" name="rest_code_75ca29a8502d422bb488857b49cdd4c8-1" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_75ca29a8502d422bb488857b49cdd4c8-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;network_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dyn_dbn_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;
&lt;a id="rest_code_75ca29a8502d422bb488857b49cdd4c8-2" name="rest_code_75ca29a8502d422bb488857b49cdd4c8-2" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_75ca29a8502d422bb488857b49cdd4c8-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dbn_layers&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;
&lt;a id="rest_code_75ca29a8502d422bb488857b49cdd4c8-3" name="rest_code_75ca29a8502d422bb488857b49cdd4c8-3" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_75ca29a8502d422bb488857b49cdd4c8-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dense_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;layer_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_75ca29a8502d422bb488857b49cdd4c8-4" name="rest_code_75ca29a8502d422bb488857b49cdd4c8-4" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_75ca29a8502d422bb488857b49cdd4c8-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dropout_layer_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;layer_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_75ca29a8502d422bb488857b49cdd4c8-5" name="rest_code_75ca29a8502d422bb488857b49cdd4c8-5" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_75ca29a8502d422bb488857b49cdd4c8-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dense_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;layer_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_75ca29a8502d422bb488857b49cdd4c8-6" name="rest_code_75ca29a8502d422bb488857b49cdd4c8-6" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_75ca29a8502d422bb488857b49cdd4c8-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dropout_layer_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;layer_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_75ca29a8502d422bb488857b49cdd4c8-7" name="rest_code_75ca29a8502d422bb488857b49cdd4c8-7" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_75ca29a8502d422bb488857b49cdd4c8-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dense_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;activation&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;SOFTMAX&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;layer_t&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_75ca29a8502d422bb488857b49cdd4c8-8" name="rest_code_75ca29a8502d422bb488857b49cdd4c8-8" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_75ca29a8502d422bb488857b49cdd4c8-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;updater&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;updater_type&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;MOMENTUM&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="c1"&gt;// Momentum&lt;/span&gt;
&lt;a id="rest_code_75ca29a8502d422bb488857b49cdd4c8-9" name="rest_code_75ca29a8502d422bb488857b49cdd4c8-9" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_75ca29a8502d422bb488857b49cdd4c8-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;batch_size&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;                          &lt;/span&gt;&lt;span class="c1"&gt;// The mini-batch size&lt;/span&gt;
&lt;a id="rest_code_75ca29a8502d422bb488857b49cdd4c8-10" name="rest_code_75ca29a8502d422bb488857b49cdd4c8-10" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_75ca29a8502d422bb488857b49cdd4c8-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;shuffle&lt;/span&gt;&lt;span class="w"&gt;                                  &lt;/span&gt;&lt;span class="c1"&gt;// Shuffle before each epoch&lt;/span&gt;
&lt;a id="rest_code_75ca29a8502d422bb488857b49cdd4c8-11" name="rest_code_75ca29a8502d422bb488857b49cdd4c8-11" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_75ca29a8502d422bb488857b49cdd4c8-11"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;dbn_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;section id="batch-normalization"&gt;
&lt;h2&gt;Batch Normalization&lt;/h2&gt;
&lt;p&gt;Batch Normalization is another new technique for training neural networks. This
technique will ensure that each of the layer will receive inputs that look
kind of similar. This is a very large advantage since then you reduce the
different in impact of hyper parameters on different layers. Google reported
much faster training with this technique by getting rid of Dropout and by
increasing the learning rate of training.&lt;/p&gt;
&lt;p&gt;Here is an example of using Batch Normalization in a CNN:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code C++"&gt;&lt;a id="rest_code_1269e7429d33478dab0a7f52c6cbbf63-1" name="rest_code_1269e7429d33478dab0a7f52c6cbbf63-1" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_1269e7429d33478dab0a7f52c6cbbf63-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;network_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dyn_dbn_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;
&lt;a id="rest_code_1269e7429d33478dab0a7f52c6cbbf63-2" name="rest_code_1269e7429d33478dab0a7f52c6cbbf63-2" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_1269e7429d33478dab0a7f52c6cbbf63-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dbn_layers&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;
&lt;a id="rest_code_1269e7429d33478dab0a7f52c6cbbf63-3" name="rest_code_1269e7429d33478dab0a7f52c6cbbf63-3" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_1269e7429d33478dab0a7f52c6cbbf63-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;conv_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;layer_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_1269e7429d33478dab0a7f52c6cbbf63-4" name="rest_code_1269e7429d33478dab0a7f52c6cbbf63-4" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_1269e7429d33478dab0a7f52c6cbbf63-4"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;batch_normalization_layer_4d_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;layer_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_1269e7429d33478dab0a7f52c6cbbf63-5" name="rest_code_1269e7429d33478dab0a7f52c6cbbf63-5" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_1269e7429d33478dab0a7f52c6cbbf63-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;mp_layer_2d_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;layer_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_1269e7429d33478dab0a7f52c6cbbf63-6" name="rest_code_1269e7429d33478dab0a7f52c6cbbf63-6" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_1269e7429d33478dab0a7f52c6cbbf63-6"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;conv_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;layer_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_1269e7429d33478dab0a7f52c6cbbf63-7" name="rest_code_1269e7429d33478dab0a7f52c6cbbf63-7" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_1269e7429d33478dab0a7f52c6cbbf63-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;batch_normalization_layer_4d_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;layer_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_1269e7429d33478dab0a7f52c6cbbf63-8" name="rest_code_1269e7429d33478dab0a7f52c6cbbf63-8" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_1269e7429d33478dab0a7f52c6cbbf63-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;mp_layer_2d_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;layer_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_1269e7429d33478dab0a7f52c6cbbf63-9" name="rest_code_1269e7429d33478dab0a7f52c6cbbf63-9" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_1269e7429d33478dab0a7f52c6cbbf63-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dense_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;layer_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_1269e7429d33478dab0a7f52c6cbbf63-10" name="rest_code_1269e7429d33478dab0a7f52c6cbbf63-10" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_1269e7429d33478dab0a7f52c6cbbf63-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;batch_normalization_layer_2d_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;layer_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_1269e7429d33478dab0a7f52c6cbbf63-11" name="rest_code_1269e7429d33478dab0a7f52c6cbbf63-11" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_1269e7429d33478dab0a7f52c6cbbf63-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dense_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;activation&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;SOFTMAX&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;layer_t&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_1269e7429d33478dab0a7f52c6cbbf63-12" name="rest_code_1269e7429d33478dab0a7f52c6cbbf63-12" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_1269e7429d33478dab0a7f52c6cbbf63-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;updater&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;updater_type&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;ADADELTA&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="c1"&gt;// Adadelta&lt;/span&gt;
&lt;a id="rest_code_1269e7429d33478dab0a7f52c6cbbf63-13" name="rest_code_1269e7429d33478dab0a7f52c6cbbf63-13" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_1269e7429d33478dab0a7f52c6cbbf63-13"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;batch_size&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;                          &lt;/span&gt;&lt;span class="c1"&gt;// The mini-batch size&lt;/span&gt;
&lt;a id="rest_code_1269e7429d33478dab0a7f52c6cbbf63-14" name="rest_code_1269e7429d33478dab0a7f52c6cbbf63-14" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_1269e7429d33478dab0a7f52c6cbbf63-14"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;shuffle&lt;/span&gt;&lt;span class="w"&gt;                                  &lt;/span&gt;&lt;span class="c1"&gt;// Shuffle the dataset before each epoch&lt;/span&gt;
&lt;a id="rest_code_1269e7429d33478dab0a7f52c6cbbf63-15" name="rest_code_1269e7429d33478dab0a7f52c6cbbf63-15" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_1269e7429d33478dab0a7f52c6cbbf63-15"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;dbn_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You may notice that the layer is set as 4D so should only be used after
convolutional layer (or after the input). If you want to use it after
fully-connected layers, you can use the 2D version that works the same way.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="better-dataset-support"&gt;
&lt;h2&gt;Better dataset support&lt;/h2&gt;
&lt;p&gt;At the beginning, I designed DLL so that the user could directly pass data for
training in the form of STL Containers such as the std::vector. This is good in
some cases, but in some cases, the user does not know how to read the data , or
does not want to be bothered with it. Therefore, several data sets reader are
now available. Moreover, the entire system has been reworked to use generators
for data. A generator is simply a concept that has some data to produce. The
advantage of this new system is data augmentation is now supported every where
and much more efficiently than before. It is now possible to perform random
cropping and mirroring of images for instance. Moreover, the data augmentation
can be done in a secondary thread so as to be sure that there is always enough
data available for the training.&lt;/p&gt;
&lt;p&gt;The library now has a powerful dataset reader for both MNIST and CIFAR-10 and
the reader for ImageNet is almost ready. The project has already been used and
tested with these three datasets now. Moreover, the support for directly passing
STL containers has been maintained. In this case, a generator is simply created
around the data provided in the container and the generator is then passed to
the system for training.&lt;/p&gt;
&lt;p&gt;Here for instance is how to read MNIST data and scale (divide) all pixel values
by 255:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c++"&gt;&lt;a id="rest_code_be552f22d31f4ab6a896a8a2b9211d26-1" name="rest_code_be552f22d31f4ab6a896a8a2b9211d26-1" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_be552f22d31f4ab6a896a8a2b9211d26-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;// Load the dataset&lt;/span&gt;
&lt;a id="rest_code_be552f22d31f4ab6a896a8a2b9211d26-2" name="rest_code_be552f22d31f4ab6a896a8a2b9211d26-2" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_be552f22d31f4ab6a896a8a2b9211d26-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;make_mnist_dataset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;batch_size&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;scale_pre&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{});&lt;/span&gt;
&lt;a id="rest_code_be552f22d31f4ab6a896a8a2b9211d26-3" name="rest_code_be552f22d31f4ab6a896a8a2b9211d26-3" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_be552f22d31f4ab6a896a8a2b9211d26-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_be552f22d31f4ab6a896a8a2b9211d26-4" name="rest_code_be552f22d31f4ab6a896a8a2b9211d26-4" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_be552f22d31f4ab6a896a8a2b9211d26-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_be552f22d31f4ab6a896a8a2b9211d26-5" name="rest_code_be552f22d31f4ab6a896a8a2b9211d26-5" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_be552f22d31f4ab6a896a8a2b9211d26-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;// Train the network&lt;/span&gt;
&lt;a id="rest_code_be552f22d31f4ab6a896a8a2b9211d26-6" name="rest_code_be552f22d31f4ab6a896a8a2b9211d26-6" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_be552f22d31f4ab6a896a8a2b9211d26-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;fine_tune&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_be552f22d31f4ab6a896a8a2b9211d26-7" name="rest_code_be552f22d31f4ab6a896a8a2b9211d26-7" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_be552f22d31f4ab6a896a8a2b9211d26-7"&gt;&lt;/a&gt;
&lt;a id="rest_code_be552f22d31f4ab6a896a8a2b9211d26-8" name="rest_code_be552f22d31f4ab6a896a8a2b9211d26-8" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_be552f22d31f4ab6a896a8a2b9211d26-8"&gt;&lt;/a&gt;&lt;span class="c1"&gt;// Test the network&lt;/span&gt;
&lt;a id="rest_code_be552f22d31f4ab6a896a8a2b9211d26-9" name="rest_code_be552f22d31f4ab6a896a8a2b9211d26-9" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_be552f22d31f4ab6a896a8a2b9211d26-9"&gt;&lt;/a&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;evaluate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;section id="much-faster-performance"&gt;
&lt;h2&gt;Much faster performance&lt;/h2&gt;
&lt;p&gt;I've spent quite a lot of time improving the performance of the framework. I've
focused on every part of training in order to make training of neural networks
as fast as possible. I've also made a comparison of the framework against
several popular machine learning framework (Caffe, TensorFlow, Keras, Torch and
DeepLearning4J). For instance, here are the results on a small CNN experiment on
MNIST with all the different frameworks in CPU mode and in GPU mode:&lt;/p&gt;
&lt;img alt="DLL Comparison Against other frameworks" class="align-center" src="https://baptiste-wicht.com/images/dll_comparison.png"&gt;
&lt;p&gt;As you can see, DLL is by far the fastest framework on CPU. On GPU, there is
still some work to be done, but this is already ongoing (although a lot of work
remains). This is confirmed on each of the four experiments performed on MNIST,
CIFAR-10 and ImageNet, although the margin is smaller for larger networks (still
about 40% faster than TensorFlow and Keras which are the fastest framework after
DLL on CPU on my tests).&lt;/p&gt;
&lt;p&gt;Overall, DLL is between 2 and 4 times faster than before and is always the
fastest framework for neural network training when training is performed on CPU.&lt;/p&gt;
&lt;p&gt;I proposed a talk about these optimizations and performance for Meeting C++ this
year, but it has unfortunately not been accepted. We also have submitted
a publication about the framework to a conference later this year.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="examples"&gt;
&lt;h2&gt;Examples&lt;/h2&gt;
&lt;p&gt;The project now has a few examples (available &lt;a class="reference external" href="https://github.com/wichtounet/dll/tree/master/examples/src"&gt;here&lt;/a&gt;), well-designed and I try to update them with the latest updates of the framework.&lt;/p&gt;
&lt;p&gt;For instance, here is the CNN example for MNIST (without includes):&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c++"&gt;&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-1" name="rest_code_f39622bf376d40eb8de16956c8999ea8-1" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-1"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/*argc*/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cm"&gt;/*argv*/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-2" name="rest_code_f39622bf376d40eb8de16956c8999ea8-2" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-2"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Load the dataset&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-3" name="rest_code_f39622bf376d40eb8de16956c8999ea8-3" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-3"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;make_mnist_dataset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;batch_size&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;scale_pre&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{});&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-4" name="rest_code_f39622bf376d40eb8de16956c8999ea8-4" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-5" name="rest_code_f39622bf376d40eb8de16956c8999ea8-5" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-5"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Build the network&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-6" name="rest_code_f39622bf376d40eb8de16956c8999ea8-6" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-6"&gt;&lt;/a&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-7" name="rest_code_f39622bf376d40eb8de16956c8999ea8-7" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-7"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;network_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dyn_dbn_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-8" name="rest_code_f39622bf376d40eb8de16956c8999ea8-8" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-8"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dbn_layers&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-9" name="rest_code_f39622bf376d40eb8de16956c8999ea8-9" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-9"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;conv_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;layer_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-10" name="rest_code_f39622bf376d40eb8de16956c8999ea8-10" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-10"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;mp_layer_2d_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;layer_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-11" name="rest_code_f39622bf376d40eb8de16956c8999ea8-11" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-11"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;conv_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;layer_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-12" name="rest_code_f39622bf376d40eb8de16956c8999ea8-12" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-12"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;mp_layer_2d_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;layer_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-13" name="rest_code_f39622bf376d40eb8de16956c8999ea8-13" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-13"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dense_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;layer_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-14" name="rest_code_f39622bf376d40eb8de16956c8999ea8-14" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-14"&gt;&lt;/a&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;dense_desc&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;activation&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;SOFTMAX&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;layer_t&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-15" name="rest_code_f39622bf376d40eb8de16956c8999ea8-15" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-15"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;updater&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;updater_type&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;MOMENTUM&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="c1"&gt;// Momentum&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-16" name="rest_code_f39622bf376d40eb8de16956c8999ea8-16" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-16"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;batch_size&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;                          &lt;/span&gt;&lt;span class="c1"&gt;// The mini-batch size&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-17" name="rest_code_f39622bf376d40eb8de16956c8999ea8-17" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-17"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;shuffle&lt;/span&gt;&lt;span class="w"&gt;                                  &lt;/span&gt;&lt;span class="c1"&gt;// Shuffle the dataset before each epoch&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-18" name="rest_code_f39622bf376d40eb8de16956c8999ea8-18" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-18"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;dbn_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-19" name="rest_code_f39622bf376d40eb8de16956c8999ea8-19" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-19"&gt;&lt;/a&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-20" name="rest_code_f39622bf376d40eb8de16956c8999ea8-20" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-20"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;make_unique&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;network_t&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-21" name="rest_code_f39622bf376d40eb8de16956c8999ea8-21" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-21"&gt;&lt;/a&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-22" name="rest_code_f39622bf376d40eb8de16956c8999ea8-22" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-22"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;learning_rate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-23" name="rest_code_f39622bf376d40eb8de16956c8999ea8-23" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-23"&gt;&lt;/a&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-24" name="rest_code_f39622bf376d40eb8de16956c8999ea8-24" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-24"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Display the network and dataset&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-25" name="rest_code_f39622bf376d40eb8de16956c8999ea8-25" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-25"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-26" name="rest_code_f39622bf376d40eb8de16956c8999ea8-26" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-26"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-27" name="rest_code_f39622bf376d40eb8de16956c8999ea8-27" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-27"&gt;&lt;/a&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-28" name="rest_code_f39622bf376d40eb8de16956c8999ea8-28" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-28"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Train the network&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-29" name="rest_code_f39622bf376d40eb8de16956c8999ea8-29" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-29"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;fine_tune&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-30" name="rest_code_f39622bf376d40eb8de16956c8999ea8-30" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-30"&gt;&lt;/a&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-31" name="rest_code_f39622bf376d40eb8de16956c8999ea8-31" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-31"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Test the network on test set&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-32" name="rest_code_f39622bf376d40eb8de16956c8999ea8-32" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-32"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;evaluate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-33" name="rest_code_f39622bf376d40eb8de16956c8999ea8-33" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-33"&gt;&lt;/a&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-34" name="rest_code_f39622bf376d40eb8de16956c8999ea8-34" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-34"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a id="rest_code_f39622bf376d40eb8de16956c8999ea8-35" name="rest_code_f39622bf376d40eb8de16956c8999ea8-35" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_f39622bf376d40eb8de16956c8999ea8-35"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;section id="reproducible-results"&gt;
&lt;h2&gt;Reproducible results&lt;/h2&gt;
&lt;p&gt;And last, but maybe not least, I've finally united all the random number
generation code. This means that DLL can now set a global seed and that two
training of the same network and data with the same seed will now produce
exactly the same result.&lt;/p&gt;
&lt;p&gt;The usage is extremely simple:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code c++"&gt;&lt;a id="rest_code_263aa28ba7e644f09d9d38306d3e8b0c-1" name="rest_code_263aa28ba7e644f09d9d38306d3e8b0c-1" href="https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html#rest_code_263aa28ba7e644f09d9d38306d3e8b0c-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;dll&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;set_seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;section id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;After all these changes, I truly feel that the library is now in a much better
state and could be useful in several projects. I hope that this will be useful
to some more people. Moreover, as you can see by the performance results, the
framework is now extremely efficient at training neural networks on CPU.&lt;/p&gt;
&lt;p&gt;If you want more information, you can consult the
&lt;a class="reference external" href="https://github.com/wichtounet/dll"&gt;dll Github Repository&lt;/a&gt;. You can also add
a comment to this post. If you find any problem on the project or have specific
question or request, don't hesitate to open an issue on Github.&lt;/p&gt;
&lt;/section&gt;</description><category>Deep Learning</category><category>dll</category><category>etl</category><category>Machine Learning</category><category>publications</category><category>thesis</category><guid>https://baptiste-wicht.com/posts/2017/07/update-on-deep-learning-library-dll-dropout-batch-normalization-adaptive-learning-rates.html</guid><pubDate>Sun, 16 Jul 2017 13:41:51 GMT</pubDate></item><item><title>Speed up TensorFlow inference by compiling it from source</title><link>https://baptiste-wicht.com/posts/2017/05/speed-up-tensorflow-inference-compiling-from-source.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;p&gt;The most simple way to install TensorFlow is to work in a virtual Python
environment and simply to use either the TensorFlow official packages in pip or
use one of the official wheels for distributions.  There is one big problem with
that technique and it's the fact that the binaries are precompiled so that they
fit as many hardware configuration as possible. This is normal from Google since
generating precompiled binaries for all the possible combinations of processor
capabilities would be a nightmare. This is not a problem for GPU
since the CUDA Libraries will take care of the difference from one graphics card
to another. But it is a problem with CPU performance. Indeed, different
processors have different capabilities. For instance, the vectorization
capabilities are different from processor to processor (SSE, AVX, AVX2,
AVX-512F, FMA, ...). All those options can make a significant difference in the
performance of the programs. Although most of the machine learning training
occurs on GPU most of the time, the inference is mostly done on the CPU.
Therefore, it probably remains important to be as fast as possible on CPU.&lt;/p&gt;
&lt;p&gt;So if you care about performance on CPU, you should install TensorFlow from
sources directly yourself. This will allow compilation of the TensorFlow sources
with -march=native which will enable all the hardware capabilities of machine on
which you are compiling the library.&lt;/p&gt;
&lt;p&gt;Depending on your problem, this may give you some nice speedup. In my case, on
a very small Recurrent Neural Network, it made inference about 20% faster.  On
a larger problem and depending on your processor, you may gain much more than
that. If you are training on CPU, this may make a very large difference in total
time.&lt;/p&gt;
&lt;p&gt;Installing TensorFlow is sometimes a bit cumbersome. You'll likely have to
compile Bazel from sources as well and depending on your processor, it may take
a long time to finish. Nevertheless, I have successfully compiled TensorFlow
from sources on several machines now without too many problems. Just pay close
attention to the options you are setting while configuring TensorFlow, for
instance CUDA configuration if you want GPU support.&lt;/p&gt;
&lt;p&gt;I hope this little trick will help you gain some time :)&lt;/p&gt;
&lt;p&gt;Here is the &lt;a class="reference external" href="https://www.tensorflow.org/install/install_sources"&gt;link to compile TensorFlow from source&lt;/a&gt;.&lt;/p&gt;</description><category>CPU</category><category>Deep Learning</category><category>GPU</category><category>Intel</category><category>Machine Learning</category><category>Performance</category><category>tensorflow</category><guid>https://baptiste-wicht.com/posts/2017/05/speed-up-tensorflow-inference-compiling-from-source.html</guid><pubDate>Wed, 10 May 2017 12:18:33 GMT</pubDate></item><item><title>Simplify Deep Learning Library usage on Linux and Windows!</title><link>https://baptiste-wicht.com/posts/2016/04/simplify-deep-learning-library-usage-on-linux-and-windows.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;p&gt;No, I'm not dead ;) I've been very busy with my Ph.D (and playing Path of Exile,
let's be honest...) and haven't had time to write something here in a long time.&lt;/p&gt;
&lt;p&gt;Until now, there was too way to use my
&lt;a class="reference external" href="https://github.com/wichtounet/dll/"&gt;Deep Learning Library (DLL)&lt;/a&gt; project:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Write a C++ program that uses the library&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install DLL and write a configuration file to define your network and the problem to solve&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The first version gives you all the features of the tool and allows you to build
exactly what you need. The second version is a bit more limited, but does not
require any C++ knowledge. However, it still does require a recent C++ compiler
and build system.&lt;/p&gt;
&lt;p&gt;Due to the high C++ requirements that are not met by Visual Studio and the fact
that I don't work on Windows, this platform is not supported by the tool. Until
now!&lt;/p&gt;
&lt;p&gt;I've added a third option to use DLL in the form of a Docker image to make the
second option even easier and allow the use of DLL on Windows. All you need is
Docker, which is available on Linux, Mac and Windows. This is still limited to
the second option in that you need to write a configuration describing the
network, but you need to build DLL and don't need to install all its
dependencies.&lt;/p&gt;
&lt;section id="usage"&gt;
&lt;h2&gt;Usage&lt;/h2&gt;
&lt;p&gt;To install the image, you can simply use &lt;cite&gt;docker pull&lt;/cite&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_c586d9be24244da696947daea1d3928a-1" name="rest_code_c586d9be24244da696947daea1d3928a-1" href="https://baptiste-wicht.com/posts/2016/04/simplify-deep-learning-library-usage-on-linux-and-windows.html#rest_code_c586d9be24244da696947daea1d3928a-1"&gt;&lt;/a&gt;docker&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;wichtounet/docker-dll
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, to run it, you have to create a folder containing a &lt;cite&gt;dll.conf&lt;/cite&gt; file and
mount in the container at &lt;cite&gt;/dll/data/&lt;/cite&gt;. There are some examples in the
&lt;a class="reference external" href="https://github.com/wichtounet/docker-dll/"&gt;image repository&lt;/a&gt;.  For instance,
on Linux from the cloned repository:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_9c47a4fee2b444b3b627954b6e40f615-1" name="rest_code_9c47a4fee2b444b3b627954b6e40f615-1" href="https://baptiste-wicht.com/posts/2016/04/simplify-deep-learning-library-usage-on-linux-and-windows.html#rest_code_9c47a4fee2b444b3b627954b6e40f615-1"&gt;&lt;/a&gt;docker&lt;span class="w"&gt; &lt;/span&gt;run&lt;span class="w"&gt; &lt;/span&gt;-v&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;pwd&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/rbm_mnist/:/dll/data/&lt;span class="w"&gt; &lt;/span&gt;wichtounet/docker-dll
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or on Windows:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_ede29e4cd2d145aa8a7524ee3f36b31a-1" name="rest_code_ede29e4cd2d145aa8a7524ee3f36b31a-1" href="https://baptiste-wicht.com/posts/2016/04/simplify-deep-learning-library-usage-on-linux-and-windows.html#rest_code_ede29e4cd2d145aa8a7524ee3f36b31a-1"&gt;&lt;/a&gt;docker&lt;span class="w"&gt; &lt;/span&gt;run&lt;span class="w"&gt; &lt;/span&gt;-v&lt;span class="w"&gt; &lt;/span&gt;/c/Users/Baptiste/rbm_mnist/:/dll/data&lt;span class="w"&gt; &lt;/span&gt;wichtounet/docker-dll
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will automatically run the actions specified in the configuration file and
train your network.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I would really have thought this would be harder, but it turned out that Docker
is a very good solution to deploy multiplatform demo tools :)&lt;/p&gt;
&lt;p&gt;As of now, there is only support for mnist data format in the tool in this
form, but I plan to add basic CSV support as well in the near future.&lt;/p&gt;
&lt;p&gt;I hope that this will help people willing to try the library with a simpler
usage.&lt;/p&gt;
&lt;/section&gt;</description><category>Deep Learning</category><category>dll</category><category>Linux</category><category>Machine Learning</category><category>projects</category><category>Windows</category><guid>https://baptiste-wicht.com/posts/2016/04/simplify-deep-learning-library-usage-on-linux-and-windows.html</guid><pubDate>Fri, 29 Apr 2016 10:48:18 GMT</pubDate></item><item><title>Some news</title><link>https://baptiste-wicht.com/posts/2013/06/some-news.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;p&gt;No, I'm not dead ;)&lt;/p&gt;
&lt;p&gt;After having finished my Master thesis in March, I took a break from my personal projects including this project. I then started a job in my school, waiting for a Ph.D thesis. I'm now working on a very interesting Machine Learning project about Speech, unfortunately in Java ;)&lt;/p&gt;
&lt;p&gt;I just started again working on eddic this week. I'm gonna try to improve as much as possible the performances of the parser. I will also try to post again some articles on this blog, although I don't know about what.&lt;/p&gt;</description><category>C++</category><category>EDDI</category><category>Java</category><category>Machine Learning</category><category>Others</category><guid>https://baptiste-wicht.com/posts/2013/06/some-news.html</guid><pubDate>Tue, 04 Jun 2013 21:52:24 GMT</pubDate></item></channel></rss>