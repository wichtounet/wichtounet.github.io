<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog blog("Baptiste Wicht"); (Posts about avx)</title><link>https://baptiste-wicht.com/</link><description></description><atom:link href="https://baptiste-wicht.com/categories/avx.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sun, 17 Dec 2023 09:13:00 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>C++ Refresh and new technos: FP16 and AVX512</title><link>https://baptiste-wicht.com/posts/2023/12/c%2B%2B-refresh-and-new-technos-fp16-and-avx512.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;p&gt;In the last few months, I have been working on refreshing my Expression Templates Library (ETL) project with modern
C++. I am happy to report that I have now finished the refresh. It took me longer than I expected and I also had less
time than I expected. But I am very happy about the result.&lt;/p&gt;
&lt;p&gt;The main change in etl is the use of concepts. Expression Templates are making heavy use of SFINAE. And I was able to
replace every single usage of SFINAE with concepts. I was also able to replace many assertions with concepts instead.&lt;/p&gt;
&lt;p&gt;In most cases, I am using concepts instead of the &lt;cite&gt;typename&lt;/cite&gt; declaration. For instance&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code cpp"&gt;&lt;a id="rest_code_04f0222c864e4ed98208a9b77576e9cf-1" name="rest_code_04f0222c864e4ed98208a9b77576e9cf-1" href="https://baptiste-wicht.com/posts/2023/12/c%2B%2B-refresh-and-new-technos-fp16-and-avx512.html#rest_code_04f0222c864e4ed98208a9b77576e9cf-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;M&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cpp_enable_iff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_4d&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_04f0222c864e4ed98208a9b77576e9cf-2" name="rest_code_04f0222c864e4ed98208a9b77576e9cf-2" href="https://baptiste-wicht.com/posts/2023/12/c%2B%2B-refresh-and-new-technos-fp16-and-avx512.html#rest_code_04f0222c864e4ed98208a9b77576e9cf-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;in&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;becomes&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code cpp"&gt;&lt;a id="rest_code_e87603232a6e4ed3a331cd7ed8895bf9-1" name="rest_code_e87603232a6e4ed3a331cd7ed8895bf9-1" href="https://baptiste-wicht.com/posts/2023/12/c%2B%2B-refresh-and-new-technos-fp16-and-avx512.html#rest_code_e87603232a6e4ed3a331cd7ed8895bf9-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;etl_4d&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;M&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_e87603232a6e4ed3a331cd7ed8895bf9-2" name="rest_code_e87603232a6e4ed3a331cd7ed8895bf9-2" href="https://baptiste-wicht.com/posts/2023/12/c%2B%2B-refresh-and-new-technos-fp16-and-avx512.html#rest_code_e87603232a6e4ed3a331cd7ed8895bf9-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;in&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This makes the declaration much simpler to read. In some cases, I had to use &lt;cite&gt;requires&lt;/cite&gt;. For instance, here is the old definition of sub_view:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code cpp"&gt;&lt;a id="rest_code_0642f43cc0044d628370323fa7ac20bd-1" name="rest_code_0642f43cc0044d628370323fa7ac20bd-1" href="https://baptiste-wicht.com/posts/2023/12/c%2B%2B-refresh-and-new-technos-fp16-and-avx512.html#rest_code_0642f43cc0044d628370323fa7ac20bd-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;bool&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Aligned&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_0642f43cc0044d628370323fa7ac20bd-2" name="rest_code_0642f43cc0044d628370323fa7ac20bd-2" href="https://baptiste-wicht.com/posts/2023/12/c%2B%2B-refresh-and-new-technos-fp16-and-avx512.html#rest_code_0642f43cc0044d628370323fa7ac20bd-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;sub_view&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Aligned&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;enable_if_t&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;!&lt;/span&gt;&lt;span class="n"&gt;fast_sub_view_able&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;final&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and here is the new one:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code cpp"&gt;&lt;a id="rest_code_f9b5f8ff31f14ef5a4d1716075702ce2-1" name="rest_code_f9b5f8ff31f14ef5a4d1716075702ce2-1" href="https://baptiste-wicht.com/posts/2023/12/c%2B%2B-refresh-and-new-technos-fp16-and-avx512.html#rest_code_f9b5f8ff31f14ef5a4d1716075702ce2-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;bool&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Aligned&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a id="rest_code_f9b5f8ff31f14ef5a4d1716075702ce2-2" name="rest_code_f9b5f8ff31f14ef5a4d1716075702ce2-2" href="https://baptiste-wicht.com/posts/2023/12/c%2B%2B-refresh-and-new-technos-fp16-and-avx512.html#rest_code_f9b5f8ff31f14ef5a4d1716075702ce2-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;requires&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;fast_sub_view_able&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_f9b5f8ff31f14ef5a4d1716075702ce2-3" name="rest_code_f9b5f8ff31f14ef5a4d1716075702ce2-3" href="https://baptiste-wicht.com/posts/2023/12/c%2B%2B-refresh-and-new-technos-fp16-and-avx512.html#rest_code_f9b5f8ff31f14ef5a4d1716075702ce2-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;sub_view&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Aligned&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;final&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This also explains the requirements much better than using SFINAE. In most cases, concepts should be faster to compile
than the old enable-if stuff. However, I have not yet had time to measure that.&lt;/p&gt;
&lt;p&gt;I also made many small cleanups to the code, but they are probably not worth discussing.&lt;/p&gt;
&lt;section id="avx-512"&gt;
&lt;h2&gt;AVX-512&lt;/h2&gt;
&lt;p&gt;What is worth discussing is that I finally added support for AVX-512 into etl. Before, I was waiting until Intel would
give AVX-512F support to desktop CPU, but this is still not the case unfortunately. So I rented a VPS with AVX-512F
support.&lt;/p&gt;
&lt;p&gt;AVX512-F is able to process 512b vector operations at once, twice more than AVX-2. This makes it twice faster in theory.
I have completed the support in etl and did some extra testing as well. I wish I had a machine where to test that on
a regular basis (the VPS is pretty expensive to keep running). If I start working a lot on this project again, I will
consider having a Xeon CPU at hone.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="fp16-and-bf16"&gt;
&lt;h2&gt;FP16 and BF16&lt;/h2&gt;
&lt;p&gt;Another thing I had been wanting to work on for many years is FP16 operations on GPU. FP16 is a floating point type with
only 16b instead of the standard 32b for &lt;cite&gt;float&lt;/cite&gt;. With my new computer and new versions of CUDA, I now got a working
system to do FP16.&lt;/p&gt;
&lt;p&gt;So, I implemented support for many FP16 operations on my &lt;cite&gt;etl-gpu-blas&lt;/cite&gt; project that is used by &lt;cite&gt;etl&lt;/cite&gt; to provide GPU
operations. Thanks to operator overloading in CUDA, there is really nothing complicated about doing that.&lt;/p&gt;
&lt;p&gt;Doing so, I also added support for BF16. This is another half-precision floating point type, but the mantissa and
exponent part are different, apparently better tuned for machine learning. The support is more or less the same in CUDA,
only a different type.&lt;/p&gt;
&lt;p&gt;Currently, it is only used in etl-gpu-blas, not yet in DLL. Indeed, the problem with FP16 and BF16 is that there is no
CPU support, so it is not as easy to use. I plan to improve that support in the future so that I can use it on DLL
without even going to the CPU.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="next-steps"&gt;
&lt;h2&gt;Next steps&lt;/h2&gt;
&lt;p&gt;Another thing I want to explore in the future is FP8, which is a quarter-precision floating point. However, FP8 can only
be used for some tensor operations, through the use of tensor cores. So, I will likely only use it through CUDNN
for convolution operations.&lt;/p&gt;
&lt;p&gt;Finally, I also want to explore INT8 for neural networks. INT8 is easy to do on both CPU and GPU, but you cannot replace
all types in a neural network with INT8, a certain level of quantization is necessary and storage should still be done
in INT16 and INT32. But, that's not for tomorrow.&lt;/p&gt;
&lt;p&gt;The next immediate projec is to refresh the code of dll, with C++23. Then, I want to run some more benchmarks and see
what are my next steps to make dll faster on CPU and GPU.&lt;/p&gt;
&lt;/section&gt;</description><category>avx</category><category>C++</category><category>C++23</category><category>etl</category><category>projects</category><guid>https://baptiste-wicht.com/posts/2023/12/c%2B%2B-refresh-and-new-technos-fp16-and-avx512.html</guid><pubDate>Sun, 17 Dec 2023 08:20:55 GMT</pubDate></item></channel></rss>