<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog blog("Baptiste Wicht"); (Posts about neovim)</title><link>https://baptiste-wicht.com/</link><description></description><atom:link href="https://baptiste-wicht.com/categories/neovim.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Wed, 20 Sep 2023 17:43:59 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Switching from vim to neovim</title><link>https://baptiste-wicht.com/posts/2023/09/switching-from-vim-to-neovim.html</link><dc:creator>Baptiste Wicht</dc:creator><description>&lt;p&gt;As mentioned in my last article, I am now using neovim instead of vim. I just wanted to comment shortly on this change.&lt;/p&gt;
&lt;p&gt;I have been using vim as my IDE for many years now (more than 10 years at least). But at the beginning of the year,
I switched to neovim instead.&lt;/p&gt;
&lt;p&gt;neovim is a fork of vim, so it is quite similar, but it has some very important differences. It started in 2015, after
a multithreading patch was rejected from vim.&lt;/p&gt;
&lt;p&gt;Here are some of the advantages:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Very powerful Builtin Langauge Server Protocol (LSP)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Faster startup&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Builtin LUA support (the configuration can be written entirely in LUA)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Asynchronous tasks (was later added to vim)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A lot of things are compatible between both editors. When I started with neovim, I simply copied over my vim
configuration and started using neovim with only very minor changes.&lt;/p&gt;
&lt;p&gt;But what really convinced me to keep using neovim was the LSP. This feature and the great plugins that make use of it
greatly simplify how to deeply integrate C++ into neovim. I am now taking advantage of the clang tooling to analyze C++
code on the fly. And I get great autocompletion as well.&lt;/p&gt;
&lt;p&gt;All of this is doable with vim as well, but the last time I tried with vim, it was a nightmware to configure. With the
help of (quite a few) plugins, I could setup automcompletion in a great way. This allows me to jump to declarations and
definitions very easily.&lt;/p&gt;
&lt;p&gt;I am far from being a neovim expert, but I am very happy with this tool. It definitely makes my life easier for
configuring complex features, compared to vim.&lt;/p&gt;
&lt;p&gt;If you are interested, you can find my neovim configuration in my &lt;cite&gt;dotfiles repository&amp;lt;https://github.com/wichtounet/dotfiles&amp;gt;&lt;/cite&gt;. It's very fresh because it was previously saved on another place and was recently copied there. I plan to improve it and little by little rewrite it in LUA. There are still some experimental stuff and it could be improved significantly. But I am really happy with the features configured.&lt;/p&gt;
&lt;p&gt;What about you? What do you think of neovim?&lt;/p&gt;</description><category>neovim</category><category>Tools</category><guid>https://baptiste-wicht.com/posts/2023/09/switching-from-vim-to-neovim.html</guid><pubDate>Wed, 20 Sep 2023 17:25:24 GMT</pubDate></item></channel></rss>