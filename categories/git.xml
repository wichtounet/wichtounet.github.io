<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>@Blog("Baptiste Wicht") (Git)</title><link>http://wichtounet.github.io/</link><description></description><atom:link type="application/rss+xml" rel="self" href="http://wichtounet.github.io/categories/git.xml"></atom:link><language>en</language><lastBuildDate>Tue, 18 Mar 2014 20:41:11 GMT</lastBuildDate><generator>Nikola &lt;http://getnikola.com/&gt;</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>EDDIC 0.5 : Functions and foreach</title><link>http://wichtounet.github.io/posts/2011/10/eddic-0-5-functions-foreach.html</link><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;I'm pleased to release the version 0.5. of the EDDI Compiler.&lt;/p&gt;
&lt;p&gt;This new version introduced the first version of function calls. The function can take several parameters but cannot return anything at this moment. A version of foreach loop is now available in the language.&lt;/p&gt;
&lt;p&gt;You can also declare variables globally in the source code. The global variables are stored in the .data section of the ELF file and the local variables are stored on the stack.&lt;/p&gt;
&lt;p&gt;The error reporting of the compiler has been improved. Indeed, now the syntactical errors are reported with the exact location of the source.&lt;/p&gt;
&lt;p&gt;There are also a lot of improvements in the source code. The big header files have been splitted into several files. I replaced all the pointers by smart pointers that allowed me to remove all the memory leaks of the applications and to simplify the memory management. Finally, I started using some new features of C++11 to improve the source code of the application.&lt;/p&gt;
&lt;p&gt;The next version will certainly see return types for functions and perhaps a first version of switch case. Moreover, I have a lot of improvements to do at the assembly level. Indeed, the generated assembly is not efficient at all. Perhaps, I will consider adding arrays too to this version.&lt;/p&gt;
&lt;p&gt;You can find the compiler on the Github repository : &lt;a title="EDDI COmpiler Repository" href="http://github.com/wichtounet/eddic"&gt;https://github.com/wichtounet/eddic&lt;/a&gt;. If you watch the repository, you'll see that I followed a new branching model, the one proposed and enforced by the git-flow tool.&lt;/p&gt;
&lt;p&gt;The exact version I refer to is the v0.5 available in the github tags.&lt;/p&gt;&lt;/div&gt;</description><category>C++</category><category>C++11</category><category>EDDI</category><category>EDDI</category><category>Git</category><category>Releases</category><guid>http://wichtounet.github.io/posts/2011/10/eddic-0-5-functions-foreach.html</guid><pubDate>Mon, 10 Oct 2011 02:38:50 GMT</pubDate></item><item><title>How to install git-flow on Linux</title><link>http://wichtounet.github.io/posts/2011/10/install-git-flow-linux.html</link><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;One week ago, I started using &lt;strong&gt;git-flow&lt;/strong&gt; on eddic. This is a collection of Git extensions to easily follow a branching-model convention for a Git project. I will try to describe this project later on this blog.&lt;/p&gt;
&lt;p&gt;You can install git-flow using this simple command:&lt;/p&gt;
&lt;p&gt;[bash]wget --no-check-certificate -q -O - https://github.com/nvie/gitflow/raw/develop/contrib/gitflow-installer.sh | sudo sh[/bash]&lt;/p&gt;
&lt;p&gt;I recommend you to install a script to autocomplete the git-flow commands and params: &lt;/p&gt;
&lt;p&gt;[bash]mkdir -p ~/src/external &amp;amp;&amp;amp; cd ~/src/external&lt;/p&gt;
&lt;p&gt;git clone https://github.com/bobthecow/git-flow-completion.git git-flow-completion&lt;/p&gt;
&lt;p&gt;mkdir -p ~/bin/ &amp;amp;&amp;amp; cd ~/bin&lt;/p&gt;
&lt;p&gt;ln -s ~/src/external/git-flow-completion/git-flow-completion.bash ./git-flow-completion.sh[/bash]&lt;/p&gt;
&lt;p&gt;Then add a simple command in your .bashrc file:&lt;/p&gt;
&lt;p&gt;[bash]source ~/bin/git-flow-completion.sh[/bash]&lt;/p&gt;
&lt;p&gt;If you want an introduction of git-flow, I recommend you this blog post : &lt;a href="http://jeffkreeftmeijer.com/2010/why-arent-you-using-git-flow/" title="Why aren't you using git-flow ?"&gt;Why aren't you using git-flow ?&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>EDDI</category><category>Git</category><category>Linux</category><category>Linux</category><guid>http://wichtounet.github.io/posts/2011/10/install-git-flow-linux.html</guid><pubDate>Thu, 06 Oct 2011 07:10:24 GMT</pubDate></item><item><title>Git Tip : Restore a deleted tag</title><link>http://wichtounet.github.io/posts/2011/06/git-tip-restore-a-deleted-tag.html</link><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;A little tip that can be very useful, how to restore a deleted Git tag. &lt;/p&gt;
&lt;p&gt;If you juste deleted a tag by error, you can easily restore it following these steps. First, use&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;pre&gt;git fsck --unreachable | grep tag&lt;/pre&gt;
&lt;p&gt;then, you will see the unreachable tag. If you have several tags on the list, use &lt;/p&gt;
&lt;pre&gt;git show KEY&lt;/pre&gt;

&lt;p&gt;to found the good tag and finally, when you know which tag to restore, use&lt;/p&gt;
&lt;pre&gt;git update-ref refs/tags/NAME KEY&lt;/pre&gt;

&lt;p&gt;and the previously deleted tag with restore with NAME. &lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="http://git.661346.n2.nabble.com/template/NamlServlet.jtp?macro=user_nodes&amp;amp;user=177109"&gt;Shawn Pearce&lt;/a&gt; for the tip.&lt;/p&gt;&lt;/div&gt;</description><category>Git</category><category>Others</category><category>Tips</category><guid>http://wichtounet.github.io/posts/2011/06/git-tip-restore-a-deleted-tag.html</guid><pubDate>Wed, 15 Jun 2011 19:18:13 GMT</pubDate></item><item><title>My Java Benchmarks on GitHub</title><link>http://wichtounet.github.io/posts/2010/09/my-java-benchmarks-on-github.html</link><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;I've created a new github repository for my &lt;strong&gt;Java Benchmarks&lt;/strong&gt; : &lt;a title="java-benchmarks github repository" href="http://github.com/wichtounet/java-benchmarks" target="_blank"&gt;java-benchmarks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;From now all my benchmarks will be pushed to this repository. This is more simple for me to manage and more secure also.&lt;/p&gt;
&lt;p&gt;At this time, there is seven benchmarks on the repository :&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;ol&gt;
    &lt;li&gt;Closest Pair Search Benchmark : A benchmark to test two closest pair point search algorithms : the naive one and the &lt;strong&gt;sweeping plane&lt;/strong&gt; one. &lt;a title="Closest Pair Search Benchmark Results" href="http://www.baptiste-wicht.com/2010/04/closest-pair-of-point-plane-sweep-algorithm/" target="_blank"&gt;Results&lt;/a&gt;.&lt;/li&gt;
    &lt;li&gt;File Copy Benchmark : A benchmark on the different ways to make &lt;strong&gt;file copy&lt;/strong&gt; in Java. &lt;a title="Java File Copy Benchmark Results" href="http://www.baptiste-wicht.com/2010/08/file-copy-in-java-benchmark/" target="_blank"&gt;Results&lt;/a&gt;.&lt;/li&gt;
    &lt;li&gt;Iteration Remove Benchmark : A simple benchmark to test if it's interesting to remove the read elements from a list when we make several iterations over the list.&lt;/li&gt;
    &lt;li&gt;Reflection Benchmark : A little benchmark to test the performances of &lt;strong&gt;reflection&lt;/strong&gt; versus switch cases and direct invocations.&lt;/li&gt;
    &lt;li&gt;Short Indexes Loop Benchmark : A benchmark to test which &lt;strong&gt;primitive type&lt;/strong&gt; is the most performing using as iteration index. &lt;a title="Short Indexes Loop Benchmark Results" href="http://www.baptiste-wicht.com/2010/01/dont-use-shorts-in-loop/" target="_blank"&gt;Results&lt;/a&gt;.&lt;/li&gt;
    &lt;li&gt;Synchronization Benchmark : A benchmark to test the performances of the different &lt;strong&gt;synchronization mechanisms&lt;/strong&gt; available in Java to provide mutual exclusion. &lt;a title="Synchronization Benchmark Results" href="http://www.baptiste-wicht.com/2010/09/java-synchronization-mutual-exclusion-benchmark/" target="_blank"&gt;Results&lt;/a&gt;.&lt;/li&gt;
    &lt;li&gt;Unmodifiable Benchmark : A benchmark to test the performances of &lt;strong&gt;unmodifiable collection&lt;/strong&gt; versus creating a copy of the list.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I hope you'll find these sources interesting. If you found errors or improvements, don't hesitate to comment to tell me what.&lt;/p&gt;&lt;/div&gt;</description><category>Benchmarks</category><category>Git</category><category>Java</category><category>Java</category><category>Performances</category><guid>http://wichtounet.github.io/posts/2010/09/my-java-benchmarks-on-github.html</guid><pubDate>Fri, 03 Sep 2010 07:16:20 GMT</pubDate></item><item><title>Version Control with Git – Book Review</title><link>http://wichtounet.github.io/posts/2010/07/version-control-with-git-book-review.html</link><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;After I had chosen to switch to Git, I thought the time has become to read a complete book on the subject to understand the concepts of Git from the base to further level.&lt;/p&gt;
&lt;p&gt;So I chose "Version control with Git", from Jon Loeliger&lt;/p&gt;
&lt;p&gt;I just finished to read it, so I will try to give my impressions about this book on this post.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://wichtounet.github.io/wp-content/uploads/2010/07/oreilly_git.jpeg"&gt;&lt;img class="size-full wp-image-711" title="Version control with Git" src="http://wichtounet.github.io/wp-content/uploads/2010/07/oreilly_git.jpeg" alt="Version control with Git" width="300" height="300"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;In the first chapter, the author describe Git, it goals and it history. The second one is about the installation of Git.&lt;/p&gt;
&lt;p&gt;The next three chapters are about the basic concepts of Git.Add a file, commit the changes, track the changes and view the differences. And how to configure the repository and the global installation. More than that, these chapters explains also how Git store the different objects and track the changes of the repository. The index is also fully explained and we learn how to ignore some files.&lt;/p&gt;
&lt;p&gt;After these first chapters, the next chapters are very specific two one feature.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;ul&gt;
    &lt;li&gt;The sixth chapter is about the commits : Identify the commits, find a commit, view the commit history, ...&lt;/li&gt;
    &lt;li&gt;The seventh is about the branches : create branches, switch to another branch, delete a branch, merge 2 branches, ...&lt;/li&gt;
    &lt;li&gt;The next one is about the diff : how to read them, how to create them, ...&lt;/li&gt;
    &lt;li&gt;The ninth is about the merges. It explains with a lot of precision how the merges are done, the different strategies Git can use and how to solve the problems we can found when merging branches&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These 4 chapters are really interesting, but sometimes a little boring. There is a lot of informations and the author is going really far into Git. Nevertheless, it's good written.&lt;/p&gt;
&lt;p&gt;After that we learn how to alter commits.12&lt;/p&gt;
&lt;p&gt;And after, we learn how to work with remote repositories and make our changes available to the other developers. We learn the different ways to work in a project with Git.&lt;/p&gt;
&lt;p&gt;The 2 next chapters are bout the patches and the hooks. And the last two are about 2 features less used that are the possibility to combine several repositories into one and the possibility to work with Git in a SVN project.&lt;/p&gt;
&lt;p&gt;To conclude, I have to say that this book is an excellent book about Git. It's not only an introduction, it's a complete reference about this great Version Control System. Sometimes, I thought that there is too details about some features, but perhaps for something a little more used to Git, it will be fine. I advice this book to everyone who want to learn almost everything about Git.&lt;/p&gt;&lt;/div&gt;</description><category>Books</category><category>Git</category><category>Programming</category><guid>http://wichtounet.github.io/posts/2010/07/version-control-with-git-book-review.html</guid><pubDate>Mon, 12 Jul 2010 06:56:53 GMT</pubDate></item><item><title>Tip : How to solve “agent admitted failure to sign using the key” error ?</title><link>http://wichtounet.github.io/posts/2010/07/tip-how-to-solve-agent-admitted-failure-to-sign-using-the-key-error.html</link><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;A very simple tip that can save a lot of time. &lt;/p&gt;
&lt;p&gt;When i wanted to do a git clone, I had the given error : &lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;pre&gt;Agent admitted failure to sign using the key.
&lt;p&gt;Permission denied (publickey).&lt;/p&gt;&lt;/pre&gt;
&lt;p&gt;I found that this is an SSH error. &lt;/p&gt;
&lt;p&gt;One of the readers, Leonardo Hessel, pointed that out that ssh-add is also a solution: &lt;/p&gt;
&lt;p&gt;[shell]ssh-add[/shell]&lt;/p&gt;
&lt;p&gt;Another solution is simply to login and logout and it should work. &lt;/p&gt;&lt;/div&gt;</description><category>Git</category><category>Linux</category><category>Tips</category><category>Ubuntu</category><category>Ubuntu</category><guid>http://wichtounet.github.io/posts/2010/07/tip-how-to-solve-agent-admitted-failure-to-sign-using-the-key-error.html</guid><pubDate>Sun, 04 Jul 2010 16:59:41 GMT</pubDate></item><item><title>JTheque is migrating to Git</title><link>http://wichtounet.github.io/posts/2010/06/jtheque-is-migrating-to-git.html</link><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;Some informations about the current state of JTheque. I'm currently migrating it from SVN to Git. Actually the projet is hosted at Developpez.com, a french community. For more visibility, i wanted to host it in an english website. After several days of comparative, I chosen Github has host. Because i chose Git, i think it's the best and easier community to share projects using Git.&lt;/p&gt;
&lt;p&gt;I will use a subdomain in this website (jtheque.baptiste-wicht.com) to host the Javadoc and maven reports, because it take too space to store it at GitHub. I will use GitHub for the sources, issues and Wiki.&lt;/p&gt;
&lt;p&gt;After only several days of work with Git, I found it really fun and comfortable to work with.&lt;/p&gt;
&lt;p&gt;Here are the already created projects on GitHub :&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;ul&gt;
    &lt;li&gt;&lt;a href="http://github.com/wichtounet/jtheque-utils" target="_blank"&gt;jtheque-utils&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://github.com/wichtounet/jtheque-unit-utils" target="_blank"&gt;jtheque-unit-utils&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://github.com/wichtounet/jtheque-xml-utils" target="_blank"&gt;jtheque-xml-utils&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://github.com/wichtounet/jtheque-core" target="_blank"&gt;jtheque-core&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://github.com/wichtounet/jtheque-primary-utils" target="_blank"&gt;jtheque-primary-utils&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://github.com/wichtounet/jtheque-movies-module" target="_blank"&gt;jtheque-movies-module&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://github.com/wichtounet/jtheque-memory-module" target="_blank"&gt;jtheque-memory-module&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://github.com/wichtounet/jtheque-osgi-wrap" target="_blank"&gt;jtheque-osgi-wrap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of them are not completed at all. But the start is here. Don't hesitate to comment on how I did that. I've also already created a site for jtheque-xml-utils (&lt;a href="http://jtheque.baptiste-wicht.com/xml-utils/"&gt;http://jtheque.baptiste-wicht.com/xml-utils/&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;I will migrate all the projects into Git and complete the GitHub repositories and Maven Site the next few weeks.&lt;/p&gt;
&lt;p&gt;If I didn't post a lot these last weeks, it's because, it's the end of the semester, so it seems a lot of exams and projects to finish, so not a lot of time to post. I will do better the next month.&lt;/p&gt;&lt;/div&gt;</description><category>Git</category><category>Java</category><category>JTheque</category><guid>http://wichtounet.github.io/posts/2010/06/jtheque-is-migrating-to-git.html</guid><pubDate>Tue, 15 Jun 2010 16:40:56 GMT</pubDate></item></channel></rss>