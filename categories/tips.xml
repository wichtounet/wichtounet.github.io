<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>@Blog("Baptiste Wicht") (Tips)</title><link>http://wichtounet.github.io/</link><description></description><atom:link rel="self" href="http://wichtounet.github.io/categories/tips.xml" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sun, 23 Mar 2014 22:47:57 GMT</lastBuildDate><generator>Nikola &lt;http://getnikola.com/&gt;</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Gentoo Tips: Avoid Gnome 3.8 from being emerged automatically</title><link>http://wichtounet.github.io/posts/2013/12/gentoo-tips-avoid-gnome-3-8-emerged-automatically.html</link><description>&lt;div&gt;&lt;p&gt;Since Gnome 3.8 has been out in the portage tree, a lot of problems arise when you try to emerge something. If it was only when you update the system, it would be OK, but this arises every time you try to install something.&lt;/p&gt;
&lt;p&gt;For instance, if I try to update vim on my system, it tries to update empathy to version 3.8 and then pulls some other dependencies causing blocks and other USE problems. I personally don't think empathy should be emerged when emerging vim. Fortunately, you can disable this behavior by using emerge in this way:&lt;/p&gt;
&lt;pre&gt;emerge --ignore-built-slot-operator-deps=y ...&lt;/pre&gt;

&lt;p&gt;With that, when you emerge vim, it doesn't emerge Gnome 3.8. It is very useful if you want to stay with Gnome 3.6 for the moment.&lt;/p&gt;
&lt;p&gt;I already used this tip several times. I hope that this will be useful to other people.&lt;/p&gt;&lt;/div&gt;</description><category>Gentoo</category><category>Linux</category><category>Tips</category><guid>http://wichtounet.github.io/posts/2013/12/gentoo-tips-avoid-gnome-3-8-emerged-automatically.html</guid><pubDate>Sat, 07 Dec 2013 05:24:17 GMT</pubDate></item><item><title>Git Tip : Restore a deleted tag</title><link>http://wichtounet.github.io/posts/2011/06/git-tip-restore-a-deleted-tag.html</link><description>&lt;div&gt;&lt;p&gt;A little tip that can be very useful, how to restore a deleted Git tag. &lt;/p&gt;
&lt;p&gt;If you juste deleted a tag by error, you can easily restore it following these steps. First, use&lt;/p&gt;
&lt;pre&gt;git fsck --unreachable | grep tag&lt;/pre&gt;

&lt;p&gt;then, you will see the unreachable tag. If you have several tags on the list, use &lt;/p&gt;
&lt;pre&gt;git show KEY&lt;/pre&gt;

&lt;p&gt;to found the good tag and finally, when you know which tag to restore, use&lt;/p&gt;
&lt;pre&gt;git update-ref refs/tags/NAME KEY&lt;/pre&gt;

&lt;p&gt;and the previously deleted tag with restore with NAME. &lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="http://git.661346.n2.nabble.com/template/NamlServlet.jtp?macro=user_nodes&amp;amp;user=177109"&gt;Shawn Pearce&lt;/a&gt; for the tip.&lt;/p&gt;&lt;/div&gt;</description><category>Git</category><category>Others</category><category>Tips</category><guid>http://wichtounet.github.io/posts/2011/06/git-tip-restore-a-deleted-tag.html</guid><pubDate>Wed, 15 Jun 2011 17:18:13 GMT</pubDate></item><item><title>How to solve scrolling problems in Kile when using Gnome</title><link>http://wichtounet.github.io/posts/2011/05/avoid-scrolling-problems-in-kile-when-using-gnome.html</link><description>&lt;div&gt;&lt;p&gt;From this morning, I was encoutering problems when scrolling in Kile editor using Gnome. When I scrolled, not all the lines were moving and the text was only correct when I clicked on them... &lt;/p&gt;
&lt;p&gt;After some researches, I found that the solution was to use a different graphics system. You can do that in any Qt applicaitions using the graphics-system command line option. You can choose between raster and opengl. opengl is supposed to be the fastest one, but it is still experimental. In my case, I use raster that solve the scrolling problems and it doesn't change anything, which is fine. &lt;/p&gt;
&lt;p&gt;So you can use this command-line to start Kile : &lt;/p&gt;
&lt;pre&gt;kile --graphicssystem raster&lt;/pre&gt;

&lt;p&gt;And that will solve your scrolling problems if you encounter some. You can also use this tip to improve performances of Kile if you need. If you do, test with opengl and if it's not stable on your system, choose raster, that will improve the performance compared to the default graphics system.&lt;/p&gt;&lt;/div&gt;</description><category>Latex</category><category>Tips</category><category>Linux</category><guid>http://wichtounet.github.io/posts/2011/05/avoid-scrolling-problems-in-kile-when-using-gnome.html</guid><pubDate>Tue, 31 May 2011 06:40:05 GMT</pubDate></item><item><title>Swing tip : A better SwingWorker without exception swallowing</title><link>http://wichtounet.github.io/posts/2010/09/a-better-swingworker.html</link><description>&lt;div&gt;&lt;p&gt;When we develop Swing applications, SwingWorker are very helpful. But there is a big disadvantage using this class. if you don't call get() in the done method, you will lose all the exceptions that the computation in the doInBackground() has thrown. And you action can stop and you will never see why. In 95% of my actions using SwingWorker, the doInBackground() return nothing.&lt;/p&gt;
&lt;p&gt;Jonathan Giles has presented on his blog a good solution to solve this exception swallowing. In my side, I've often something to do in the EDT before the doInBackground() run, so I've made the changes on the code presented by Jonathan and it gave me that simple class that I found better than the SwingWorker :&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BetterSwingWorker&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;SwingWorker&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Void&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;worker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;SimpleSwingWorker&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;execute&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;SwingUtilities&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;invokeLater&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Runnable&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="nd"&gt;@Override&lt;/span&gt;
            &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;before&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;});&lt;/span&gt;

        &lt;span class="n"&gt;worker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;execute&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;before&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//Nothing by default&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;doInBackground&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="n"&gt;Exception&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;done&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SimpleSwingWorker&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;SwingWorker&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Void&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nd"&gt;@Override&lt;/span&gt;
        &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="n"&gt;Void&lt;/span&gt; &lt;span class="nf"&gt;doInBackground&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;BetterSwingWorker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;doInBackground&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="nd"&gt;@Override&lt;/span&gt;
        &lt;span class="kd"&gt;protected&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;done&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;InterruptedException&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;RuntimeException&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;ExecutionException&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;RuntimeException&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getCause&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;

            &lt;span class="n"&gt;BetterSwingWorker&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;done&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can use it as the default SwingWorker. You must implement the doInBackground() and done() methods and you can, only if you want, override the before() method that is invoked in the EDT at the start of the process. And then, you can execute your SwingWorker using execute(). &lt;/p&gt;
&lt;p&gt;I hope this little class can be useful to somebody. &lt;/p&gt;
&lt;p&gt;&lt;a title="A SwingWorker that doesn’t swallow exceptions" href="http://jonathangiles.net/blog/?p=341" target="_blank"&gt;Source for the non-swallowing swingworker.&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>Java</category><category>Swing</category><category>Tips</category><guid>http://wichtounet.github.io/posts/2010/09/a-better-swingworker.html</guid><pubDate>Fri, 24 Sep 2010 05:36:55 GMT</pubDate></item><item><title>Tip : Batch resize images on Ubuntu Linux</title><link>http://wichtounet.github.io/posts/2010/09/tip-batch-resize-images-on-ubuntu-linux.html</link><description>&lt;div&gt;&lt;p&gt;After needing to &lt;a href="http://www.baptiste-wicht.com/2010/07/tip-optimize-images-on-ubuntu-linux/" target="_blank"&gt;optimize a lot of images at once&lt;/a&gt;, this weekend I needed to resize a lot of images to the same size because they were too big.&lt;/p&gt;
&lt;p&gt;Like every other thing in Linux, there is a really simple tool to automate that. I used imagemagick to do that. Of course, there is certainly a lot of other things to make that work, but this is the first I've found and it works well.&lt;/p&gt;
&lt;p&gt;So first, you need to install it if you don't have the tool :&lt;/p&gt;
&lt;pre&gt;sudo apt-get install imagemagick&lt;/pre&gt;

&lt;p&gt;And then, you can resize all the JPG images to a width of 640px of the current folder using the single command :&lt;/p&gt;
&lt;pre&gt;mogrify -resize 640 *.jpg&lt;/pre&gt;

&lt;p&gt;If you want the height, just add a x :&lt;/p&gt;
&lt;pre&gt;mogrify -resize x640 *.jpg&lt;/pre&gt;

&lt;p&gt;You can also specify maximum width and height, that can be useful if you have big images and you don't want a width larger than x and a height larger than y but you don't want to resize little images in the same folder. Here is an example resizing images if the width is larger than 1280 or height larger than 1024 :&lt;/p&gt;
&lt;pre&gt;mogrify -resize '1280x1024&amp;gt;' *.jpg&lt;/pre&gt;

&lt;p&gt;With all that commands, the ratio is preserved. If you want more informations on the possible resize options, you can consult the &lt;a href="http://www.imagemagick.org/www/command-line-processing.html#geometry" target="_blank"&gt;documentation of ImageMagick&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hope that will help someone.&lt;/p&gt;&lt;/div&gt;</description><category>Linux</category><category>Tips</category><guid>http://wichtounet.github.io/posts/2010/09/tip-batch-resize-images-on-ubuntu-linux.html</guid><pubDate>Wed, 08 Sep 2010 05:26:01 GMT</pubDate></item><item><title>Do not use relative path with LogBack</title><link>http://wichtounet.github.io/posts/2010/08/do-not-use-relative-path-with-logback.html</link><description>&lt;div&gt;&lt;p&gt;A little tip that can be useful and save a lot of time : Do not use relative path with LogBack.&lt;/p&gt;
&lt;p&gt;I wondered why this little LogBack configuration didn't work :&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8" ?&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;contextName&amp;gt;&lt;/span&gt;JTheque&lt;span class="nt"&gt;&amp;lt;/contextName&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;appender&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"FILE"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"ch.qos.logback.core.rolling.RollingFileAppender"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;file&amp;gt;&lt;/span&gt;logs/jtheque.log&lt;span class="nt"&gt;&amp;lt;/file&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;rollingPolicy&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"ch.qos.logback.core.rolling.FixedWindowRollingPolicy"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;FileNamePattern&amp;gt;&lt;/span&gt;logs/jtheque.%i.log.zip&lt;span class="nt"&gt;&amp;lt;/FileNamePattern&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;MinIndex&amp;gt;&lt;/span&gt;1&lt;span class="nt"&gt;&amp;lt;/MinIndex&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;MaxIndex&amp;gt;&lt;/span&gt;5&lt;span class="nt"&gt;&amp;lt;/MaxIndex&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/rollingPolicy&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;triggeringPolicy&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;MaxFileSize&amp;gt;&lt;/span&gt;5MB&lt;span class="nt"&gt;&amp;lt;/MaxFileSize&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/triggeringPolicy&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;layout&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"ch.qos.logback.classic.PatternLayout"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;Pattern&amp;gt;&lt;/span&gt;%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n&lt;span class="nt"&gt;&amp;lt;/Pattern&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/layout&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/appender&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;root&lt;/span&gt; &lt;span class="na"&gt;level=&lt;/span&gt;&lt;span class="s"&gt;"DEBUG"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;appender-ref&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"FILE"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/root&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;No file were written. I searched during a long time and after that tested with an absolute path and it worked really well. But absolute path is not very good. But, you can use system properties in the configuration, so I used user.dir to make the think works : &lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;        ...
        &lt;span class="nt"&gt;&amp;lt;file&amp;gt;&lt;/span&gt;${user.dir}/logs/jtheque.log&lt;span class="nt"&gt;&amp;lt;/file&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;rollingPolicy&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"ch.qos.logback.core.rolling.FixedWindowRollingPolicy"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;FileNamePattern&amp;gt;&lt;/span&gt;${user.dir}/logs/jtheque.%i.log.zip&lt;span class="nt"&gt;&amp;lt;/FileNamePattern&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;MinIndex&amp;gt;&lt;/span&gt;1&lt;span class="nt"&gt;&amp;lt;/MinIndex&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;MaxIndex&amp;gt;&lt;/span&gt;5&lt;span class="nt"&gt;&amp;lt;/MaxIndex&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/rollingPolicy&amp;gt;&lt;/span&gt;
        ...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And this time, it works well !&lt;/p&gt;
&lt;p&gt;Hope this will be useful to somebody.&lt;/p&gt;&lt;/div&gt;</description><category>Java</category><category>Tips</category><guid>http://wichtounet.github.io/posts/2010/08/do-not-use-relative-path-with-logback.html</guid><pubDate>Thu, 12 Aug 2010 05:53:14 GMT</pubDate></item><item><title>Quick Tip : Launch Java Applications From Java applications with Ant</title><link>http://wichtounet.github.io/posts/2010/08/tip-launch-java-applications-from-java-applications-with-ant.html</link><description>&lt;div&gt;&lt;p&gt;One week ago, I searched a way &lt;strong&gt;to launch a Java application&lt;/strong&gt; from an other Java application without loosing portability. And I found a post on StackOverflow explaining how achieve that goal using &lt;strong&gt;Apache Ant&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;It's really easy. It use the Ant classes and simulate a project launching and a build task. In this post, we'll see a simple method to launch an application from Java.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;Here is a simple method that launch an application using Ant :&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;jtheque&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;osgi&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.tools.ant.BuildException&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.tools.ant.BuildLogger&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.tools.ant.DefaultLogger&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.tools.ant.DemuxOutputStream&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.tools.ant.Project&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.tools.ant.taskdefs.Java&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.io.PrintStream&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Launcher&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;launchApplication&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Class&lt;/span&gt; &lt;span class="n"&gt;mainClass&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;returnCode&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="n"&gt;Project&lt;/span&gt; &lt;span class="n"&gt;project&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Project&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

        &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setBasedir&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getProperty&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"user.dir"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;init&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

        &lt;span class="n"&gt;PrintStream&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;PrintStream&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;err&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

        &lt;span class="n"&gt;BuildLogger&lt;/span&gt; &lt;span class="n"&gt;logger&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;DefaultLogger&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setOutputPrintStream&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setErrorPrintStream&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setMessageOutputLevel&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Project&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;MSG_INFO&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;addBuildListener&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setOut&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;PrintStream&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;DemuxOutputStream&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;)));&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setErr&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;PrintStream&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;DemuxOutputStream&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;)));&lt;/span&gt;

        &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fireBuildStarted&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

        &lt;span class="n"&gt;Throwable&lt;/span&gt; &lt;span class="n"&gt;caught&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;log&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Launch Application"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

            &lt;span class="n"&gt;Java&lt;/span&gt; &lt;span class="n"&gt;javaTask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Java&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
            &lt;span class="n"&gt;javaTask&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setTaskName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Application Launcher"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;javaTask&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setProject&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;javaTask&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setFork&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;javaTask&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setFailonerror&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;javaTask&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setCloneVm&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;javaTask&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setClassname&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mainClass&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getName&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
            &lt;span class="n"&gt;javaTask&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setArgs&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;javaTask&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;init&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

            &lt;span class="n"&gt;returnCode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;javaTask&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;executeJava&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildException&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;caught&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

            &lt;span class="n"&gt;returnCode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fireBuildFinished&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;caught&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setOut&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setErr&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;returnCode&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here are some explanations :&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;ul&gt;
    &lt;li&gt;First, we create a new Project using the user directory as base directory and init it.&lt;/li&gt;
    &lt;li&gt;Then, we create a simple logger using the System.out and System.err streams and replace then with demux streams&lt;/li&gt;
    &lt;li&gt;After that, we create the Java task. By using setCloneVm(true), the new virtual machine will clone the properties of the current virtual machine. We must use a fork virtual machine to get the return code of the application. We set also the name of the class and the args of the launch. Finally we init and execute the task&lt;/li&gt;
    &lt;li&gt;Once the application is finished, we get the return code and restore the old System.out and System.err streams&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's extremely simple and portable and the code is, I think, very clean.&lt;/p&gt;&lt;/div&gt;</description><category>Apache</category><category>Java</category><category>Libraries</category><category>Tips</category><guid>http://wichtounet.github.io/posts/2010/08/tip-launch-java-applications-from-java-applications-with-ant.html</guid><pubDate>Mon, 09 Aug 2010 05:22:42 GMT</pubDate></item><item><title>Tip : Optimize images on Ubuntu Linux</title><link>http://wichtounet.github.io/posts/2010/07/tip-optimize-images-on-ubuntu-linux.html</link><description>&lt;div&gt;&lt;p&gt;When working with a lot of images by example for galleries on a website, it could be really interesting to optimize the images to save a lot of space and directly improve the performances of the website and save some traffic if this is limited by your hosting. &lt;/p&gt;
&lt;h5&gt;Optimize JPEG images with jpegoptim&lt;/h5&gt;

&lt;p&gt;A great tool to optimize JPEG images is jpegoptim. It's a simple command line tool available as Ubuntu package. You can install it easily : &lt;/p&gt;
&lt;pre&gt;sudo apt-get install jpegoptim&lt;/pre&gt;

&lt;p&gt;And it's also really simple to use. First, to optimize an image without loss : &lt;/p&gt;
&lt;pre&gt;jpegoptim image.jpg&lt;/pre&gt;

&lt;p&gt;Or with a loss of max 25% : &lt;/p&gt;
&lt;pre&gt;jpegoptim --max=75 image.jpg&lt;/pre&gt;

&lt;p&gt;More informations on &lt;a target="_blank" href="http://freshmeat.net/projects/jpegoptim/"&gt;the official site&lt;/a&gt;.&lt;/p&gt;
&lt;h5&gt;Optimize PNG, BMP and GIF images with optipng&lt;/h5&gt;

&lt;p&gt;An other tool to optimize other types of images is optipng. Here again you can install it with apt-get : &lt;/p&gt;
&lt;pre&gt;sudo apt-get install optipng&lt;/pre&gt;

&lt;p&gt;It's as easy as the first tool : &lt;/p&gt;
&lt;pre&gt;optipng image.png&lt;/pre&gt;

&lt;p&gt;You can also configure the tool to use the best optimization level, but also the slowest : &lt;/p&gt;
&lt;pre&gt;optipng -o7 image.png&lt;/pre&gt;

&lt;p&gt;So here we are : You have now enough informations to optimize all you images on Ubuntu. I hope this will be useful to somebody.&lt;/p&gt;&lt;/div&gt;</description><category>Linux</category><category>Tips</category><category>Tools</category><guid>http://wichtounet.github.io/posts/2010/07/tip-optimize-images-on-ubuntu-linux.html</guid><pubDate>Thu, 22 Jul 2010 05:15:16 GMT</pubDate></item><item><title>Tip : Profile an OSGi application with VisualVM</title><link>http://wichtounet.github.io/posts/2010/07/tip-profile-osgi-application-visualvm.html</link><description>&lt;div&gt;&lt;p&gt;When you develop applications and you've performance problems, it's really interesting to see what can cause this problems. And it that case, the profilers are the most useful tool. By example, we can use VisualVM, packed by default with the Java Virtual Machine. For more information, you can read &lt;a href="http://www.baptiste-wicht.com/2010/07/profile-applications-java-visualvm/"&gt;this introduction to Java VisualVM&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;But, when you work with OSGi application, it's not as simple as a normal application. The profiler needs that its class can be found by the profiled classes, but with OSGi, the classloader are restricted by the framework and the classes of the profiler cannot be found. &lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;But there is a workaround using boot class path and boot delegation. You need to do 2 things. &lt;/p&gt;
&lt;h5&gt;1. Add the classes to the boot class-path &lt;/h5&gt;

&lt;p&gt;First of all, the classes of the profiler must be present in the application. For that, we use the boot class-path. You must add this library in the boot class-path : ${VISUALVM_HOME}/profiler3/lib/jfluid-server.jar.  The boot class-path is configured using the -Xbootclasspath option, but if you just add this option : &lt;/p&gt;
&lt;pre&gt;-Xbootclasspath:${VISUALVM_HOME}/profiler3/lib/jfluid-server.jar&lt;/pre&gt;

&lt;p&gt;The classes of the JRE will not be found and you will get that kind of error : &lt;/p&gt;
&lt;pre&gt;Error occurred during initialization of VM
java/lang/NoClassDefFoundError: java/lang/Object&lt;/pre&gt;

&lt;p&gt;So we need to keep the default boot class-path. To get this, just launch this program : &lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BootClassPath&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getProperty&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sun.boot.class.path"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And it will give you the default boot class-path. Then, you just have to append it to the jar of VisualVM with ':'. By example, on my computer, it's the option I need : &lt;/p&gt;
&lt;pre&gt;-Xbootclasspath:/usr/lib/jvm/java-6-sun-1.6.0.20/lib/visualvm/profiler3/lib/jfluid-server.jar:/usr/lib/jvm/java-6-sun-1.6.0.20/jre/lib/resources.jar:/usr/lib/jvm/java-6-sun-1.6.0.20/jre/lib/rt.jar:/usr/lib/jvm/java-6-sun-1.6.0.20/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-6-sun-1.6.0.20/jre/lib/jsse.jar:/usr/lib/jvm/java-6-sun-1.6.0.20/jre/lib/jce.jar:/usr/lib/jvm/java-6-sun-1.6.0.20/jre/lib/charsets.jar:/usr/lib/jvm/java-6-sun-1.6.0.20/jre/classes&lt;/pre&gt;

&lt;h5&gt;2. Add boot delegation to the OSGi framework&lt;/h5&gt;

&lt;p&gt;This is easier. Here you just have to said to the OSGi container, to made the classes of the profiler available to all bundles. For that, you need to add this property : &lt;/p&gt;
&lt;pre&gt;-Dorg.osgi.framework.bootdelegation=org.netbeans.lib.profiler,org.netbeans.lib.profiler.*&lt;/pre&gt;

&lt;p&gt;And normally, it's enough. But some OSGi containers, like Felix, doesn't take the command line properties in consideration in the framework depending on how you launch it. In my case, I embed the Felix Server in my application, so I need to explicitly add this property to the framework. For that, read the documentation of the containers to know how to add properties to the framework. &lt;/p&gt;
&lt;p&gt;Here we are. Hope this will be useful to someone. Personally, I lost a lot of time trying several configurations before finding this successful one.&lt;/p&gt;&lt;/div&gt;</description><category>Java</category><category>OSGi</category><category>Performances</category><category>Tips</category><category>Tools</category><guid>http://wichtounet.github.io/posts/2010/07/tip-profile-osgi-application-visualvm.html</guid><pubDate>Tue, 20 Jul 2010 05:01:28 GMT</pubDate></item><item><title>Tip : Integrate Play Framework in IntelliJ Idea</title><link>http://wichtounet.github.io/posts/2010/07/integrate-play-framework-intellij-idea.html</link><description>&lt;div&gt;&lt;p&gt;After &lt;a target="_blank" href="http://www.baptiste-wicht.com/2010/07/getting-started-play-framework/"&gt;created a &lt;strong&gt;Play Framework&lt;/strong&gt; first application&lt;/a&gt;, it's time to integrate it in &lt;strong&gt;IntelliJ Idea&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;This is made really easy because, play provide a command to create the Iml module file for the project. You can use the command play idealize app_name to create a iml module file. &lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;So let's try : &lt;/p&gt;
&lt;pre&gt;wichtounet@Linux-Desktop:~/dev/play$ play idealize hello/
~        _            _ 
~  _ __ | | __ _ _  _| |
~ | '_ \| |/ _' | || |_|
~ |  __/|_|\____|\__ (_)
~ |_|            |__/

~ play! 1.0.3, http://www.playframework.org

~ OK, the application is ready for Intellij Idea
~ Use File/New Module/Import Existing module

wichtounet@Linux-Desktop:~/dev/play$ &lt;/pre&gt;

&lt;p&gt;If you go on the hello folder, you'll found a "Hello World.iml" file. "Hello World" is the name of the application. So you just have to add it to a IntelliJ Idea project. And it's almost done. &lt;/p&gt;
&lt;p&gt;&lt;a href="http://wichtounet.github.io/wp-content/uploads/2010/07/Play-Idea-1.png"&gt;&lt;img src="http://wichtounet.github.io/wp-content/uploads/2010/07/Play-Idea-1.png" alt="Play Framework Project in Idea" title="Play Framework Project in Idea" width="834" height="396" class="size-full wp-image-675"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The libraries are good configured, the test folder is already configured as a test folder. But a thing we can do is to ignore the logs and tmp folders, not really useful during development. &lt;/p&gt;
&lt;p&gt;&lt;a href="http://wichtounet.github.io/wp-content/uploads/2010/07/Play-Idea-2.png"&gt;&lt;img src="http://wichtounet.github.io/wp-content/uploads/2010/07/Play-Idea-2-300x178.png" alt="Ignore the logs and tmp folders" title="Ignore the logs and tmp folders" width="300" height="178" class="size-medium wp-image-676"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And last, the sources of the Play Framework aren't linked, so we can add them :&lt;/p&gt;
&lt;p&gt;&lt;a href="http://wichtounet.github.io/wp-content/uploads/2010/07/Play-Idea-3.png"&gt;&lt;img src="http://wichtounet.github.io/wp-content/uploads/2010/07/Play-Idea-3.png" alt="Add the sources of the framework" title="Add the sources of the framework" width="559" height="470" class="size-full wp-image-677"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And now we've a fully configured Play Framework Project in our editor : &lt;/p&gt;
&lt;p&gt;&lt;a href="http://wichtounet.github.io/wp-content/uploads/2010/07/Play-Idea-4.png"&gt;&lt;img src="http://wichtounet.github.io/wp-content/uploads/2010/07/Play-Idea-4.png" alt="Complete Play Framework Integration" title="Complete Play Framework Integration" width="834" height="396" class="size-full wp-image-678"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Great, not ? &lt;/p&gt;&lt;/div&gt;</description><category>IntelliJ Idea</category><category>Java</category><category>Play!</category><category>Tips</category><guid>http://wichtounet.github.io/posts/2010/07/integrate-play-framework-intellij-idea.html</guid><pubDate>Tue, 06 Jul 2010 05:02:49 GMT</pubDate></item><item><title>Tip Replace an old copyright by a new one</title><link>http://wichtounet.github.io/posts/2010/07/replace-an-old-copyright-by-a-new-one.html</link><description>&lt;div&gt;&lt;p&gt;Today, I searched a tool to &lt;strong&gt;replace&lt;/strong&gt; the old copyright of the GNU GPL V3 license by the copyright of the Apache License 2.0. But I've not found a simple tool to do a &lt;strong&gt;multi-line replacement&lt;/strong&gt; in a complete set of files. So like the developer I'm, I decided to do it myself. And because it can be useful to someone else and because open source is good, I also decided to give it to everything that want :)&lt;/p&gt;
&lt;p&gt;The usage is quite simple :&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;pre&gt;java -jar RCR.jar old_file new_file file&lt;/pre&gt;
&lt;ul&gt;
    &lt;li&gt;old_file is the path to a file containing the old copyright&lt;/li&gt;
    &lt;li&gt;new_file is the path to the file containing the new copyright&lt;/li&gt;
    &lt;li&gt;file is a folder to make the replacements in. If it's a folder, all the files and sub-folders will be searched for replacements.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here, I'm talking about a copyright, but it of course also works for any other multi-line replacement you want. &lt;/p&gt;
&lt;p&gt;The jar is available here : &lt;a href="http://wichtounet.github.io/wp-content/uploads/2010/07/RCR.jar"&gt;RCR.jar&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The sources is available here : &lt;a href="http://wichtounet.github.io/wp-content/uploads/2010/07/RCR.java"&gt;RCR.java&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I hope that will be useful to someone.&lt;/p&gt;&lt;/div&gt;</description><category>Java</category><category>Tips</category><category>Tools</category><guid>http://wichtounet.github.io/posts/2010/07/replace-an-old-copyright-by-a-new-one.html</guid><pubDate>Mon, 05 Jul 2010 11:29:14 GMT</pubDate></item><item><title>Tip : How to solve “agent admitted failure to sign using the key” error ?</title><link>http://wichtounet.github.io/posts/2010/07/tip-how-to-solve-agent-admitted-failure-to-sign-using-the-key-error.html</link><description>&lt;div&gt;&lt;p&gt;A very simple tip that can save a lot of time. &lt;/p&gt;
&lt;p&gt;When i wanted to do a git clone, I had the given error : &lt;/p&gt;
&lt;pre&gt;Agent admitted failure to sign using the key.
Permission denied (publickey).&lt;/pre&gt;

&lt;p&gt;I found that this is an SSH error. &lt;/p&gt;
&lt;p&gt;One of the readers, Leonardo Hessel, pointed that out that ssh-add is also a solution: &lt;/p&gt;
&lt;pre&gt;ssh-add&lt;/pre&gt;

&lt;p&gt;Another solution is simply to login and logout and it should work.&lt;/p&gt;&lt;/div&gt;</description><category>Git</category><category>Linux</category><category>Tips</category><guid>http://wichtounet.github.io/posts/2010/07/tip-how-to-solve-agent-admitted-failure-to-sign-using-the-key-error.html</guid><pubDate>Sun, 04 Jul 2010 14:59:41 GMT</pubDate></item><item><title>Tip : Add resources dynamically to a ClassLoader</title><link>http://wichtounet.github.io/posts/2010/05/tip-add-resources-dynamically-to-a-classloader.html</link><description>&lt;div&gt;&lt;p&gt;Theoretically, it's not possible to ad resources to a &lt;strong&gt;ClassLoader&lt;/strong&gt; in Java after creation. I say theoretically, because, we can do that using &lt;strong&gt;Reflection&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;In fact, the &lt;strong&gt;URLClassLoader&lt;/strong&gt; class has a &lt;em&gt;addUrl(URL url)&lt;/em&gt; method to add a new URL, so we can invoke that method to add an URL where the ClassLoader can search to load a class. But this method is protected. So here is an example taking advantage of Reflection to add URL to the &lt;strong&gt;system ClassLoader&lt;/strong&gt; : &lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;addURLToSystemClassLoader&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;URL&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="n"&gt;IntrospectionException&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
  &lt;span class="n"&gt;URLClassLoader&lt;/span&gt; &lt;span class="n"&gt;systemClassLoader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;URLClassLoader&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;ClassLoader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSystemClassLoader&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; 
  &lt;span class="n"&gt;Class&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;urlclassloader&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;classLoaderClass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;URLClassLoader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; 

  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;Method&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;classLoaderClass&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getDeclaredMethod&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"addURL"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Class&lt;/span&gt;&lt;span class="o"&gt;[]{&lt;/span&gt;&lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;});&lt;/span&gt; 
    &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setAccessible&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; 
    &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;invoke&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;systemClassLoader&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;[]{&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;});&lt;/span&gt; 
  &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Throwable&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;printStackTrace&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; 
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;IntrospectionException&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error when adding url to system ClassLoader "&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; 
  &lt;span class="o"&gt;}&lt;/span&gt; 
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is easy and that can be done for any URLClassLoader. But of course, this is an ugly hack and that must not be always used but can be useful sometimes. An other way to do that is to create a new Class extending URLClassLoader and make the &lt;em&gt;addUrl(URL url)&lt;/em&gt; public, but that can be done with the system ClassLoader.&lt;/p&gt;&lt;/div&gt;</description><category>Java</category><category>Tips</category><guid>http://wichtounet.github.io/posts/2010/05/tip-add-resources-dynamically-to-a-classloader.html</guid><pubDate>Sat, 15 May 2010 04:40:03 GMT</pubDate></item><item><title>Tip : How to switch from KUbuntu to Ubuntu</title><link>http://wichtounet.github.io/posts/2010/05/switch-kubuntu-to-ubuntu.html</link><description>&lt;div&gt;&lt;p&gt;After installed the new version of &lt;strong&gt;KUbuntu Lucid Lynx&lt;/strong&gt;, I have changed the display manager from &lt;strong&gt;KDE&lt;/strong&gt; (KUbuntu) to &lt;strong&gt;Gnome&lt;/strong&gt; (Ubuntu).&lt;/p&gt;
&lt;p&gt;This is easier than we could think.&lt;/p&gt;
&lt;p&gt;The first thing to do is to install the Ubuntu desktop :&lt;/p&gt;
&lt;pre&gt;sudo apt-get install ubuntu-desktop&lt;/pre&gt;

&lt;p&gt;That will install the Ubuntu Display Manager. You'll be asked for the Display Manager to use, choose gdm (Gnome Display Manager).&lt;/p&gt;
&lt;p&gt;After that, you'll have the Gnome Display Manager, but you've also all the applications of the KUbuntu Desktop distribution.&lt;/p&gt;
&lt;p&gt;To remove them, you can use this command :&lt;/p&gt;
&lt;pre&gt;sudo apt-get remove akonadi-server akregator amarok amarok-common amarok-utils apport-kde apturl-kde ark cdrdao dolphin dragonplayer exiv2 foomatic-db-gutenprint freespacenotifier gdebi-kde gnupg-agent gtk2-engines-qtcurve gwenview hpijs-ppds ibus-qt4 icoutils ijsgutenprint install-package jockey-kde k3b k3b-data kaddressbook kamera kate kbluetooth kcalc kcm-gtk kcm-touchpad kde-window-manager kde-zeroconf kdebase-bin kdebase-data kdebase-plasma kdebase-runtime kdebase-runtime-data kdebase-workspace kdebase-workspace-bin kdebase-workspace-data kdebase-workspace-kgreet-plugins kdegraphics-strigi-plugins kdelibs-bin kdelibs5 kdelibs5-data kdemultimedia-kio-plugins kdepasswd kdepim-groupware kdepim-kresources kdepim-runtime kdepim-strigi-plugins kdepim-wizards kdepimlibs-data kdepimlibs5 kdesudo kdm kfind khelpcenter4 klipper kmag kmail kmix kmousetool knm-runtime knotes konqueror konqueror-nsplugins konqueror-plugin-searchbar konsole kontact kopete kopete-message-indicator korganizer kpackagekit kppp krdc krfb krosspython ksnapshot ksysguard ksysguardd ksystemlog ktimetracker ktorrent ktorrent-data kubuntu-debug-installer kubuntu-default-settings kubuntu-desktop kubuntu-docs kubuntu-firefox-installer kubuntu-konqueror-shortcuts kubuntu-notification-helper kvkbd kwalletmanager language-selector-qt libakonadiprivate1 libao2 libattica0 libaudio2 libboost-program-options1.40.0 libclucene0ldbl libdbusmenu-qt2 libepub0 libexiv2-6 libflac++6 libibus-qt1 libindicate-qt0 libiodbc2 libk3b6 libkcddb4 libkdcraw8 libkdecorations4 libkdepim4 libkephal4 libkexiv2-8 libkfontinst4 libkipi7 libkleo4 libkonq5 libkonq5-templates libkonqsidebarplugin4 libkopete4 libkpgp4 libkscreensaver5 libksgrd4 libksieve4 libksignalplotter4 libkwineffects1 libkworkspace4 liblastfm0 libmimelib4 libmng1 libmodplug0c2 libmpcdec3 libmsn0.3 libmysqlclient16 libokularcore1 libotr2 libpackagekit-glib2-12 libpackagekit-qt-12 libphonon4 libplasma-applet-system-monitor4 libplasma-geolocation-interface4 libplasma3 libplasmaclock4 libplasmagenericshell4 libpolkit-qt-1-0 libpoppler-qt4-3 libprocesscore4 libprocessui4 libqca2 libqca2-plugin-ossl libqimageblitz4 libqt4-assistant libqt4-dbus libqt4-designer libqt4-help libqt4-network libqt4-opengl libqt4-qt3support libqt4-script libqt4-scripttools libqt4-sql libqt4-sql-mysql libqt4-sql-sqlite libqt4-svg libqt4-test libqt4-webkit libqt4-xml libqt4-xmlpatterns libqtcore4 libqtgui4 libqtscript4-core libqtscript4-gui libqtscript4-network libqtscript4-sql libqtscript4-uitools libqtscript4-xml libsolidcontrol4 libsolidcontrolifaces4 libsoprano4 libssh-4 libstreamanalyzer0 libstreams0 libtag-extras1 libtaskmanager4 libvncserver0 libweather-ion4 libxcb-shape0 libxcb-shm0 libxcb-xv0 libxine1 libxine1-bin libxine1-console libxine1-misc-plugins libxine1-x libzip1 mysql-client-core-5.1 mysql-common mysql-server-core-5.1 network-manager-kde okular okular-extra-backends openoffice.org-kde openoffice.org-style-oxygen oxygen-cursor-theme oxygen-icon-theme oxygen-icon-theme-complete packagekit packagekit-backend-apt phonon phonon-backend-xine pinentry-gtk2 pinentry-qt4 plasma-dataengines-addons plasma-dataengines-workspace plasma-desktop plasma-scriptengine-javascript plasma-scriptengine-python plasma-widget-facebook plasma-widget-folderview plasma-widget-kimpanel plasma-widget-kimpanel-backend-ibus plasma-widget-kubuntu-feedback plasma-widget-message-indicator plasma-widget-quickaccess plasma-widgets-addons plasma-widgets-workspace plymouth-theme-kubuntu-logo polkit-kde-1 printer-applet python-kde4 python-packagekit python-qt4 python-qt4-dbus python-sip quassel quassel-data shared-desktop-ontologies software-properties-kde soprano-daemon system-config-printer-kde systemsettings ttf-dejavu ttf-dejavu-extra update-manager-kde usb-creator-kde userconfig virtuoso-nepomuk&lt;/pre&gt;

&lt;p&gt;If you're under Karmic Koala (9.10), you must use this command : &lt;/p&gt;
&lt;pre&gt;sudo apt-get remove akonadi-server akregator amarok amarok-common amarok-utils apport-kde apturl-kde ark cdrdao dolphin dragonplayer exiv2 foomatic-db-gutenprint gdebi-kde gnupg-agent gtk2-engines-qtcurve gwenview hpijs-ppds ibus-qt4 ijsgutenprint imagemagick install-package jockey-kde k3b k3b-data kaddressbook kamera kate kcm-gtk kde-icons-oxygen kde-style-qtcurve kde-window-manager kde-zeroconf kdebase-bin kdebase-data kdebase-plasma kdebase-runtime kdebase-runtime-bin-kde4 kdebase-runtime-data kdebase-runtime-data-common kdebase-workspace-bin kdebase-workspace-data kdebase-workspace-kgreet-plugins kdebase-workspace-libs4+5 kdebluetooth kdegraphics-strigi-plugins kdelibs-bin kdelibs5 kdelibs5-data kdemultimedia-kio-plugins kdepasswd kdepim-groupware kdepim-kresources kdepim-runtime kdepim-runtime-data kdepim-runtime-libs4 kdepim-strigi-plugins kdepim-wizards kdepimlibs-data kdepimlibs5 kdesudo kdm kfind khelpcenter4 kipi-plugins klipper kmag kmail kmix kmousetool knotes konq-plugins konq-plugins-l10n konqueror konqueror-nsplugins konqueror-plugin-searchbar konqueror-plugins konsole kontact kopete korganizer kpackagekit kppp krdc krfb ksnapshot ksysguard ksysguardd ksystemlog ktimetracker ktorrent ktorrent-data kubuntu-artwork-usplash kubuntu-default-settings kubuntu-desktop kubuntu-docs kubuntu-firefox-installer kubuntu-konqueror-shortcuts kvkbd kwalletmanager kwin-style-qtcurve language-selector-qt libakonadiprivate1 libao2 libaudio2 libboost-program-options1.38.0 libclucene0ldbl libepub0 libexiv2-5 libfftw3-3 libflac++6 libindicate-qt0 libjpeg-progs libk3b6 libkabcommon4 libkcddb4 libkdcraw7 libkdecorations4 libkdepim4 libkexiv2-7 libkipi6 libkleo4 libknotificationitem1 libkonq5 libkonq5-templates libkonqsidebarplugin4 libkontactinterfaces4 libkopete4 libkorundum4-ruby1.8 libkpgp4 libksane0 libksieve4 libkwineffects1 liblancelot0 liblastfm0 liblzma0 libmimelib4 libmodplug0c2 libmpcdec3 libmsn0.1 libokularcore1 libotr2 libpackagekit-glib11 libpackagekit-qt11 libplasma3 libpolkit-dbus2 libpolkit-grant2 libpolkit-qt0 libpolkit2 libpoppler-qt4-3 libqca2 libqca2-plugin-ossl libqimageblitz4 libqscintilla2-5 libqt4-assistant libqt4-dbus libqt4-designer libqt4-help libqt4-network libqt4-opengl libqt4-phonon libqt4-qt3support libqt4-ruby1.8 libqt4-script libqt4-scripttools libqt4-sql libqt4-sql-mysql libqt4-sql-sqlite libqt4-svg libqt4-test libqt4-webkit libqt4-xml libqt4-xmlpatterns libqtcore4 libqtgui4 libqtscript4-core libqtscript4-gui libqtscript4-network libqtscript4-sql libqtscript4-uitools libqtscript4-xml libruby1.8 libscim8c2a libsmokekde4-2 libsmokeqt4-2 libsoprano4 libstreamanalyzer0 libstreams0 libstrigiqtdbusclient0 libtag-extras1 libtidy-0.99-0 libvncserver0 libxcb-shape0 libxcb-shm0 libxcb-xv0 libxine1 libxine1-bin libxine1-console libxine1-misc-plugins libxine1-x libzip1 mysql-server-core-5.1 okular okular-extra-backends openoffice.org-kde openoffice.org-style-oxygen oxygen-cursor-theme packagekit packagekit-backend-apt phonon-backend-xine pinentry-gtk2 pinentry-qt4 plasma-dataengines-addons plasma-dataengines-workspace plasma-scriptengine-python plasma-widget-facebook plasma-widget-folderview plasma-widget-googlecalendar plasma-widget-indicatordisplay plasma-widget-kimpanel plasma-widget-kubuntu-qa-feedback plasma-widget-lancelot plasma-widget-networkmanagement plasma-widget-quickaccess plasma-widgets-addons plasma-widgets-workspace policykit printer-applet python-kde4 python-packagekit python-qt4 python-qt4-dbus python-sip4 quassel quassel-data ruby ruby1.8 software-properties-kde soprano-daemon speedcrunch system-config-printer-kde systemsettings ttf-arphic-uming ttf-dejavu ttf-dejavu-extra update-manager-kde update-notifier-kde usb-creator-kde userconfig&lt;/pre&gt;

&lt;p&gt;I hope that will be useful to someone :)&lt;/p&gt;&lt;/div&gt;</description><category>Linux</category><category>Others</category><category>Tips</category><guid>http://wichtounet.github.io/posts/2010/05/switch-kubuntu-to-ubuntu.html</guid><pubDate>Tue, 04 May 2010 04:32:38 GMT</pubDate></item><item><title>Ubuntu Lucid Lynx Tip : Put the window buttons to the right</title><link>http://wichtounet.github.io/posts/2010/05/ubuntu-lucid-lynx-buttons-right.html</link><description>&lt;div&gt;&lt;p&gt;In Ubuntu 10.04 (Lucid Lynx), the window buttons (minimize, maximize and close) are by default at the left of the window title like in Mac.&lt;/p&gt;
&lt;p&gt;This is really disappoiting when you upgrade from an older version of Ubuntu to this one.&lt;/p&gt;
&lt;p&gt;But it's really simple to solve that problem.&lt;/p&gt;
&lt;p&gt;Open a terminal and type this command :&lt;/p&gt;
&lt;pre&gt;gconf-editor&lt;/pre&gt;

&lt;p&gt;And then go to : apps &amp;gt; metacity &amp;gt; general. You'll see here a key named button_layout with the default value of "close,minimize,maximize:". To put the buttons like in the other versions, you just have to edit this value to&lt;/p&gt;
&lt;pre&gt;:minimize,maximize,close&lt;/pre&gt;

&lt;p&gt;And then all your windows  will have the normal button order at the right of the window title bar.&lt;/p&gt;
&lt;p&gt;If you want to include the window menu, you can change the value to :&lt;/p&gt;
&lt;pre&gt;menu:minimize,maximize,close&lt;/pre&gt;

&lt;p&gt;And you will the menu at the left before the title.&lt;/p&gt;&lt;/div&gt;</description><category>Linux</category><category>Tips</category><guid>http://wichtounet.github.io/posts/2010/05/ubuntu-lucid-lynx-buttons-right.html</guid><pubDate>Sat, 01 May 2010 15:52:30 GMT</pubDate></item><item><title>Tip : The bookmarks bar disappears on Google Chrome !</title><link>http://wichtounet.github.io/posts/2010/03/bookmarks-bar-disappears-google-chrome.html</link><description>&lt;div&gt;&lt;p&gt;I Found that my bookmarks bar on Google Chrome disappear sometimes. This behavior is very confusing, is searched a few and i find that it was me that make it disappears and appears.&lt;/p&gt;
&lt;p&gt;On Google Chrome, you can hide/display the bookmarks bar using &lt;ctrl&gt; + &lt;b&gt;.&lt;/b&gt;&lt;/ctrl&gt;&lt;/p&gt;
&lt;p&gt;Hope that will help someone.&lt;/p&gt;&lt;/div&gt;</description><category>Google</category><category>Tips</category><category>Tools</category><category>Web</category><guid>http://wichtounet.github.io/posts/2010/03/bookmarks-bar-disappears-google-chrome.html</guid><pubDate>Sun, 07 Mar 2010 14:15:44 GMT</pubDate></item><item><title>Tip : Don’t use shorts for loop indexes !</title><link>http://wichtounet.github.io/posts/2010/01/dont-use-shorts-in-loop.html</link><description>&lt;div&gt;&lt;p&gt;After a post I read on a french forum, i asked myself of the performances using shorts as loop indexes for loop with few iterations (less than 32768).&lt;/p&gt;
&lt;p&gt;At first view, it can be tempting because we save 2 octets, so why use an int instead a short ?&lt;/p&gt;
&lt;p&gt;But, when we think of that, we see that the int is more adapted. Indeed, it's more performant.&lt;/p&gt;
&lt;p&gt;Why ?&lt;/p&gt;
&lt;p&gt;In Java language, all the operations on integers are made in int. Thus, if we use a short as loop index, at each iterations, a typecasting will be made, that's really heavier than a simple affectation to int.&lt;/p&gt;
&lt;p&gt;Here were my first results :&lt;/p&gt;
&lt;pre&gt;Time for int : 1441 ms
Time for short : 3015 ms&lt;/pre&gt;

&lt;p&gt;The short version is two times slower !&lt;/p&gt;
&lt;p&gt;But like Jean have said, my first test was not correct at all because it doesn't consider some issues that could occurs with micro-benchmarks.&lt;/p&gt;
&lt;p&gt;So I write a new test using a Java Benchmarking framework from Brent Boyer. Here is a little test with that framework :&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;wicht&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;bb.util.Benchmark&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.concurrent.Callable&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ShortIndexesLoop&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Callable&lt;/span&gt; &lt;span class="n"&gt;callableInt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Callable&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
            &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Long&lt;/span&gt; &lt;span class="nf"&gt;call&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="mi"&gt;32760&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;
                      &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
                  &lt;span class="o"&gt;}&lt;/span&gt;

                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;};&lt;/span&gt;

        &lt;span class="n"&gt;Callable&lt;/span&gt; &lt;span class="n"&gt;callableShort&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Callable&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
            &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Long&lt;/span&gt; &lt;span class="nf"&gt;call&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;short&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="mi"&gt;32760&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;++){&lt;/span&gt;
                      &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
                  &lt;span class="o"&gt;}&lt;/span&gt;

                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;};&lt;/span&gt;

        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Result with int "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Benchmark&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;callableInt&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Result with short "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Benchmark&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;callableShort&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;printStackTrace&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And here are the results :&lt;/p&gt;
&lt;pre&gt;Result with int first = 695.181 us, mean = 43.233 us (CI deltas: -49.358 ns, +74.073 ns), sd = 42.938 us (CI deltas: -11.634 us, +16.426 us)
Result with short first = 733.224 us, mean = 45.679 us (CI deltas: -62.975 ns, +63.932 ns), sd = 45.567 us (CI deltas: -5.877 us, +8.020 us)&lt;/pre&gt;

&lt;p&gt;So the results are lower. This time, the short version is 5.657% slower than the int version. Note that this can vary a lot depending on your configuration.&lt;/p&gt;
&lt;p&gt;I talk here of for loops, but the case is the same when you use while loops with indexes.&lt;/p&gt;
&lt;p&gt;Here are also the results with long, double and float versions :&lt;/p&gt;
&lt;pre&gt;Result with long first = 816.555 us, mean = 104.771 us (CI deltas: -236.563 ns, +344.219 ns), sd = 143.295 us (CI deltas: -39.149 us, +63.700 us)
Result with float first = 1.018 ms, mean = 58.055 us (CI deltas: -87.036 ns, +113.537 ns), sd = 70.757 us (CI deltas: -14.269 us, +19.962 us)
Result with double first = 912.115 us, mean = 57.918 us (CI deltas: -66.644 ns, +91.312 ns), sd = 55.185 us (CI deltas: -12.617 us, +25.160 us)&lt;/pre&gt;

&lt;p&gt;We can see that the long version is the slowest one and that float and double are equivalent but slower than int and short.&lt;/p&gt;
&lt;p&gt;To conclude, always use int as loop indexes add a very little improvements of performances, but not a great thing and do not use long for loops indexes.&lt;/p&gt;&lt;/div&gt;</description><category>Benchmarks</category><category>Java</category><category>Performances</category><category>Tips</category><guid>http://wichtounet.github.io/posts/2010/01/dont-use-shorts-in-loop.html</guid><pubDate>Sun, 10 Jan 2010 14:12:33 GMT</pubDate></item></channel></rss>